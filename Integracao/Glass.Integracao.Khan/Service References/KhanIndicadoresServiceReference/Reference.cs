//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Glass.Integracao.Khan.KhanIndicadoresServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Indicadores", Namespace="http://schemas.datacontract.org/2004/07/KnIntegracao.Services")]
    [System.SerializableAttribute()]
    internal partial class Indicadores : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CODMOEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DATAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VALORField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CODMOE {
            get {
                return this.CODMOEField;
            }
            set {
                if ((object.ReferenceEquals(this.CODMOEField, value) != true)) {
                    this.CODMOEField = value;
                    this.RaisePropertyChanged("CODMOE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime DATA {
            get {
                return this.DATAField;
            }
            set {
                if ((this.DATAField.Equals(value) != true)) {
                    this.DATAField = value;
                    this.RaisePropertyChanged("DATA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal decimal VALOR {
            get {
                return this.VALORField;
            }
            set {
                if ((this.VALORField.Equals(value) != true)) {
                    this.VALORField = value;
                    this.RaisePropertyChanged("VALOR");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KhanIndicadoresServiceReference.IIndicadoresService")]
    internal interface IIndicadoresService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIndicadoresService/ConsultarIndicadores", ReplyAction="http://tempuri.org/IIndicadoresService/ConsultarIndicadoresResponse")]
        System.Collections.Generic.List<Glass.Integracao.Khan.KhanIndicadoresServiceReference.Indicadores> ConsultarIndicadores(string Token, string codempresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIndicadoresService/ConsultarIndicadores", ReplyAction="http://tempuri.org/IIndicadoresService/ConsultarIndicadoresResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Glass.Integracao.Khan.KhanIndicadoresServiceReference.Indicadores>> ConsultarIndicadoresAsync(string Token, string codempresa);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IIndicadoresServiceChannel : Glass.Integracao.Khan.KhanIndicadoresServiceReference.IIndicadoresService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class IndicadoresServiceClient : System.ServiceModel.ClientBase<Glass.Integracao.Khan.KhanIndicadoresServiceReference.IIndicadoresService>, Glass.Integracao.Khan.KhanIndicadoresServiceReference.IIndicadoresService {
        
        public IndicadoresServiceClient() {
        }
        
        public IndicadoresServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IndicadoresServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IndicadoresServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IndicadoresServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Glass.Integracao.Khan.KhanIndicadoresServiceReference.Indicadores> ConsultarIndicadores(string Token, string codempresa) {
            return base.Channel.ConsultarIndicadores(Token, codempresa);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Glass.Integracao.Khan.KhanIndicadoresServiceReference.Indicadores>> ConsultarIndicadoresAsync(string Token, string codempresa) {
            return base.Channel.ConsultarIndicadoresAsync(Token, codempresa);
        }
    }
}

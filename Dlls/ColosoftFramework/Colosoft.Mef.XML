<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Colosoft.Mef</name>
    </assembly>
    <members>
        <member name="T:Colosoft.Mef.ActivatedInstanceException">
            <summary>
            Representa o erro na ativação de um a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ActivatedInstanceException.#ctor(System.String,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Colosoft.Mef.AssemblyFromExportNotFoundEventArgs">
            <summary>
            Armazena os dados dos argumentos do evento 
            acionado quando o assembly não é encontrado.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyFromExportNotFoundEventArgs.#ctor(Colosoft.Reflection.Composition.IExport,System.Reflection.AssemblyName,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="export"></param>
            <param name="assemblyName"></param>
            <param name="error"></param>
        </member>
        <member name="P:Colosoft.Mef.AssemblyFromExportNotFoundEventArgs.Export">
            <summary>
            <see cref="T:Colosoft.Reflection.Composition.IExport"/> associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyFromExportNotFoundEventArgs.AssemblyName">
            <summary>
            Nome do assembly não encontrado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyFromExportNotFoundEventArgs.Error">
            <summary>
            Erro ocorrido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyFromExportNotFoundEventArgs.IsErrorHandled">
            <summary>
            Identifica se o erro foi tratado.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.AssemblyFromExportNotFoundHandler">
            <summary>
            Representa os eventos acionados quando o assembly do <see cref="T:Colosoft.Reflection.Composition.IExport"/> 
            não é encontrado.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Mef.AssemblyRepositoryCatalog">
            <summary>
            Implementação de um catalogo do repositório de assemblies.
            </summary>
        </member>
        <member name="F:Colosoft.Mef.AssemblyRepositoryCatalog._contracts">
            <summary>
            Tipos registrados no catálogos.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.#ctor(System.Lazy{Colosoft.Reflection.IAssemblyRepository},System.Lazy{Colosoft.Reflection.Composition.IExportManager},System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="assemblyRepository">Repositório dos assemblies.</param>
            <param name="exportManager">Gerenciador das exportações.</param>
            <param name="uiContext">Contexto de interface com o usuário que será utilizado.</param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.ThrowIfDisposed">
            <summary>
            Dispara uma exception caso a instancia já tenha sido liberada.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.OnFailLoadType(Colosoft.Reflection.TypeName,System.Exception)">
            <summary>
            Método acioando quando ocorre uma falha ao carrega o tipo.
            </summary>
            <param name="type"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.OnFailLoadAssembly(System.Reflection.AssemblyName,System.Exception)">
            <summary>
            Método acionado quando ocorre uma falha ao carregar o assemlbgyu
            </summary>
            <param name="name"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.OnFailLoadPackages(Colosoft.Reflection.AssemblyPart[],System.Exception)">
            <summary>
            Método acionado quando ocorre uma falha na carga dos pacotes.
            </summary>
            <param name="assemblyParts">Partes dos assemblies que serão usadas na carga.</param>
            <param name="error">Exception ocorrida.</param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.OnAssemblyFromExportNotFound(Colosoft.Reflection.Composition.IExport,System.Reflection.AssemblyName,System.Exception)">
            <summary>
            Método acionado quando o assembly do export não for encontrado.
            </summary>
            <param name="export"></param>
            <param name="assemblyName"></param>
            <param name="exception">Erro associado.</param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
            <summary>
            Método acionado quando o catálogo for alterado.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
            <summary>
            Método acionado quando o catálogo estiver sendo alterado.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverTypes(System.Collections.Generic.IEnumerable{Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo})">
            <summary>
            Recupera os tipos do catálogo.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.Initialized">
            <summary>
            Método acionado quando a instancia estiver sido inicializada.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.Add(Colosoft.Mef.AssemblyRepositoryCatalogRegister)">
            <summary>
            Adiciona um novo registrador para o catálogo.
            </summary>
            <param name="register"></param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
            Recupera os exports com base na definição de import informada.
            </summary>
            <param name="definition"></param>
            <returns></returns>
        </member>
        <member name="E:Colosoft.Mef.AssemblyRepositoryCatalog.Changed">
            <summary>
            Evento acionado quando o catálogo for alterado.
            </summary>
        </member>
        <member name="E:Colosoft.Mef.AssemblyRepositoryCatalog.Changing">
            <summary>
            Evento acionado quando o catálogo estiver sendo alterado.
            </summary>
        </member>
        <member name="E:Colosoft.Mef.AssemblyRepositoryCatalog.FailOnLoadType">
            <summary>
            Evento acionado quando ocorre uma falha na carga de um tipo.
            </summary>
        </member>
        <member name="E:Colosoft.Mef.AssemblyRepositoryCatalog.FailOnLoadAssembly">
            <summary>
            Evento acionado quando ocorre uma falha na carga do assembly.
            </summary>
        </member>
        <member name="E:Colosoft.Mef.AssemblyRepositoryCatalog.FailOnLoadPackages">
            <summary>
            Evento acionado quando ocorre uma falha na carga dos pacotes.
            </summary>
        </member>
        <member name="E:Colosoft.Mef.AssemblyRepositoryCatalog.AssemblyFromExportNotFound">
            <summary>
            Evento acionado quando o assembly do export não for encontrado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalog.AssemblyRepository">
            <summary>
            Instancia do repositório carregado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalog.ExportManager">
            <summary>
            Instancia do gerenciador de exportação.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalog.Observer">
            <summary>
            Instancia do observer associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalog.Parts">
            <summary>
            Partes carregadas pelo catálogo.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo">
            <summary>
            Armazena as informações do contrato.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo.#ctor(Colosoft.Reflection.TypeName,System.String,Colosoft.Reflection.TypeName)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="contractTypeName"></param>
            <param name="contractName"></param>
            <param name="type"></param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo.ContractType">
            <summary>
            Nome do tipo de contrato.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo.ContractName">
            <summary>
            Nome do contrato.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo.Types">
            <summary>
            Relação dos tipos associados com o contrato.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfoEqualityComparer">
            <summary>
            Implementação usada para compara as informações do contrato.
            </summary>
        </member>
        <member name="F:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfoEqualityComparer.Instance">
            <summary>
            Instancia única do comparador.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfoEqualityComparer.Equals(Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo,Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo)">
            <summary>
            Verifica se as instancia informadas são compatíveis.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfoEqualityComparer.GetHashCode(Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo)">
            <summary>
            HashCode.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer">
            <summary>
            Representa o container dos assemblies descobertos.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.IAssemblyContainer">
            <summary>
            Representa um container de assemblies.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer.#ctor(Colosoft.Mef.AssemblyRepositoryCatalog,System.Lazy{Colosoft.Reflection.IAssemblyRepository},Colosoft.Reflection.AssemblyPart[],System.Collections.Generic.IEnumerable{System.Tuple{Colosoft.Mef.AssemblyRepositoryCatalog.ContractInfo,Colosoft.Reflection.Composition.IExport}})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="assemblyRepositoryCatalog">Catalogo do repositório de assemblies.</param>
            <param name="assemblyRepository">Instancia do repositório dos assemblies.</param>
            <param name="packageParts">Partes do pacote que deverá ser descoberto.</param>
            <param name="exports">Exports.</param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer.Initialize">
            <summary>
            Inicializa a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer.TryGet(System.String,System.Reflection.Assembly@)">
            <summary>
            Tenta recuperar o assembly pelo nome informado.
            </summary>
            <param name="assemblyName">Nome do assembly que deverá ser recuperado.</param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer.TryGet(System.String,System.Reflection.Assembly@,System.Exception@)">
            <summary>
            Tenta recuperar o assembly pelo nome informado.
            </summary>
            <param name="assemblyName">Nome do assembly que deverá ser recuperado.</param>
            <param name="assembly">Instancia do assembly recuperado.</param>
            <param name="exception">Error ocorrido na recuperação do assembly.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer.Get(System.String[])">
            <summary>
            Tenta carrega os assemblies informados.
            </summary>
            <param name="assemblyNames">Nomes dos assemblies que serão carregados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer.GetEnumerator">
            <summary>
            Recupera o enumerador dos assemblies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador dos assemblies.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalog.DiscoverAssembliesContainer.Assemblies">
            <summary>
            Assemblies associados.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.AssemblyRepositoryCatalogConflict">
            <summary>
            Representa um conflito do catalogo do repositório de assembly.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalogConflict.#ctor(System.String,Colosoft.Reflection.TypeName)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="contractName"></param>
            <param name="contractType"></param>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalogConflict.ContractName">
            <summary>
            Nome do contrato.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalogConflict.ContractType">
            <summary>
            Tipo do contrato.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.AssemblyRepositoryCatalogException">
            <summary>
            Representa um erro do catalod do repositório de assembly.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalogException.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message">Mensagem do erro ocorrido.</param>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalogException.#ctor(System.String,System.Exception)">
            <summary>
            Cria uma instancia com a mensagem e o erro interno.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Colosoft.Mef.AssemblyRepositoryCatalogRegister">
            <summary>
            Classe usada para auxiliar o registro no catálogo.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalogRegister.Add``1">
            <summary>
            Adiciona um novo tipo para o catálogo.
            </summary>
            <typeparam name="T">Tipo que será adicionado.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalogRegister.Add``1(System.String)">
            <summary>
            Adiciona um novo tipo para o catálogo.
            </summary>
            <typeparam name="T">Tipo que será adicionado.</typeparam>
            <param name="contractName">Nome do contrato.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalogRegister.Add(Colosoft.Reflection.TypeName)">
            <summary>
            Adiciona um novo tipo para o catálogo.
            </summary>
            <param name="typeName">Nome do tipo que será adicionado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.AssemblyRepositoryCatalogRegister.Add(Colosoft.Reflection.TypeName,System.String,Colosoft.Reflection.TypeName)">
            <summary>
            Adiciona um novo tipo para o catálogo.
            </summary>
            <param name="contractTypeName">Nome do tipo que será adicionado.</param>
            <param name="contractName">Nome do contrato.</param>
            <param name="type">Tipo associado.</param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.AssemblyRepositoryCatalogRegister.Contracts">
            <summary>
            Lista dos contratos carregados.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ComposableConstructor">
            <summary>
            Armazena as informações de um membro construtor.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ComposableMember">
            <summary>
            Representa um membro de composição.
            </summary>
        </member>
        <member name="F:Colosoft.Mef.ComposableMember._elementType">
            <summary>
            Recupera o tipo deo elemento generico.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.#cctor">
            <summary>
            Construtor geral.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Cria a instancia a partir das informações do membro.
            </summary>
            <param name="member">Membro que será exportado.</param>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.Create(System.Reflection.MemberInfo)">
            <summary>
            Cria um novo <see cref="T:Colosoft.Mef.ComposableMember"/> para o especifico <paramref name="member"/>
            </summary>
            <param name="member">Membro que será usado na criação.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.GetImportValueFromExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
            <summary>
            Recupera o valor importado com base no exports.
            </summary>
            <param name="exports"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.GetValue(System.Object)">
            <summary>
            Recupera o valor do membro.
            </summary>
            <param name="instance">Instancia de onde o valor será recuperado.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.SetValue(System.Object,System.Object)">
            <summary>
            Define o valor para o membro.
            </summary>
            <param name="instance">Instancia onde o membro está inserido.</param>
            <param name="value">Valor que será atribuído.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.ToLazyType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.GetElementType">
            <summary>
            Recupera o tipo do elemento.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.GetImportValueCollection(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
            <summary>
            Recupera o valor importado.
            </summary>
            <param name="exports"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.ToLazyT``1(System.ComponentModel.Composition.Primitives.Export)">
            <summary>
            Cria um Lazy para exportar o valor do membro.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="export"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ComposableMember.GetImportValueSingle(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
            <summary>
            Recupera o valor simple com base nos exports.
            </summary>
            <param name="exports"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.DeclaringType">
            <summary>
            tipo do objeto que o membro pertence a exportável.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.ElementType">
            <summary>
            Tipo do elemento.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.IsLazyType">
            <summary>
            Identifica se o tipo possui cargar tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.IsReadable">
            <summary>
            Identifica o valor pode ser recuperado do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.IsInstanceNeeded">
            <summary>
            Identifica se é necessário uma instancia para o valor ser recuperado ou definido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.IsWritable">
            <summary>
            Identifica se o valor pode ser definido para o membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.Member">
            <summary>
            Instancia do membro associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.ReturnType">
            <summary>
            Tipo do retorno do valor.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.ValueGetter">
            <summary>
            Função usada para recuperar o valor do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMember.ValueSetter">
            <summary>
            Função usada para definir o valor do membro.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableConstructor.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Colosoft.Mef.ComposableConstructor.GetValue(System.Object)">
            <summary>
            Recupera o valor do membro.
            </summary>
            <param name="instance">Instancia de onde o valor será recuperado.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:Colosoft.Mef.ComposableConstructor.IsLazyType">
            <summary>
            Identifica se o tipo possui cargar tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableConstructor.IsReadable">
            <summary>
            Identifica o valor pode ser recuperado do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableConstructor.IsInstanceNeeded">
            <summary>
            Identifica se é necessário uma instancia para o valor ser recuperado ou definido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableConstructor.IsWritable">
            <summary>
            Identifica se o valor pode ser definido para o membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableConstructor.Constructor">
            <summary>
            Instancia do construtor.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableConstructor.ReturnType">
            <summary>
            Tipo de retorno.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ComposableField">
            <summary>
            Armazena as informações de um membro do tipo campo.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableField.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="member"></param>
        </member>
        <member name="P:Colosoft.Mef.ComposableField.Field">
            <summary>
            Instancia do campo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableField.IsLazyType">
            <summary>
            Identifica se o tipo possui cargar tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableField.IsReadable">
            <summary>
            Identifica o valor pode ser recuperado do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableField.IsInstanceNeeded">
            <summary>
            Identifica se é necessário uma instancia para o valor ser recuperado ou definido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableField.IsWritable">
            <summary>
            Identifica se o valor pode ser definido para o membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableField.ReturnType">
            <summary>
            Tipo de retorno.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ComposableMemberParameterException">
            <summary>
            Representa o erro ocorrido ao carregar o parametro
            do import de um classe.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableMemberParameterException.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableMemberParameterException.#ctor(Colosoft.Mef.ComposableMember,Colosoft.Mef.ProviderParameterImportDefinition,System.Exception)">
            <summary>
            Construtro padrão.
            </summary>
            <param name="member"></param>
            <param name="parameter"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Colosoft.Mef.ComposableMemberParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Colosoft.Mef.ComposableMemberParameterException.Member">
            <summary>
            Membro da composição.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMemberParameterException.Parameter">
            <summary>
            Instancia do parametro.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ComposableMethod">
            <summary>
            Prover uma abstração para trabalhar com um método a nível de refleção.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableMethod.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="member"></param>
        </member>
        <member name="P:Colosoft.Mef.ComposableMethod.Method">
            <summary>
            Instancia do método aciado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMethod.IsLazyType">
            <summary>
            Identifica se o tipo possui cargar tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMethod.IsReadable">
            <summary>
            Identifica o valor pode ser recuperado do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMethod.IsInstanceNeeded">
            <summary>
            Identifica se é necessário uma instancia para o valor ser recuperado ou definido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMethod.IsWritable">
            <summary>
            Identifica se o valor pode ser definido para o membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableMethod.ReturnType">
            <summary>
            Tipo de retorno.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ComposableParameter">
            <summary>
            Prover uma abstração para trabalhar com um parametro a nível de refleção.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableParameter.#ctor(System.Reflection.ParameterInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Colosoft.Mef.ComposableParameter.ReturnType">
            <summary>
            Tipo de retorno.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableParameter.Parameter">
            <summary>
            Parametro associado com a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableParameter.IsLazyType">
            <summary>
            Identifica se o tipo possui cargar tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableParameter.IsReadable">
            <summary>
            Identifica o valor pode ser recuperado do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableParameter.IsInstanceNeeded">
            <summary>
            Identifica se é necessário uma instancia para o valor ser recuperado ou definido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableParameter.IsWritable">
            <summary>
            Identifica se o valor pode ser definido para o membro.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ComposableProperty">
            <summary>
            Prover uma abstração para trabalhar com uma propriedade a nível de refleção.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableProperty.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="member"></param>
        </member>
        <member name="P:Colosoft.Mef.ComposableProperty.Property">
            <summary>
            Instancia da informações da propriedade associada.
            </summary>
            <value>A <see cref="T:System.Reflection.PropertyInfo"/> object.</value>
        </member>
        <member name="P:Colosoft.Mef.ComposableProperty.IsLazyType">
            <summary>
            Identifica se o tipo possui cargar tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableProperty.IsReadable">
            <summary>
            Identifica o valor pode ser recuperado do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableProperty.IsInstanceNeeded">
            <summary>
            Identifica se é necessário uma instancia para o valor ser recuperado ou definido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableProperty.IsWritable">
            <summary>
            Identifica se o valor pode ser definido para o membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableProperty.ReturnType">
            <summary>
            Tipo de retorno.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ComposableType">
            <summary>
            Prover uma abstração para trabalhar com um tipo a nível de refleção.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposableType.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Colosoft.Mef.ComposableType.GetValue(System.Object)">
            <summary>
            Recupera o valor do membro.
            </summary>
            <param name="instance">Instancia de onde o valor será recuperado.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:Colosoft.Mef.ComposableType.DeclaringType">
            <summary>
            Tipo de declaração.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableType.IsLazyType">
            <summary>
            Identifica se o tipo possui cargar tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableType.IsReadable">
            <summary>
            Identifica o valor pode ser recuperado do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableType.IsInstanceNeeded">
            <summary>
            Identifica se é necessário uma instancia para o valor ser recuperado ou definido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableType.IsWritable">
            <summary>
            Identifica se o valor pode ser definido para o membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ComposableType.ReturnType">
            <summary>
            Tipo de retorno.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.CompositionServices">
            <summary>
            Prover os serviço associados com um provedor de composição.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetContractNameFromExportDescription(System.Func{System.Reflection.MemberInfo},Colosoft.Mef.ExportDescription)">
            <summary>
            Recupera o nome do contrato do <see cref="T:System.Reflection.MemberInfo"/> e <see cref="T:Colosoft.Mef.ExportDescription"/>.
            </summary>
            <param name="memberGetter">Informações sobre o membro.</param>
            <param name="exportDescription">Informações sobre a definição de export.</param>
            <returns>Nome do contrato.</returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetContractNameFromImportDescription(System.Lazy{System.Reflection.MemberInfo},Colosoft.Mef.ImportDescription)">
            <summary>
            Recupera o nome do contrato do <see cref="T:System.Reflection.MemberInfo"/> e <see cref="T:Colosoft.Mef.ImportDescription"/>.
            </summary>
            <param name="member">Informações do membro.</param>
            <param name="importDescription">Informações sobre a definição do import.</param>
            <returns>Nome do contrato.</returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetContractNameFromImportDescription(System.Reflection.ParameterInfo,Colosoft.Mef.ImportDescription)">
            <summary>
            Recupera o nome do contrato do <see cref="T:System.Reflection.ParameterInfo"/> e <see cref="T:Colosoft.Mef.ExportDescription"/>
            </summary>
            <param name="member">Informações sobre o membro.</param>
            <param name="importDescription">Informações sobre a definição de export.</param>
            <returns>Nome do contrato.</returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetMetadataFromExportDescription(System.Func{System.Reflection.MemberInfo},Colosoft.Mef.ExportDescription,System.ComponentModel.Composition.CreationPolicy)">
            <summary>
            
            </summary>
            <param name="memberGetter"></param>
            <param name="exportDescription"></param>
            <param name="creationPolicy"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetMetadataFromImportDescription(System.Lazy{System.Reflection.MemberInfo},Colosoft.Mef.ImportDescription)">
            <summary>
            Recupera os metadados de um descrição de import.
            </summary>
            <param name="member"></param>
            <param name="importDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetMetadataFromImportDescription(System.Reflection.ParameterInfo,Colosoft.Mef.ImportDescription)">
            <summary>
            Recupera os metadados de um descrição de import.
            </summary>
            <param name="parameter"></param>
            <param name="importDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetTypeIdentityFromExportDescription(System.Func{System.Reflection.MemberInfo},Colosoft.Mef.ExportDescription)">
            <summary>
            
            </summary>
            <param name="memberGetter"></param>
            <param name="export"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetTypeIdentityFromImportDescription(System.Lazy{System.Reflection.MemberInfo},Colosoft.Mef.ImportDescription)">
            <summary>
            Recupera a identidade do tipo com base na descrição do import.
            </summary>
            <param name="member"></param>
            <param name="import"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetTypeIdentityFromImportDescription(System.Reflection.ParameterInfo,Colosoft.Mef.ImportDescription)">
            <summary>
            Recupera a identidade do para paremtro.
            </summary>
            <param name="parameterInfo"></param>
            <param name="import"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetDefaultTypeFromMember(System.Reflection.MemberInfo)">
            <summary>
            Recupera o tipo padrão para o membro.
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.CompositionServices.GetRequiredCreationPolicy(System.ComponentModel.Composition.Primitives.ImportDefinition)">
            <summary>
            Recupera o politica de criação requerida.
            </summary>
            <param name="definition"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.ConfigurableTypeCatalog">
            <summary>
            Essa classe representa a configuração de typos de dados anexados ao catalogo
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ConfigurableTypeCatalog.#ctor">
            <summary>
            Contsrutor padrão
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ConfigurableTypeCatalog.#ctor(System.String)">
            <summary>
            Contrutor lendo de outra configuração
            </summary>
            <param name="sectionName"></param>
        </member>
        <member name="M:Colosoft.Mef.ConfigurableTypeCatalog.GetTypes">
            <summary>
            Recupera os tipos configurados.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ConfigurableTypeCatalog.GetTypes(System.String)">
            <summary>
            Recupera os tipos da seção de configuração.
            </summary>
            <param name="sectionName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ConfigurableTypeCatalog.GetSection(System.String)">
            <summary>
            Recupera a seção de configuração.
            </summary>
            <param name="sectionName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.ConfigurableTypeCollection">
            <summary>
            Essa classe representa a coleção de tipos que serão exportados
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ConfigurableTypeCollection.CreateNewElement">
            <summary>
            Retorna a instância de um novo elemento
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ConfigurableTypeCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Retorna a chave de identificação do elemento
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.ConfigurableTypeCollection.ElementName">
            <summary>
            Nome do elemento no xml
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ConfigurableTypeCollection.CollectionType">
            <summary>
            Tipo da coleção
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ConfigurableTypeElement">
            <summary>
            Essa classe representa a estrutura de registro de tipos para o MEF
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ConfigurableTypeElement.TypeExport">
            <summary>
            Retorna o tipo a ser inserido
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ConfigurableTypeSection">
            <summary>
            Essa classe representa a ~configuração dos tipos
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ConfigurableTypeSection.Parts">
            <summary>
            Representa cada tipo configurado
            </summary>
        </member>
        <member name="T:Colosoft.Mef.DefaultCatalog">
            <summary>
            Catalogo padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.DefaultCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parts"></param>
        </member>
        <member name="P:Colosoft.Mef.DefaultCatalog.Parts">
            <summary>
            Partes do catalogo.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.DefaultServiceRegister">
            <summary>
            Classe que auxilia no registro padrão do serviço.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.DefaultServiceRegister.GetDefaultComposablePartCatalog">
            <summary>
            Recupera o catalogo padrão.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.DefaultServiceRegister.GetRequiredPartsToRegister(System.ComponentModel.Composition.Hosting.AggregateCatalog)">
            <summary>
            Recupera as partes requeridas para o registro.
            </summary>
            <param name="aggregateCatalog"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.DefaultServiceRegister.RegisterRequiredServicesIfMissing(System.ComponentModel.Composition.Hosting.AggregateCatalog)">
            <summary>
            Registra os requisitos.
            </summary>
            <param name="aggregateCatalog"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.DefinitionCatalog">
            <summary>
            Implementação do catalogo de definições.
            </summary>
        </member>
        <member name="F:Colosoft.Mef.DefinitionCatalog._processingExceptions">
            <summary>
            Fila da exceptions ocorridas.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.DefinitionCatalog.#ctor(Colosoft.Mef.IAssemblyContainer,System.Collections.Generic.IEnumerable{Colosoft.Mef.PartDescription})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="assemblies"></param>
            <param name="partDescriptions"></param>
        </member>
        <member name="M:Colosoft.Mef.DefinitionCatalog.GetComposablePartDefinitions">
            <summary>
            Gets a list of all composable part definitions which was discovered by the catalog.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> object.</returns>
        </member>
        <member name="M:Colosoft.Mef.DefinitionCatalog.GetExportDefinitions(Colosoft.Mef.PartDescription)">
            <summary>
            Recupera a lista de todas as definições de export para a parte.
            </summary>
            <param name="part"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.DefinitionCatalog.GetParametersImportDefinitions(Colosoft.Mef.PartDescription)">
            <summary>
            Recupera as definição para importar os parametros
            </summary>
            <param name="part"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.DefinitionCatalog.GetImportDefinitions(Colosoft.Mef.PartDescription,Colosoft.Mef.ProviderParameterImportDefinitionContainer)">
            <summary>
            Recupera uma lista de todas as definições de import da parte.
            </summary>
            <param name="part"></param>
            <param name="providerParameterImportContainer"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.DefinitionCatalog.GetMemberInfo(Colosoft.Reflection.TypeName,System.String)">
            <summary>
            Recupera o membro específico.
            </summary>
            <param name="typeName"></param>
            <param name="memberName"></param>
            <returns>A <see cref="T:System.Reflection.MemberInfo"/> object.</returns>
        </member>
        <member name="P:Colosoft.Mef.DefinitionCatalog.Parts">
            <summary>
            Partes do catálogo.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.DefinitionCatalog.ProviderExportDefinitionMemberGetter">
            <summary>
            Classe em encapsula a recupera do membro.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.DefinitionCatalog.ProviderExportDefinitionMemberGetter.#ctor(Colosoft.Mef.DefinitionCatalog,Colosoft.Mef.PartDescription,Colosoft.Mef.ExportDescription)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="catalog"></param>
            <param name="part"></param>
            <param name="export"></param>
        </member>
        <member name="M:Colosoft.Mef.DefinitionCatalog.ProviderExportDefinitionMemberGetter.GetMember">
            <summary>
            Instancia do membro associado.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ExportDescription">
            <summary>
            Define uma descrição abstrata de um Export.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ExportDescription.ContractName">
            <summary>
            Nome do contrato.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ExportDescription.ContractTypeName">
            <summary>
            Tipo do contrato.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ExportDescription.ContractType">
            <summary>
            Tipo do contrato associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ExportDescription.MemberName">
            <summary>
            Nome do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ExportDescription.Metadata">
            <summary>
            Metadados associados com o export.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IDictionary`2"/> object.</value>
        </member>
        <member name="T:Colosoft.Mef.ExportProviderExtensions">
            <summary>
            Metodos de extensão para o provedor de exportação.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.#cctor">
            <summary>
            Construtor estático.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.GetRootExportProvider(System.ComponentModel.Composition.Hosting.CompositionContainer)">
            <summary>
            Recupera o provedor de export.
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.GetComposeParts(System.ComponentModel.Composition.Hosting.ComposablePartExportProvider)">
            <summary>
            Recupera as parts do export provider informado.
            </summary>
            <param name="exportProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.BuildImportDefinition(System.Type,System.Type,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
            <summary>
            Constrói da definição de import.
            </summary>
            <param name="type"></param>
            <param name="metadataViewType"></param>
            <param name="contractName"></param>
            <param name="cardinality"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.IsDefaultMetadataViewType(System.Type)">
            <summary>
            Verifica se o tipo de view de metadados padrão.
            </summary>
            <param name="metadataViewType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.GetAttributes``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Recupera osm atributos do tipo especificado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="attributeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.GetFirstAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Recupera o primeiro atributo do tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="attributeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.GetAllProperties(System.Type)">
            <summary>
            Recupera todas as propriedades do tipo informado
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.GetRequiredMetadata(System.Type)">
            <summary>
            Recupera os metadados requeridos
            </summary>
            <param name="metadataViewType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.IsViewTypeValid(System.Type)">
            <summary>
            Verifica se é um tipo de view válida.
            </summary>
            <param name="metadataViewType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.TryGetExportDefintions(System.ComponentModel.Composition.Hosting.ExportProvider,System.Type,System.String,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}@)">
            <summary>
            Tenta recupera as definições de exportação.
            </summary>
            <param name="exportProvider"></param>
            <param name="type"></param>
            <param name="contractName"></param>
            <param name="exportDefintions"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.GetExportDefinitions(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.String,System.String)">
            <summary>
            Recupera a definição de export 
            </summary>
            <param name="catalog"></param>
            <param name="contractName"></param>
            <param name="typeFullName"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.GetExportDefinitions(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.String,System.String)">
            <summary>
            Localiza a definição de export com os parametros informados.
            </summary>
            <param name="exportDefintions"></param>
            <param name="contractName"></param>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportProviderExtensions.TryGetExports(System.ComponentModel.Composition.Hosting.ExportProvider,System.Type,System.String,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)">
            <summary>
            Tenta recuperar os exposrt do tipo informado.
            </summary>
            <param name="exportProvider"></param>
            <param name="type"></param>
            <param name="contractName">Nome do contrato.</param>
            <param name="exports"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.FailOnLoadAssemblyArgs">
            <summary>
            Armazena os argumentos do evento acionado quando ocorre um falha ao carregar o assembly.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.FailOnLoadAssemblyArgs.#ctor(System.Reflection.AssemblyName,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="assemblyName">Nome do assembly.</param>
            <param name="error">Erro ocorrido.</param>
        </member>
        <member name="P:Colosoft.Mef.FailOnLoadAssemblyArgs.AssemblyName">
            <summary>
            Nome do assembly.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.FailOnLoadAssemblyArgs.Error">
            <summary>
            Erro ocorrido.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.FailOnLoadAssemblyHandler">
            <summary>
            Representa os eventos acioando quando ocorre um erro ao carregar o assembly.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Mef.FailOnLoadPackagesArgs">
            <summary>
            Armazena os dados dos argumentos do evento acionado quando
            ocorre uma falha ao carregar os pacotes.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.FailOnLoadPackagesArgs.#ctor(Colosoft.Reflection.AssemblyPart[],System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="assemblyParts">Partes dos assemblies.</param>
            <param name="error"></param>
        </member>
        <member name="P:Colosoft.Mef.FailOnLoadPackagesArgs.Error">
            <summary>
            Error ocorrido.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.FailOnLoadPackagesArgs.AssemblyParts">
            <summary>
            Partes que foram solicitadas na carga.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.FailOnLoadPackagesHandler">
            <summary>
            Representa os eventos acionados quando ocorre um erro ao carregar os pacotes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Mef.FailOnLoadTypeEventArgs">
            <summary>
            Armazena os dados do argumento da falha para a carga de um tipo.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.FailOnLoadTypeEventArgs.#ctor(Colosoft.Reflection.TypeName,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="type"></param>
            <param name="exception"></param>
        </member>
        <member name="P:Colosoft.Mef.FailOnLoadTypeEventArgs.Type">
            <summary>
            Nome do tipo;
            </summary>
        </member>
        <member name="P:Colosoft.Mef.FailOnLoadTypeEventArgs.Error">
            <summary>
            Erro ocorrido.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.FailOnLoadTypeHandler">
            <summary>
            Representa os eventos acionados quando ocorre uma falha ao carregar um tipo.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Mef.IAssemblyRepositoryCatalogObserver">
            <summary>
            Assinatura do observer do catalogo do repositório de assemblies do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.IAssemblyRepositoryCatalogObserver.FailOnLoadType(Colosoft.Mef.FailOnLoadTypeEventArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carregar
            um tipo para o sistema.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.IAssemblyRepositoryCatalogObserver.FailOnLoadAssembly(Colosoft.Mef.FailOnLoadAssemblyArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carregar
            um assembly para o sistema.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.IAssemblyRepositoryCatalogObserver.FailOnLoadPackages(Colosoft.Mef.FailOnLoadPackagesArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carrega 
            os pacotes para o sistema
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.IAssemblyRepositoryCatalogObserver.AssemblyFromExportNotFound(Colosoft.Mef.AssemblyFromExportNotFoundEventArgs)">
            <summary>
            Método acionado quando não for encontrado o assembly
            para o export informado.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Mef.AggregateAssemblyRepositoryCatalogObserver">
            <summary>
            Implementação do agregador do observer <see cref="T:Colosoft.Mef.IAssemblyRepositoryCatalogObserver"/>.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.AggregateAssemblyRepositoryCatalogObserver.FailOnLoadType(Colosoft.Mef.FailOnLoadTypeEventArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carregar
            um tipo para o sistema.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.AggregateAssemblyRepositoryCatalogObserver.FailOnLoadAssembly(Colosoft.Mef.FailOnLoadAssemblyArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carregar
            um assembly para o sistema.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.AggregateAssemblyRepositoryCatalogObserver.FailOnLoadPackages(Colosoft.Mef.FailOnLoadPackagesArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carrega 
            os pacotes para o sistema
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.AggregateAssemblyRepositoryCatalogObserver.AssemblyFromExportNotFound(Colosoft.Mef.AssemblyFromExportNotFoundEventArgs)">
            <summary>
            Método acionado quando não for encontrado o assembly
            para o export informado.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Mef.PreConfigureResult">
            <summary>
            Representa o resultado de uma préconfiguração.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.PreConfigureResult.#ctor(System.Boolean,System.Type[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="success"></param>
            <param name="types"></param>
        </member>
        <member name="P:Colosoft.Mef.PreConfigureResult.Success">
            <summary>
            Identifica se a operação foi realizada com sucesso.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.PreConfigureResult.Types">
            <summary>
            Relação dos tipos que estão com problema.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.IExportConfigurator">
            <summary>
            Assinatura da classe responsável pela configuração dos Exports do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.IExportConfigurator.PreConfigure(System.Type,System.String,Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <param name="type"></param>
            <param name="contractName"></param>
            <param name="result">Informações do resultado da pré-configuração.</param>
        </member>
        <member name="M:Colosoft.Mef.IExportConfigurator.PreConfigure(System.Type,System.String)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <param name="type"></param>
            <param name="contractName"></param>
        </member>
        <member name="M:Colosoft.Mef.IExportConfigurator.PreConfigure``1(System.String,Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo associado com o contrato informado.
            </summary>
            <typeparam name="T">Tipo que será pré configurado.</typeparam>
            <param name="contractName"></param>
            <param name="result">Informações do resultado da pré-configuração.</param>
        </member>
        <member name="M:Colosoft.Mef.IExportConfigurator.PreConfigure``1(System.String)">
            <summary>
            Pré-configura os exports do tipo associado com o contrato informado.
            </summary>
            <typeparam name="T">Tipo que será pré configurado.</typeparam>
            <param name="contractName"></param>
        </member>
        <member name="M:Colosoft.Mef.IExportConfigurator.PreConfigure``1(Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result">Informações do resultado da pré-configuração.</param>
        </member>
        <member name="M:Colosoft.Mef.IExportConfigurator.PreConfigure``1">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Mef.IExportConfigurator.GetExportTypes(System.Type)">
            <summary>
            Recupera os tipos que implementam os exports do tipo informado.
            </summary>
            <param name="type">Tipo que será analisado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.IExportConfigurator.GetExportTypes(System.Type,System.String)">
            <summary>
            Recupera os tipos que implementam os exports do tipo informado.
            </summary>
            <param name="type">Tipo que será analisado.</param>
            <param name="contractName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.ExportConfiguratorFake">
            <summary>
            Implementação fake do configurador.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ExportConfiguratorFake.PreConfigure(System.Type,System.String,Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <param name="type"></param>
            <param name="contractName"></param>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfiguratorFake.PreConfigure(System.Type,System.String)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <param name="type"></param>
            <param name="contractName"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfiguratorFake.PreConfigure``1(System.String,Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo associado com o contrato informado.
            </summary>
            <typeparam name="T">Tipo que será pré configurado.</typeparam>
            <param name="contractName"></param>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfiguratorFake.PreConfigure``1(System.String)">
            <summary>
            Pré-configura os exports do tipo associado com o contrato informado.
            </summary>
            <typeparam name="T">Tipo que será pré configurado.</typeparam>
            <param name="contractName"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfiguratorFake.PreConfigure``1(Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfiguratorFake.PreConfigure``1">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Mef.ExportConfiguratorFake.GetExportTypes(System.Type)">
            <summary>
            Recupera os tipos que implementam os exports do tipo informado.
            </summary>
            <param name="type">Tipo que será analisado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportConfiguratorFake.GetExportTypes(System.Type,System.String)">
            <summary>
            Recupera os tipos que implementam os exports do tipo informado.
            </summary>
            <param name="type">Tipo que será analisado.</param>
            <param name="contractName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.ExportConfigurator">
            <summary>
            Classe responsável pela configuração dos exports do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="exportProvider"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.PreConfigure(System.Type,System.String,Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <param name="type"></param>
            <param name="contractName"></param>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.PreConfigure(System.Type,System.String)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <param name="type"></param>
            <param name="contractName"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.PreConfigure``1(System.String,Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo associado com o contrato informado.
            </summary>
            <typeparam name="T">Tipo que será pré configurado.</typeparam>
            <param name="contractName"></param>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.PreConfigure``1(System.String)">
            <summary>
            Pré-configura os exports do tipo associado com o contrato informado.
            </summary>
            <typeparam name="T">Tipo que será pré configurado.</typeparam>
            <param name="contractName"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.PreConfigure``1(Colosoft.Mef.PreConfigureResult@)">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.PreConfigure``1">
            <summary>
            Pré-configura os exports do tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.GetExportTypes(System.Type)">
            <summary>
            Recupera os tipos que implementam os exports do tipo informado.
            </summary>
            <param name="type">Tipo que será analisado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ExportConfigurator.GetExportTypes(System.Type,System.String)">
            <summary>
            Recupera os tipos que implementam os exports do tipo informado.
            </summary>
            <param name="type">Tipo que será analisado.</param>
            <param name="contractName"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.ExportConfigurator.Instance">
            <summary>
            Instancia global do configurador.
            </summary>
        </member>
        <member name="T:Colosoft.IExportConfiguratorExtensions">
            <summary>
            Classe com método de extensão para o IExportConfigurator.
            </summary>
        </member>
        <member name="M:Colosoft.IExportConfiguratorExtensions.Valid``1(Colosoft.Mef.IExportConfigurator,System.String)">
            <summary>
            Verifica se existem algum exportação para o tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configurator"></param>
            <param name="contractName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.ImportDescription">
            <summary>
            Armazena os dados da descrição do import.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportDescription.AllowDefault">
            <summary>
            Identifica se permite um valor padrão.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportDescription.ContractName">
            <summary>
            Nome do contrato.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportDescription.ContractTypeName">
            <summary>
            Nome do tipo de contrato associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportDescription.ContractType">
            <summary>
            Tipo do contrato.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportDescription.MemberName">
            <summary>
            Nome do membro que será importado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportDescription.Prerequisite">
            <summary>
            Indica se a definição de import é requerida para satisfazer 
            uma parte antes de iniciar a produção dos objetos exportados.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportDescription.Recomposable">
            <summary>
            Identifica se a definição de importação satisfaz multiplas vezes.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportDescription.RequiredMetadata">
            <summary>
            Recupera a lista dos nomes dos metadados que o import necessita para satisfazer.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ImportingConstructorParameterDescription">
            <summary>
            Representa um parametro 
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ImportingConstructorParameterDescription.Name">
            <summary>
            Nome do parametro.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ImportingConstructorDescription">
            <summary>
            Representa a descrição da importação do construtor.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ImportingConstructorDescription.#ctor(Colosoft.Reflection.TypeName,Colosoft.Mef.ImportingConstructorParameterDescription[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeName">Tipo que contem o construtor.</param>
            <param name="parameters"></param>        
        </member>
        <member name="M:Colosoft.Mef.ImportingConstructorDescription.GetParameters(Colosoft.Mef.IAssemblyContainer)">
            <summary>
            Recupera os parametros.
            </summary>
            <param name="assemblyContainer"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ImportingConstructorDescription.GetType(Colosoft.Mef.IAssemblyContainer)">
            <summary>
            Recupera o tipo associado com a instancia.
            </summary>
            <param name="assemblyContainer"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ImportingConstructorDescription.GetConstructor(Colosoft.Mef.IAssemblyContainer)">
            <summary>
            Recupera a instancia do construtor associado.
            </summary>
            <param name="assemblyContainer"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ImportingConstructorDescription.GetParameterImportDefinitions(Colosoft.Mef.IAssemblyContainer)">
            <summary>
            Recupera os parametros do construtor.
            </summary>
            <param name="assemblyContainer"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.InstanceCatalog">
            <summary>
            Implementação de um catálogo de instancias.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.InstanceCatalog.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.InstanceCatalog.Add(System.Type,System.Lazy{System.Object})">
            <summary>
            Adiciona uma nova instancia.
            </summary>
            <param name="type">Tipo da instancia.</param>
            <param name="value">Valor da instancia.</param>
        </member>
        <member name="M:Colosoft.Mef.InstanceCatalog.Add``1(System.Lazy{``0})">
            <summary>
            Adiciona uma nova instancia.
            </summary>
            <typeparam name="T">Tipo da instancia.</typeparam>
            <param name="value">Valor da instancia.</param>
        </member>
        <member name="P:Colosoft.Mef.InstanceCatalog.Parts">
            <summary>
            Recupera as partes do catalogo.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.InstanceComposablePart">
            <summary>
            ComposablePart para instancias.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.InstanceComposablePart.#ctor(Colosoft.Mef.TypeInstance,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeInstance"></param>
            <param name="metadata"></param>
        </member>
        <member name="M:Colosoft.Mef.InstanceComposablePart.GetExportedValue(System.ComponentModel.Composition.Primitives.ExportDefinition)">
            <summary>
            Recupera o valor exportado.
            </summary>
            <param name="definition"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.InstanceComposablePart.SetImport(System.ComponentModel.Composition.Primitives.ImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
            <summary>
            Define o import.
            </summary>
            <param name="definition"></param>
            <param name="exports"></param>
        </member>
        <member name="M:Colosoft.Mef.InstanceComposablePart.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.InstanceComposablePart.ImportDefinitions">
            <summary>
            Definições de importação.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.InstanceComposablePart.ExportDefinitions">
            <summary>
            Definições de exportação.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.InstanceComposablePart.Metadata">
            <summary>
            Metadados.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.InstanceComposablePartDefinition">
            <summary>
            Armazena a definição da parte de composição.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.InstanceComposablePartDefinition.#ctor(Colosoft.Mef.TypeInstance)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Colosoft.Mef.InstanceComposablePartDefinition.CreatePart">
            <summary>
            Cria um parte de composição.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.InstanceComposablePartDefinition.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.InstanceComposablePartDefinition.ExportDefinitions">
            <summary>
            Recupera  definição de export.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.InstanceComposablePartDefinition.ImportDefinitions">
            <summary>
            Definições de importação.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.InstanceComposablePartDefinition.Metadata">
            <summary>
            Metadados.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.LoggerAssemblyRepositoryCatalogObserver">
            <summary>
            Implementação do Observer que registra os dados no log.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.LoggerAssemblyRepositoryCatalogObserver.#ctor(Colosoft.Logging.ILogger)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Colosoft.Mef.LoggerAssemblyRepositoryCatalogObserver.FailOnLoadType(Colosoft.Mef.FailOnLoadTypeEventArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carregar
            um tipo para o sistema.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.LoggerAssemblyRepositoryCatalogObserver.FailOnLoadAssembly(Colosoft.Mef.FailOnLoadAssemblyArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carregar
            um assembly para o sistema.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.LoggerAssemblyRepositoryCatalogObserver.FailOnLoadPackages(Colosoft.Mef.FailOnLoadPackagesArgs)">
            <summary>
            Método acionado quando ocorre uma falha ao carrega 
            os pacotes para o sistema
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Mef.LoggerAssemblyRepositoryCatalogObserver.AssemblyFromExportNotFound(Colosoft.Mef.AssemblyFromExportNotFoundEventArgs)">
            <summary>
            Método acionado quando não for encontrado o assembly
            para o export informado.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Mef.MefBootstrapper">
            <summary>
            Implementação do bootstrapping usadando o MEF.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.MefBootstrapper.Run">
            <summary>
            Executa o Bootstrapper
            </summary>
        </member>
        <member name="M:Colosoft.Mef.MefBootstrapper.ConfigureServiceLocator">
            <summary>
            Configura o Locator
            </summary>
        </member>
        <member name="M:Colosoft.Mef.MefBootstrapper.RegisterBootstrapperProvidedTypes">
            <summary>
            Registra os tipos.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.MefBootstrapper.RegisterDefaultTypesIfMissing">
            <summary>
            Registra os tipos padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.MefBootstrapper.CreateAggregateCatalog">
            <summary>
            Configura o <see cref="P:Colosoft.Mef.MefBootstrapper.AggregateCatalog"/> usado pelo MEF.
            </summary>
            <returns>Um <see cref="P:Colosoft.Mef.MefBootstrapper.AggregateCatalog"/> para ser usado pelo bootstrapper.</returns>
        </member>
        <member name="M:Colosoft.Mef.MefBootstrapper.ConfigureAggregateCatalog">
            <summary>
            Configura o <see cref="P:Colosoft.Mef.MefBootstrapper.AggregateCatalog"/> usado pelo MEF.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.MefBootstrapper.CreateContainer">
            <summary>
            Cria o <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> que será usado como container padrão.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.MefBootstrapper.ConfigureContainer">
            <summary>
            Configura o <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/>. 
            Esse método deve ser sobreescrito pela classe derivada para adicionar tipos específicos requeridos pela aplicação.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.MefBootstrapper.AggregateCatalog">
            <summary>
            Recupera a define o <see cref="P:Colosoft.Mef.MefBootstrapper.AggregateCatalog"/> padrão para a aplicação. 
            </summary>
        </member>
        <member name="P:Colosoft.Mef.MefBootstrapper.Container">
            <summary>
            Recupera e define <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"/> padrão para a aplicação.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.MemberInfoExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Colosoft.Mef.MemberInfoExtensions.GetCardinality(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Recuperae o cardinalidade do membro informado.
            </summary>
            <param name="member"></param>
            <param name="allowDefault"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.MemberInfoExtensions.ToComposableMember(System.Reflection.MemberInfo)">
            <summary>
            Cria um <see cref="T:Colosoft.Mef.ComposableMember"/> para uma instancia de <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
            <param name="member">Instancia do <see cref="T:System.Reflection.MemberInfo"/> para criar o <see cref="T:Colosoft.Mef.ComposableMember"/>.</param>
            <returns>A <see cref="T:Colosoft.Mef.ComposableMember"/> instance.</returns>
        </member>
        <member name="M:Colosoft.Mef.MemberInfoExtensions.ToComposableMember(System.Reflection.ParameterInfo)">
            <summary>
            Cria um <see cref="T:Colosoft.Mef.ComposableMember"/> para uma instancia de <see cref="T:System.Reflection.ParameterInfo"/>.
            </summary>
            <param name="parameter">Instancia do <see cref="T:System.Reflection.ParameterInfo"/> para criar o <see cref="T:Colosoft.Mef.ComposableMember"/>.</param>
            <returns>A <see cref="T:Colosoft.Mef.ComposableMember"/> instance.</returns>
        </member>
        <member name="T:Colosoft.Mef.PartConventionBuilder">
            <summary>
            Método para auxiliar na parte de convensões.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.PartConventionBuilder.Add``2(System.Boolean)">
            <summary>
            Adiciona uma nova parte.
            </summary>
            <typeparam name="TPart"></typeparam>
            <typeparam name="TExportAs"></typeparam>
            <param name="makeNoShared"></param>
        </member>
        <member name="M:Colosoft.Mef.PartConventionBuilder.Add(System.Type,System.Type,System.Boolean)">
            <summary>
            Adiciona uma nova parte.
            </summary>
            <param name="partType"></param>
            <param name="exportAsType"></param>
            <param name="makeNoShared"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.PartConventionBuilder.AddImportingConstructor``2(System.Boolean)">
            <summary>
            Adiciona uma nova parte com importação do construtor.
            </summary>
            <typeparam name="TPart"></typeparam>
            <typeparam name="TExportAs"></typeparam>
            <param name="makeNoShared"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.PartConventionBuilder.AddImportingConstructor(System.Type,System.Type,System.Boolean)">
            <summary>
            Adiciona um nova parte com importação do construtor.
            </summary>
            <param name="partType"></param>
            <param name="exportAsType"></param>
            <param name="makeNoShared"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.PartConventionBuilder.GetRegistries">
            <summary>
            Recupera os registros.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.PartConventionBuilder.GetEnumerator">
            <summary>
            Recupera o enumerador da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.PartConventionBuilder.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.PartDescription">
            <summary>
            Define uma descrição abstrata de uma parte.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.PartDescription.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.PartDescription.#ctor(Colosoft.Reflection.TypeName,System.Collections.Generic.IEnumerable{Colosoft.Mef.ExportDescription},System.Collections.Generic.IEnumerable{Colosoft.Mef.ImportDescription},System.Boolean,Colosoft.Mef.ImportingConstructorDescription,System.ComponentModel.Composition.CreationPolicy)">
            <summary>
            Construtor de inicialização.
            </summary>
            <param name="typeName"></param>
            <param name="exports"></param>
            <param name="imports"></param>
            <param name="useDispatcher"></param>
            <param name="importingConstruct"></param>
            <param name="partCreationPolicy"></param>
        </member>
        <member name="M:Colosoft.Mef.PartDescription.ToString">
            <summary>
            Texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.PartDescription.Exports">
            <summary>
            Imports associados com a parte.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.PartDescription.Imports">
            <summary>
            Exports associados com a parte.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.PartDescription.ImportingConstructor">
            <summary>
            Descrição da importação do construtor.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.PartDescription.TypeName">
            <summary>
            Nome do tipo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.PartDescription.PartCreationPolicy">
            <summary>
            Política de criação.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.PartDescription.UseDispatcher">
            <summary>
            Identifica se é para usar o Dispatcher.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.PreConfigureException">
            <summary>
            Representa o erro ocorrido na préconfiguração.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.PreConfigureException.#ctor(Colosoft.IMessageFormattable)">
            <summary>
            Construtor que já define a mensagem do erro ocorrido.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Colosoft.Mef.PreConfigureException.#ctor(Colosoft.IMessageFormattable,System.Exception)">
            <summary>
            Cria a instancia com a mensagem e o erro interno.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Colosoft.Mef.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.AssemblyRepositoryCatalog_DuplicateExport">
            <summary>
              Looks up a localized string similar to Exists duplicate export definition [ContractType: {0}, ContractName: {1}].
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.ComposableMemberParameterExcepton_Message">
            <summary>
              Looks up a localized string similar to An error ocurred when load parameter &apos;{0} : {1}&apos; or member &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.ExportConfigurator_NotFoundExportForType">
            <summary>
              Looks up a localized string similar to Not found export definition for type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.InvalidOperation_AssemblyFromExportNotFound">
            <summary>
              Looks up a localized string similar to Assembly &apos;{0}&apos; from export &apos;{1}&apos; not found..
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.InvalidOperation_FailOnGetPackages">
            <summary>
              Looks up a localized string similar to Fail on get packages..
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.LoggerAssemblyRepositoryCatalogObserver_AssemblyFromExportNotFound">
            <summary>
              Looks up a localized string similar to Assembly &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.LoggerAssemblyRepositoryCatalogObserver_FailOnAssembly">
            <summary>
              Looks up a localized string similar to Ocorreu uma falha e não foi possível carregar o assembly &quot;{0}&quot;. Detalhes: {1}.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.LoggerAssemblyRepositoryCatalogObserver_FailOnLoadPackages">
            <summary>
              Looks up a localized string similar to Ocorreu uma falha e não foi possível carregar o pacote de assemblies (&quot;{0}&quot;). Detalhes: {1}.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.LoggerAssemblyRepositoryCatalogObserver_FailOnLoadType">
            <summary>
              Looks up a localized string similar to Ocorreu uma falha e não foi possível carregar o tipo &quot;{0}&quot;. Detalhes: {1}.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.Properties.Resources.NotSupportedReadOnlyDictionary">
            <summary>
              Looks up a localized string similar to Not supported read only dictionary.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ProviderComposablePart">
            <summary>
            
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.#ctor(Colosoft.Mef.ProviderComposablePartDefinition)">
            <summary>
            Cria uma nova instancia usadando a definição informada.
            </summary>
            <param name="definition"></param>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.#ctor(System.Object)">
            <summary>
            Cria uma nova instancia com base na instancia informada.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.#ctor(System.Object,Colosoft.Mef.ProviderComposablePartDefinition)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="instance"></param>
            <param name="definition"></param>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.GetActivatedInstance(Colosoft.Mef.ComposableMember)">
            <summary>
            Creates a new instance of the <see cref="T:Colosoft.Mef.ComposableMember"/>, specified by the parameter, if it's needed.
            </summary>
            <param name="exportable">The exportable member to create an instance of, if it is required.</param>
            <returns>An instance of the object specified by the provided <see cref="T:Colosoft.Mef.ComposableMember"/>.</returns>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.GetExportedValue(System.ComponentModel.Composition.Primitives.ExportDefinition)">
            <summary>
            Recupera o valor exportado.
            </summary>
            <param name="definition"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.OnComposed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.SatisfyPostCompositionImports">
            <summary>
            
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.SetImport(System.ComponentModel.Composition.Primitives.ImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
            <summary>
            Define o import.
            </summary>
            <param name="definition"></param>
            <param name="exports"></param>
            <exception cref="T:System.InvalidOperationException">The supplied import definition was of an unknown type.</exception>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePart.Definition">
            <summary>
            Instancia da definição da parte associada.
            </summary>
            <value>A <see cref="T:Colosoft.Mef.ProviderComposablePartDefinition"/> object.</value>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePart.ExportDefinitions">
            <summary>
            Lista de todas as instancias <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition"/> conhecidas pela parte.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePart.ImportDefinitions">
            <summary>
            Lista de todas as instancias <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> conhecidas pela parte.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePart.ImportedValues">
            <summary>
            Recupera e define o dicionário de todos os valores dos imports.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePart.Instance">
            <summary>
            Instancia associada.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePart.IsComposed">
            <summary>
            Identifica se a parte já foi composta.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.ImportableInfo.#ctor(System.ComponentModel.Composition.Primitives.ImportDefinition,Colosoft.Mef.ProviderImportDefinition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export},Colosoft.Mef.ProviderComposablePart)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="definition"></param>
            <param name="import"></param>
            <param name="exports"></param>
            <param name="composablePart"></param>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.ImportableInfo.ClearExportValue">
            <summary>
            Limpa os valores dos exports associados.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePart.ImportableInfo.GetValue">
            <summary>
            Recupera o valor.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.ComposablePartErrorHandler">
            <summary>
            Classe com os evento que auxiliam a tratar o errors ocorridos na composição de partes.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ComposablePartErrorHandler.NotifyGetExportedValueError(System.ComponentModel.Composition.Primitives.ExportDefinition,System.Exception)">
            <summary>
            Notifica o erro ocorrido.
            </summary>
            <param name="definition"></param>
            <param name="e"></param>
        </member>
        <member name="E:Colosoft.Mef.ComposablePartErrorHandler.GetExportedValueError">
            <summary>
            Evento acionado para tratar o erro ao recupera o valor exportado.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ProviderComposablePartDefinition">
            <summary>
            Implementação da classe para compor as definições que irão ser usadas
            para criar novos objetos.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePartDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,Colosoft.Reflection.TypeName,System.Collections.Generic.IList{Colosoft.Mef.ProviderExportDefinition},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},Colosoft.Mef.ProviderParameterImportDefinitionContainer,System.ComponentModel.Composition.CreationPolicy,System.Boolean)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="catalog"></param>
            <param name="typeName"></param>
            <param name="exportDefinitions"></param>
            <param name="importDefinitions"></param>
            <param name="parameterImportDefinitions"></param>
            <param name="partCreationPolicy"></param>
            <param name="useDispatcher"></param>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePartDefinition.CreatePart">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ProviderComposablePartDefinition.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePartDefinition.Catalog">
            <summary>
            Catálogo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePartDefinition.PartCreationPolicy">
            <summary>
            Criação.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePartDefinition.ExportDefinitions">
            <summary>
            Recupera as definições de exportação.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePartDefinition.ImportDefinitions">
            <summary>
            Recupera as definições de importação.
            </summary>
            <value>A collection of <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"/> objects.</value>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePartDefinition.ImportsParametersDefinitions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderComposablePartDefinition.UseDispatcher">
            <summary>
            Identifica se é para usar o dispatcher para criar a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ProviderExportDefinition">
            <summary>
            Define um export requerido por uma instancia <see cref="T:Colosoft.Mef.ProviderComposablePart"/>.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderExportDefinition.#ctor(System.Func{System.Reflection.MemberInfo},Colosoft.Mef.ExportDescription,System.ComponentModel.Composition.CreationPolicy)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="memberGetter">Referencia do método usado para recuperar o membro.</param>
            <param name="exportDescription"></param>
            <param name="creationPolicy">Política de criação.</param>
        </member>
        <member name="M:Colosoft.Mef.ProviderExportDefinition.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.ProviderExportDefinition.Member">
            <summary>
            Instancia do membro associado.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ProviderImportDefinition">
            <summary>
            Implementação da definição de import
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderImportDefinition.#ctor(System.Lazy{System.Reflection.MemberInfo},Colosoft.Mef.ImportDescription,System.ComponentModel.Composition.CreationPolicy)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="member"></param>
            <param name="importDescription"></param>
            <param name="creationPolicy">Política de criação.</param>
        </member>
        <member name="M:Colosoft.Mef.ProviderImportDefinition.GetConstraint(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Recupera uma expressão que define as condições para compara a descrição do import
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Colosoft.Mef.ProviderImportDefinition.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.ProviderImportDefinition.AllowDefault">
            <summary>
            Identifica se a propriedade ou campo pode ser definido com um valor padrão.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderImportDefinition.Member">
            <summary>
            Membro que definido par ao import.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderParameterImportDefinition.#ctor(System.Reflection.ParameterInfo,Colosoft.Mef.ImportDescription,System.ComponentModel.Composition.CreationPolicy)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameter"></param>
            <param name="importDescription"></param>
            <param name="creationPolicy"></param>
        </member>
        <member name="M:Colosoft.Mef.ProviderParameterImportDefinition.GetConstraint(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Recupera a expressão que define as condições para encontrar a import.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ProviderParameterImportDefinition.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Mef.ProviderParameterImportDefinition.AllowDefault">
            <summary>
            Identifica se a propriedade ou campo pode ser definido com um valor padrão.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.ProviderParameterImportDefinition.Parameter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ProviderParameterImportDefinitionContainer">
            <summary>
            Representa um container das definições de exportação.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ProviderParameterImportDefinitionContainer.#ctor(Colosoft.Mef.PartDescription,Colosoft.Mef.IAssemblyContainer)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="partDescription"></param>
            <param name="assemblyContainer"></param>
        </member>
        <member name="M:Colosoft.Mef.ProviderParameterImportDefinitionContainer.GetImportDefinitions">
            <summary>
            Recupera as exportações de definição.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.ServiceLocatorAdapter">
            <summary>
            Adaptação do localizador do serviço.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ServiceLocatorAdapter.#ctor(System.ComponentModel.Composition.Hosting.CompositionContainer)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="compositionContainer"></param>
        </member>
        <member name="M:Colosoft.Mef.ServiceLocatorAdapter.DoGetAllInstances(System.Type)">
            <summary>
            Recupera todos as instancia do tipo.
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.ServiceLocatorAdapter.DoGetInstance(System.Type,System.String)">
            <summary>
            Recupera a instancia.
            </summary>
            <param name="serviceType"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.StringComparers">
            <summary>
            Classe que fornece os comparadores de string.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.StringComparers.ContractName">
            <summary>
            Comparador usado no nome do contrato.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.StringComparers.MetadataKeyNames">
            <summary>
            Comparador usado nas chaves dos metadados
            </summary>
        </member>
        <member name="T:Colosoft.Mef.ColosoftDefaultCatalog">
            <summary>
            Catalogo padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.ColosoftDefaultCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parts"></param>
        </member>
        <member name="P:Colosoft.Mef.ColosoftDefaultCatalog.Parts">
            <summary>
            Partes do catalogo.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.TypeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Colosoft.Mef.TypeExtensions.IsEnumerable(System.Type)">
            <summary>
            Verifica se o tipo informado é um enumerable.
            </summary>
            <param name="source">Tipo que será inspecionado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.TypeExtensions.IsLazyType(System.Type)">
            <summary>
            Verifica se o tipo é um tipo lazy conhecido.
            </summary>
            <param name="source">Tipo que será inspecionado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Mef.TypeExtensions.ToLazyType(System.Type)">
            <summary>
            Cria um tipo de objeto export com base no tipo informado.
            </summary>
            <param name="source">Tipo que será exportado.</param>
            <returns><see cref="T:System.Lazy`2"/></returns>
        </member>
        <member name="M:Colosoft.Mef.TypeExtensions.ToLazyCollectionType(System.Type)">
            <summary>
            Cria um tipo de objeto para exporta um coleção de um tipo especifico.
            </summary>
            <param name="source">Tipo da coleção que será exportada.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Mef.TypeInstance">
            <summary>
            Armazena a relação do tipo com a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Mef.TypeInstance.#ctor(System.Type,System.Lazy{System.Object},System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="type">Tipo da instancia registrada.</param>
            <param name="value">Valor da instancia.</param>
            <param name="contractName">Nome do contrato associado com a instancia.</param>
        </member>
        <member name="P:Colosoft.Mef.TypeInstance.ContractName">
            <summary>
            Nome do contrato do tipo.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.TypeInstance.TypeFullName">
            <summary>
            Tipo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Mef.TypeInstance.Value">
            <summary>
            Valor da instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Mef.TypeInstance`1">
            <summary>
            Armazena o relação da instancia com o tipo.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Mef.TypeInstance`1.#ctor(System.Lazy{`0},System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="instance"></param>
            <param name="contractName">Nome do contrato associado com a instancia.</param>
        </member>
    </members>
</doc>

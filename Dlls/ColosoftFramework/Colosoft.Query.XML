<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Colosoft.Query</name>
    </assembly>
    <members>
        <member name="T:Colosoft.Query.BindableQueryCallBackWrapper">
            <summary>
            Implementação da adaptação para o callback do resultado da consulta
            utilizando o BindStrategy.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryCallBackWrapper">
            <summary>
            Wrapper para callback
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryCallBackWrapper.ExecuteCallBack(Colosoft.Query.MultiQueryable,Colosoft.Query.QueryInfo,Colosoft.Query.IQueryResult)">
            <summary>
            Executa callback
            </summary>
            <param name="sender">Objeto que disparou a execução</param>
            <param name="info">Informações da consulta</param>
            <param name="result">Resultado da consulta</param>
        </member>
        <member name="M:Colosoft.Query.QueryCallBackWrapper.ExecuteFailedCallBack(Colosoft.Query.MultiQueryable,Colosoft.Query.QueryInfo,Colosoft.Query.QueryFailedInfo)">
            <summary>
            Executa o callback.
            </summary>
            <param name="sender">Objeto que disparou a execução</param>
            <param name="info">Informações da consulta</param>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Query.QueryCallBackWrapper.RemoveCallBack">
            <summary>
            Remove callback do wrapper
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryCallBackWrapper.QueryCallBack">
            <summary>
            Objeto do callback
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryCallBackWrapper.QueryFailedCallBack">
            <summary>
            CallBack acionado quando ocorreu uma falha a execução da consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.BindableQueryCallBackWrapper.ExecuteCallBack(Colosoft.Query.MultiQueryable,Colosoft.Query.QueryInfo,Colosoft.Query.IQueryResult)">
            <summary>
            Executa callback
            </summary>
            <param name="sender">Objeto que disparou a execução</param>
            <param name="info">Informações da consulta</param>
            <param name="result">Resultado da consulta</param>
        </member>
        <member name="M:Colosoft.Query.BindableQueryCallBackWrapper.RemoveCallBack">
            <summary>
            Remove callback do wrapper
            </summary>
        </member>
        <member name="P:Colosoft.Query.BindableQueryCallBackWrapper.BindStrategy">
            <summary>
            Estratégia de binding
            </summary>
        </member>
        <member name="P:Colosoft.Query.BindableQueryCallBackWrapper.ObjectCreator">
            <summary>
            Criador de objetos
            </summary>
        </member>
        <member name="P:Colosoft.Query.BindableQueryCallBackWrapper.QueryCallBack">
            <summary>
            Objeto do Callback
            </summary>
        </member>
        <member name="T:Colosoft.Query.CaseConditional">
            <summary>
            Representa uma condicional CASE.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ConditionalTerm">
            <summary>
            Representa um termo uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados serializados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.GetConditionalTerm(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Recupera o termo condicional contido no reader.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.Clone">
            <summary>
            Clona o ConditionalTerm.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.HasNoFunctionCall(Colosoft.Query.ConditionalTerm)">
            <summary>
            Determina se não existe chamada de função na avaliação do termo.
            </summary>
            <param name="term"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recuperea os dados serializados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.GetConditionalTerm(System.Xml.XmlReader)">
            <summary>
            Recupera o termo condicional contido no reader.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.ReadXml(System.Xml.XmlReader)">
            <summary>
            Recupera os dados do termo do leitor informado.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Salva os dados do termo no escritor informado.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.InsertConditionalTermType(System.Xml.XmlWriter,Colosoft.Query.ConditionalTerm)">
            <summary>
            Insere o tipo do termo condicional
            </summary>
            <param name="writer"></param>
            <param name="term"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalTerm.InsertConditionalTermType(Colosoft.Serialization.IO.CompactWriter,Colosoft.Query.ConditionalTerm)">
            <summary>
            Insere o tip do termo condicional
            </summary>
            <param name="writer"></param>
            <param name="term"></param>
        </member>
        <member name="P:Colosoft.Query.ConditionalTerm.Lexer">
            <summary>
            Recupera o analizador lexo das condicionais do sistema.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ConditionalTerm.QualifiedName">
            <summary>
            Recupera o esquema do registro.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.#ctor(Colosoft.Query.ConditionalTerm,System.Collections.Generic.IEnumerable{Colosoft.Query.CaseWhenExpression},Colosoft.Query.ConditionalTerm)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="inputExpression"></param>
            <param name="whenExpressions"></param>
            <param name="elseResultExpression"></param>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.GetCaseSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquena para o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escreve o xml.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados em XML.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados serializados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.ToString">
            <summary>
            Texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.CaseConditional.Clone">
            <summary>
            Clona a instancia.
            </summary>
            <returns>Clone da instancia.</returns>
        </member>
        <member name="P:Colosoft.Query.CaseConditional.InputExpression">
            <summary>
            Expressão de entrada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.CaseConditional.WhenExpressions">
            <summary>
            Expressões WHEN.
            </summary>
        </member>
        <member name="P:Colosoft.Query.CaseConditional.ElseResultExpression">
            <summary>
            Expressão do resutlado do ELSE.
            </summary>
        </member>
        <member name="P:Colosoft.Query.CaseConditional.QualifiedName">
            <summary>
            Nome do tipo.
            </summary>
        </member>
        <member name="T:Colosoft.Query.CaseWhenExpression">
            <summary>
            Representa o segumento WHEN de um condicional CASE.
            </summary>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.#ctor">
            <summary>
            Construtor interno.
            </summary>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.#ctor(Colosoft.Query.ConditionalTerm,Colosoft.Query.ConditionalTerm)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="expression"></param>
            <param name="resultExpression"></param>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados serializados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.GetCaseWhenExpressionSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquena para o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Recupera o esquema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados no escritor informado.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.Clone">
            <summary>
            Clona os dados da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.CaseWhenExpression.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.CaseWhenExpression.Expression">
            <summary>
            Expressão associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.CaseWhenExpression.ResultExpression">
            <summary>
            Exoressão do resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.CaseWhenExpression.QualifiedName">
            <summary>
            Recupera o esquema do registro.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.QueryParameterCollection">
            <summary>
            Representa uma coleção de parametros.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryParameterContainer">
            <summary>
            Representa um container de parametros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryParameterContainer.Add(Colosoft.Query.QueryParameter)">
            <summary>
            Adiciona um parametro para o container.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Colosoft.Query.IQueryParameterContainer.RemoveAllParameters">
            <summary>
            Remove todos os parametros.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IQueryParameterContainer.Count">
            <summary>
            Recupera a quantidade de parametros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.QueryParameter})">
            <summary>
            Cria uma nova instancia a partir de uma enumeração existente.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.#ctor(System.Int32)">
            <summary>
            Cria uma nova instancia já definindo a sua capacidade inicial.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.Add(System.String,System.Object)">
            <summary>
            Adicionar um parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.RemoveAllParameters">
            <summary>
            Remove todos os parametros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa usando o CompactSerializer.
            </summary>
            <param name="reader">Representa o compact reader.</param>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa usando o CompactSerializer.
            </summary>
            <param name="writer">Representa o compact writer.</param>
        </member>
        <member name="M:Colosoft.Query.QueryParameterCollection.Clone">
            <summary>
            Clona a coleção de parâmetros.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Column">
            <summary>
            Representa o termo de uma coluna
            </summary>
        </member>
        <member name="M:Colosoft.Query.Column.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Column.#ctor(System.String)">
            <summary>
            Cria a instancia com o nome da coluna.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Colosoft.Query.Column.#ctor(Colosoft.Query.Parser.SqlExpression)">
            <summary>
            Cria a instancia com base na expressão.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:Colosoft.Query.Column.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Column.GetColumnSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquena para o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Column.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escreve o xml.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Column.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados em XML.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Column.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados serializados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Column.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Column.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Column.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Column.Clone">
            <summary>
            Clona a coluna.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Column.Name">
            <summary>
            Nome da coluna.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Column.Owner">
            <summary>
            Apelido da coluna.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Column.QualifiedName">
            <summary>
            Nome que qualifica o elemento XML.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Conditional">
            <summary>
            Representa uma expressão condicional.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Conditional.#ctor">
            <summary>
            Construtor vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Conditional.#ctor(Colosoft.Query.ConditionalTerm,Colosoft.Query.Operator,Colosoft.Query.ConditionalTerm)">
            <summary>
            Cria uma nova instancia já com os parametros que serão usados.
            </summary>
            <param name="left"></param>
            <param name="oper"></param>
            <param name="right"></param>
        </member>
        <member name="M:Colosoft.Query.Conditional.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Conditional.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados do objeto para serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Conditional.ParseTerm(System.String)">
            <summary>
            Executa um parse na expressão informada.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Conditional.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Conditional.Clone">
            <summary>
            Clona um Conditional.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Conditional.ReadXml(System.Xml.XmlReader)">
            <summary>
            Recupera os dados da instancia do leitor informado.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Conditional.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Salva os dados da instancia no escritor informado.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Conditional.IsConditionalOperator(Colosoft.Text.InterpreterExpression.Expression)">
            <summary>
            Verifica se a expressão informada é um operador
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Conditional.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Conditional.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Colosoft.Query.Conditional.Left">
            <summary>
            Expressão de comparação da esquerda.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Conditional.Right">
            <summary>
            Expressão de comparação da direita.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Conditional.Operator">
            <summary>
            Expressão do operador de comparação.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Conditional.QualifiedName">
            <summary>
            Nome que qualifica o elemento XML.
            </summary>
        </member>
        <member name="T:Colosoft.Query.LogicalOperator">
            <summary>
            Enumeration dos operadores lógicos usados no comando sql.
            </summary>
        </member>
        <member name="F:Colosoft.Query.LogicalOperator.And">
            <summary>
            E.
            </summary>
        </member>
        <member name="F:Colosoft.Query.LogicalOperator.Or">
            <summary>
            Ou.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ConditionalContainer">
            <summary>
            Container de uma estrutura condicional.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ConditionalContainer._conditionals">
            <summary>
            Condições do container.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ConditionalContainer._logicalOperators">
            <summary>
            Operadores lógicos usados.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.#ctor(Colosoft.Collections.ISearchParameterDescriptionContainer)">
            <summary>
            Cria a instancia com referência para o container
            das descrições dos parametros de pesquisa.
            </summary>
            <param name="searchParameterDescriptionContainer"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.#ctor(Colosoft.Query.ConditionalTerm)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="conditional">Condicionais do container.</param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.ConditionalTerm})">
            <summary>
            Construtor que recebe vários <see cref="T:Colosoft.Query.ConditionalTerm"/>.
            </summary>
            <param name="conditionals">Condicionais do container.</param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.ConfigureSearchParameterDescriptionContainer(Colosoft.Collections.ISearchParameterDescriptionContainer)">
            <summary>
            Configura o container das descrições de parametros de pesquisa.
            </summary>
            <param name="searchParameterDescriptionContainer"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.AddDescription(Colosoft.IMessageFormattable,System.String)">
            <summary>
            Adiciona a descrição da condicinal aplicada a consulta.
            </summary>
            <param name="description">Descrição que será adicionada.</param>
            <param name="parameterName">Nome do parametro associado a condicionais.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.AddDescription(System.String,System.String)">
            <summary>
            Adiciona a descrição da condicinal aplicada a consulta.
            </summary>
            <param name="description">Descrição que será adicionada.</param>
            <param name="parameterName">Nome do parametro associado a condicionais.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.AddDescription(System.Lazy{Colosoft.IMessageFormattable},System.String)">
            <summary>
            Adiciona a descrição da condicional aplicada a consulta.
            </summary>
            <param name="description"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.AddDescription(System.Lazy{System.String},System.String)">
            <summary>
            Adiciona a descrição da condicional aplicada a consulta.
            </summary>
            <param name="description"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.AddDescription(System.Func{System.String},System.String)">
            <summary>
            Adiciona a descrição da condicional aplicada a consulta.
            </summary>
            <param name="description"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.AddDescription(System.Func{Colosoft.IMessageFormattable},System.String)">
            <summary>
            Adiciona a descrição da condicional aplicada a consulta.
            </summary>
            <param name="description"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.And(Colosoft.Query.ConditionalTerm)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Or(Colosoft.Query.ConditionalTerm)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.And(System.String)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Or(System.String)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Start(Colosoft.Query.ConditionalTerm)">
            <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Start(System.String)">
            <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Parse(System.String,Colosoft.Query.QueryParameter[])">
            <summary>
            Executa o parse da expressão para um container.
            </summary>
            <param name="expression"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.ParseTerm(System.String)">
            <summary>
            Executa o parse da expressão para um ConditionalTerm.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.ToString">
            <summary>
            Recupera a string que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Clone">
            <summary>
            Clona um container condicional.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Add(System.String,System.Object)">
            <summary>
            Adiciana um parametro para container.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Add(Colosoft.Query.QueryParameter)">
            <summary>
            Adiciona um parametro para o container.
            </summary>
            <param name="parameter">Parâmetros a ser adicionado.</param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Add(Colosoft.Query.QueryParameter[])">
            <summary>
            Adiciona um parametro para o container.
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Add(System.Collections.Generic.IEnumerable{Colosoft.Query.QueryParameter})">
            <summary>
            Adiciona vários parâmetros para o container.
            </summary>
            <param name="parameters">Parâmetros a serem adicionados.</param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.Colosoft#Query#IQueryParameterContainer#RemoveAllParameters">
            <summary>
            Remove todos os parametros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.GetConditionalContainerSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do registro.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados para a instancia.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalContainer.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Salva os dados da instancia no escritor informado.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.ConditionalContainer.ParameterContainer">
            <summary>
            Container onde são registrados os parametros.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ConditionalContainer.LogicalOperators">
            <summary>
            Recupera os operadores lógicos do container.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ConditionalContainer.Conditionals">
            <summary>
            Condicionais do container.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ConditionalContainer.ConditionalsCount">
            <summary>
            Quantidade de itens no container.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ConditionalContainer.QualifiedName">
            <summary>
            Nome XML que irá representa a o tipo na serialização.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ConditionalContainer.SearchParameterDescriptions">
            <summary>
            Descrições dos parametros de pesquisa.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ConditionalParser">
            <summary>
            Classe responsável por executar o parser das condicionais do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetContainer(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ILexerConfiguration,Colosoft.Text.InterpreterExpression.ContainerChars)">
            <summary>
            Recupera container condicional.
            </summary>
            <param name="enumerator">Enumerador dos items que serão analizados.</param>
            <param name="configuration"></param>
            <param name="containerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetTerm(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ILexerConfiguration)">
            <summary>
            Recupera o valor do termo condicional.
            </summary>
            <param name="enumerator"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetFormula(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ILexerConfiguration,Colosoft.Query.ConditionalTerm)">
            <summary>
            Recupera a formula contida nas expressões.
            </summary>
            <param name="enumerator"></param>
            <param name="configuration"></param>
            <param name="firstPart"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetCaseConditional(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ILexerConfiguration)">
            <summary>
            Recupera o termo da condicional CASE.
            </summary>
            <param name="enumerator"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetConditional(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ILexerConfiguration,System.Nullable{System.Char})">
            <summary>
            Recupera uma condição.
            </summary>
            <param name="enumerator"></param>
            <param name="configuration"></param>
            <param name="containerStop">Caracter que identifica o fim da condicional.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetValuesArray(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ILexerConfiguration,System.Nullable{System.Char},Colosoft.Query.ConditionalTerm[])">
            <summary>
            Recupera o vetor de valores.
            </summary>
            <param name="enumerator"></param>
            <param name="configuration"></param>
            <param name="containerStop"></param>
            <param name="firstConstants"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetFunctionCall(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ILexerConfiguration,System.Nullable{System.Char},Colosoft.Query.Column)">
            <summary>
            Recupera a chamada de função.
            </summary>
            <param name="enumerator"></param>
            <param name="configuration"></param>
            <param name="containerStop"></param>
            <param name="callName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetContainer(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ILexerConfiguration)">
            <summary>
            Recupera o container condicional.
            </summary>
            <param name="enumerator"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetExpressions(System.String,Colosoft.Text.InterpreterExpression.Lexer)">
            <summary>
            Recupera o enumerator das expressões.
            </summary>
            <param name="expression"></param>
            <param name="lexer"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetTerm(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@)">
            <summary>
            Recupera o termo com base na expressões informadas.
            </summary>
            <param name="enumerator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.GetContainer(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression}@,Colosoft.Text.InterpreterExpression.ContainerChars)">
            <summary>
            Recupera o container condicional.
            </summary>
            <param name="enumerator"></param>
            <param name="containerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.ParseTerm(System.String)">
            <summary>
            Executa o parser para termo da expressão informada.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.Parse(System.String)">
            <summary>
            Realiza o parser na expressão informada.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.ConditionalParser.ConditionalLexer">
            <summary>
            Instancia do analizador lexo das condicionais.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ConditionalParser.StopControlEnumerator">
            <summary>
            Implementação do enumerador que realiza o controle de parada.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ConditionalParser.StopControlEnumerator._tagsOpened">
            <summary>
            Armazena a relação das tags abertas.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.StopControlEnumerator.#ctor(System.Collections.Generic.IEnumerator{Colosoft.Text.InterpreterExpression.Expression},System.Collections.Generic.IEnumerable{Colosoft.Query.ConditionalParser.StopControlEnumerator.ContainerStartStop},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="reference">Referencia do enumerador principal.</param>
            <param name="containersStartStop">Tag de inicio e para da containers que deve ser ignoradas.</param>
            <param name="stopTexts">Textos de parada que será considerado.</param>
            <param name="comparer">Comparador que será usado.</param>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.StopControlEnumerator.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.StopControlEnumerator.MoveNext">
            <summary>
            Move para o próximo item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.StopControlEnumerator.Reset">
            <summary>
            Reseta a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ConditionalParser.StopControlEnumerator.Current">
            <summary>
            Recupera a atual instancia do enumerador.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ConditionalParser.StopControlEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Recupera o atual item.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ConditionalParser.StopControlEnumerator.ContainerStartStop">
            <summary>
            Representa as tags de inicio e fim de um container.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalParser.StopControlEnumerator.ContainerStartStop.#ctor(System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="start"></param>
            <param name="stop"></param>
        </member>
        <member name="T:Colosoft.Query.Constant">
            <summary>
            Representa uma constante.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Constant.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Constant.#ctor(System.String)">
            <summary>
            Cria a instancia com o texto informado.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Colosoft.Query.Constant.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Constant.Clone">
            <summary>
            Clona uma constante.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Constant.GetConstantSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquena para o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Constant.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados serializados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Constant.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados no xml.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Constant.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados no XML.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Constant.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Constant.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Constant.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização compacta
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Colosoft.Query.Constant.Text">
            <summary>
            Texto que representa a constante.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Constant.QualifiedName">
            <summary>
            Nome que qualifica o elemento XML.
            </summary>
        </member>
        <member name="T:Colosoft.Query.DataAccessConstants">
            <summary>
            Contém constantes para a camada de acesso a dados.
            </summary>
        </member>
        <member name="F:Colosoft.Query.DataAccessConstants.RowVersionColumnName">
            <summary>
            Nome da coluna de RowVersion.
            </summary>
        </member>
        <member name="F:Colosoft.Query.DataAccessConstants.RowVersionPropertyName">
            <summary>
            Nome da propriedade de RowVersion.
            </summary>
        </member>
        <member name="F:Colosoft.Query.DataAccessConstants.AffectedRowsParameterName">
            <summary>
            Nome do parâmetro que receberá o número de linhas afetadas.
            </summary>
        </member>
        <member name="F:Colosoft.Query.DataAccessConstants.ReturnValueColumnName">
            <summary>
            Nome da coluna que representa o valor de retorno.
            </summary>
        </member>
        <member name="T:Colosoft.Query.DynamicBindStrategy">
            <summary>
            Implementação da estratégia de vinculação dinâmica.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryResultBindStrategy">
            <summary>
            Assinatura das classes com a estratégia de vinculação do resultado
            de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryResultBindStrategy.CreateSession(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Cria uma sessão de estratégia de vinculação para o descritor informado.
            </summary>
            <param name="recordDescriptor">Descritor dos registros para fazer a vinculação.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IQueryResultBindStrategy.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,System.Object@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="M:Colosoft.Query.IQueryResultBindStrategy.Bind``1(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,``0@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <typeparam name="T">Tipo que será usado na operação.</typeparam>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="M:Colosoft.Query.IQueryResultBindStrategy.Bind(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Executa a vinculação dos dados contidos na enumeração de registro informados
            e retorna uma enumeração das instancias preechidas.
            </summary>
            <param name="records">Registros que serão processados.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="creator">Instancia responsável pela criação dos objetos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IQueryResultBindStrategy.Bind``1(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Executa a vinculação dos dados contidos na enumeração de registro informados
            e retorna uma enumeração das instancias preechidas.
            </summary>
            <typeparam name="T">Tipo que será usado na operação.</typeparam>
            <param name="records">Registros que serão processados.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="creator">Instancia responsável pela criação dos objetos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.#ctor(System.Func{System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,System.Collections.IEnumerable})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="func">Ponteiro do método que será usado na vinculação.</param>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Colosoft#Query#IQueryResultBindStrategy#CreateSession(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Cria uma sessão de vinculação.
            </summary>
            <param name="recordDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Colosoft#Query#IQueryResultBindStrategy#Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,System.Object@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Colosoft#Query#IQueryResultBindStrategy#Bind``1(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,``0@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <typeparam name="T">Tipo que será usado na operação.</typeparam>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Colosoft#Query#IQueryResultBindStrategy#Bind(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Executa a vinculação dos dados contidos na enumeração de registro informados
            e retorna uma enumeração das instancias preechidas.
            </summary>
            <param name="records">Registros que serão processados.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="creator">Instancia responsável pela criação dos objetos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Colosoft#Query#IQueryResultBindStrategy#Bind``1(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Executa a vinculação dos dados contidos na enumeração de registro informados
            e retorna uma enumeração das instancias preechidas.
            </summary>
            <typeparam name="T">Tipo que será usado na operação.</typeparam>
            <param name="records">Registros que serão processados.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="creator">Instancia responsável pela criação dos objetos.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.DynamicBindStrategy.Enumerable`1">
            <summary>
            Implementação para encapsular um Enumerable.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerable`1.#ctor(System.Collections.IEnumerable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerable`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Recupera o enumerador da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerable`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.DynamicBindStrategy.Enumerator`1">
            <summary>
            Implementação base do Enumerado encapsulado.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerator`1.#ctor(System.Collections.IEnumerator)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerator"></param>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerator`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerator`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerator`1.MoveNext">
            <summary>
            Move para o próximo item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy.Enumerator`1.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="P:Colosoft.Query.DynamicBindStrategy.Enumerator`1.Current">
            <summary>
            Current.
            </summary>
        </member>
        <member name="P:Colosoft.Query.DynamicBindStrategy.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Current.
            </summary>
        </member>
        <member name="T:Colosoft.Query.DynamicBindStrategy`1">
            <summary>
            Implementação da estratégia de vinculação dinâmica.
            </summary>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.#ctor(System.Func{System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,System.Collections.Generic.IEnumerable{`0}})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="func">Ponteiro do método que será usado na vinculação.</param>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Colosoft#Query#IQueryResultBindStrategy#CreateSession(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Cria uma sessão de vinculação.
            </summary>
            <param name="recordDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Colosoft#Query#IQueryResultBindStrategy#Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,System.Object@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Colosoft#Query#IQueryResultBindStrategy#Bind``1(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,``0@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <typeparam name="T">Tipo que será usado na operação.</typeparam>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Colosoft#Query#IQueryResultBindStrategy#Bind(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Executa a vinculação dos dados contidos na enumeração de registro informados
            e retorna uma enumeração das instancias preechidas.
            </summary>
            <param name="records">Registros que serão processados.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="creator">Instancia responsável pela criação dos objetos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Colosoft#Query#IQueryResultBindStrategy#Bind``1(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Executa a vinculação dos dados contidos na enumeração de registro informados
            e retorna uma enumeração das instancias preechidas.
            </summary>
            <typeparam name="T">Tipo que será usado na operação.</typeparam>
            <param name="records">Registros que serão processados.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="creator">Instancia responsável pela criação dos objetos.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.DynamicBindStrategy`1.Enumerable`1">
            <summary>
            Implementação para encapsular um Enumerable.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerable`1.#ctor(System.Collections.IEnumerable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerable`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Recupera o enumerador da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerable`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.DynamicBindStrategy`1.Enumerator`1">
            <summary>
            Implementação base do Enumerado encapsulado.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerator`1.#ctor(System.Collections.IEnumerator)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerator"></param>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerator`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerator`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerator`1.MoveNext">
            <summary>
            Move para o próximo item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicBindStrategy`1.Enumerator`1.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="P:Colosoft.Query.DynamicBindStrategy`1.Enumerator`1.Current">
            <summary>
            Current.
            </summary>
        </member>
        <member name="P:Colosoft.Query.DynamicBindStrategy`1.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Current.
            </summary>
        </member>
        <member name="T:Colosoft.Query.DynamicQueryDataSource">
            <summary>
            Implementação de uma origem de dados dinamica para consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryDataSource">
            <summary>
            Representa um fonte de dados para consultas.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryDataSource.Execute(Colosoft.Query.QueryInfo)">
            <summary>
            Executa a consulta informada.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IQueryDataSource.Execute(Colosoft.Query.QueryInfo[])">
            <summary>
            Retorna o resultado de várias queries recebe os dados de uma query e enviando ao SQL Server
            </summary>
            <param name="queries">Informações das queries</param>
            <returns>Retorna o resultado da query</returns>
        </member>
        <member name="P:Colosoft.Query.IQueryDataSource.IsInitialized">
            <summary>
            Identifica se a origem de dados já foi inicializada.
            </summary>
        </member>
        <member name="M:Colosoft.Query.DynamicQueryDataSource.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator,Colosoft.Query.IProviderLocator)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="serviceLocator">Localizador dos serviço.</param>
            <param name="providerLocator">Localizador dos provider.</param>
        </member>
        <member name="M:Colosoft.Query.DynamicQueryDataSource.GetDataSource(Colosoft.Query.QueryInfo)">
            <summary>
            Recupera a origemd de ados
            </summary>
            <param name="queryInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicQueryDataSource.Execute(Colosoft.Query.QueryInfo)">
            <summary>
            Executa a consulta.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.DynamicQueryDataSource.Execute(Colosoft.Query.QueryInfo[])">
            <summary>
            Executa as consultas informadas
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.DynamicQueryDataSource.ProviderLocator">
            <summary>
            Instancia do localizador de providers.
            </summary>
        </member>
        <member name="P:Colosoft.Query.DynamicQueryDataSource.IsInitialized">
            <summary>
            Identifica se a origem de dados foi inicializada.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.DynamicExpression">
            <summary>
            Classe método para auxiliar a manipulação de expressões dinamicas.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Dynamic.DynamicExpression.Parse(System.Type,System.String,System.Object[])">
            <summary>
            Realiza o parser sobre a expressão informada.
            </summary>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.DynamicExpression.ParseLambda(System.Type,System.Type,System.String,System.Object[])">
            <summary>
            Executa o parser sobre a expressão informada.
            </summary>
            <param name="itType">Tipo do origem onde será realizado o parser.</param>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.DynamicExpression.ParseLambda(System.Linq.Expressions.ParameterExpression[],System.Type,System.String,System.Object[])">
            <summary>
            Executa o parser sobre a expressão informada.
            </summary>
            <param name="parameters"></param>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.DynamicExpression.ParseLambda``2(System.String,System.Object[])">
            <summary>
            Executa o parser sobre a expressão informada.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser">
            <summary>
            Implementação do parser de expressões.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.predefinedTypes">
            <summary>
            Relação dos tipos pré definidos.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.trueLiteral">
            <summary>
            Literal que representa o valor verdadeiro.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.falseLiteral">
            <summary>
            Literal que representa o valor falso.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.nullLiteral">
            <summary>
            Literal que representa o valor nulo.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.StringCompareMethod">
            <summary>
            Instancia do método usado para compara as strings.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.keywords">
            <summary>
            Relação das palavras chave.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.#ctor(System.Linq.Expressions.ParameterExpression[],System.String,System.Object[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameters"></param>
            <param name="expression">Expressão sobre onde será executado o parser.</param>
            <param name="values"></param>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ProcessParameters(System.Linq.Expressions.ParameterExpression[])">
            <summary>
            Processa os parametros informados.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ProcessValues(System.Object[])">
            <summary>
            Processa os valores informados.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.AddSymbol(System.String,System.Object)">
            <summary>
            Adiciona o simbolo.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.Parse(System.Type)">
            <summary>
            Executa o parser do tipo do resultado.
            </summary>
            <param name="resultType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ParseTypeAccess(System.Type)">
            <summary>
            Executa parser para recupera a expressão do tipo de acesso.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateConversion(System.Linq.Expressions.Expression,System.Type,System.Int32)">
            <summary>
            Gera uma expressão de conversão.
            </summary>
            <param name="expr"></param>
            <param name="type"></param>
            <param name="errorPos"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ParseMemberAccess(System.Type,System.Linq.Expressions.Expression)">
            <summary>
            Executa o parser para recuperar o membro de acesso.
            </summary>
            <param name="type"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.FindGenericType(System.Type,System.Type)">
            <summary>
            Localiza o tipo genérico.
            </summary>
            <param name="generic"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ParseArgumentList">
            <summary>
            Executa o parser da lista de argumentos.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ParseArguments">
            <summary>
            Executa o parser dos argumentos.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.IsPredefinedType(System.Type)">
            <summary>
            Verifica se o tipo informado é predifinido.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.IsNullableType(System.Type)">
            <summary>
            Verifica se o tipo informdo é nullable.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GetNonNullableType(System.Type)">
            <summary>
            Recupera o tipo não nullable associado com o tipo informado.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GetTypeName(System.Type)">
            <summary>
            Recupera o nome do tipo informado.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.IsNumericType(System.Type)">
            <summary>
            Verific se o tipo informado é númerico.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.SelfAndBaseTypes(System.Type)">
            <summary>
            Recupera os tipos base do tipo informado.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.SelfAndBaseClasses(System.Type)">
            <summary>
            Recupera as classe base do tipo informado.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.FindBestMethod(System.Collections.Generic.IEnumerable{System.Reflection.MethodBase},System.Linq.Expressions.Expression[],System.Reflection.MethodBase@)">
            <summary>
            Localiza o melho método.
            </summary>
            <param name="methods"></param>
            <param name="args"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.IsApplicable(Colosoft.Query.Dynamic.ExpressionParser.MethodData,System.Linq.Expressions.Expression[])">
            <summary>
            Verifica se o argumentos se aplica ao método.
            </summary>
            <param name="method"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ParseNumber(System.String,System.Type)">
            <summary>
            Executa o parser de um número.
            </summary>
            <param name="text"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ParseEnum(System.String,System.Type)">
            <summary>
            Executa o parser para recupera o valor do enum.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.IsCompatibleWith(System.Type,System.Type)">
            <summary>
            Verifica se o tipos são compatíveis.
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Cria uma expressão para tratar a comparação igual.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Cria a expressão para tratar a comparação diferente.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateGreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gera uma expressão maior que.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateGreaterThanEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gera uma expressão maior igual que.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateLessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gera uma expressão menor que.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateLessThanEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gera uma expressão de menor igual.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateAdd(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gera uma operação de adição.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateSubtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gera uma expressão de subtração.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateStringConcat(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gera uma expressão para concatenação de string.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GetStaticMethod(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Recupera as informações de um método estático.
            </summary>
            <param name="methodName"></param>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GenerateStaticMethodCall(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Recupera a chamada de um método estático.
            </summary>
            <param name="methodName">Nome do método.</param>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.SetTextPos(System.Int32)">
            <summary>
            Define a posição informada.
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.NextChar">
            <summary>
            Move para o próximo caractere.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.NextToken">
            <summary>
            Move para o próximo token.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.GetIdentifier">
            <summary>
            Recupera o identificador
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ValidateDigit">
            <summary>
            Valida o digito.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ValidateToken(Colosoft.Query.Dynamic.ExpressionParser.TokenId,System.String)">
            <summary>
            Valida o atual token, e mostra a mensagem de erro case seja inválido.
            </summary>
            <param name="t"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ValidateToken(Colosoft.Query.Dynamic.ExpressionParser.TokenId)">
            <summary>
            Valida o atual toekn.
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ParseError(System.String,System.Object[])">
            <summary>
            Recupera um erro do parser.
            </summary>
            <param name="format">Formatação da mensagem do erro.</param>
            <param name="args">Argumentos que serão utilizados na formatação.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.ParseError(System.Int32,System.String,System.Object[])">
            <summary>
            Recupera um erro do parser.
            </summary>
            <param name="pos">Posição inicial do erro.</param>
            <param name="format">Formatação.</param>
            <param name="args">Argumentos que serão utilizados na formatação.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ExpressionParser.CreateKeywords">
            <summary>
            Recupera a relação das palavras chaves utilizados pelo parser.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.TokenId">
            <summary>
            Identificador do token.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.ILogicalSignatures">
            <summary>
            Interface as assinaturas lógicas.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.IArithmeticSignatures">
            <summary>
            Interface das assinaturas aritméticas.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.IRelationalSignatures">
            <summary>
            Interface das assinaturas relacionais.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.IEqualitySignatures">
            <summary>
            Interface das assinaturas de comparação de igualdade.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.IAddSignatures">
            <summary>
            Interface das assinaturas de operações de adição.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.ISubtractSignatures">
            <summary>
            Interface das assinaturas de subtração.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.INegationSignatures">
            <summary>
            Interface das assinaturas de negação.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.INotSignatures">
            <summary>
            Interface das assinatura da operação de Not.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.IEnumerableSignatures">
            <summary>
            Interface das assinaturas de enumeração.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ExpressionParser.MethodData">
            <summary>
            Armanze os dados de um método.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.MethodData.MethodBase">
            <summary>
            Referencia do método base.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.MethodData.Parameters">
            <summary>
            Informações dos parametros do método.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Dynamic.ExpressionParser.MethodData.Args">
            <summary>
            Argumentos que serão repassados para o método.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Dynamic.ParseException">
            <summary>
            Representa um erro do parser.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ParseException.#ctor(System.String,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message"></param>
            <param name="position"></param>
        </member>
        <member name="M:Colosoft.Query.Dynamic.ParseException.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Dynamic.ParseException.Position">
            <summary>
            Posição.
            </summary>
        </member>
        <member name="T:Colosoft.Query.EntityInfo">
            <summary>
            Armazena as informações da entidade onde será realizada a consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.#ctor">
            <summary>
            Construtor vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.#ctor(System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="fullName">Nome da entidade.</param>
            <param name="alias">Apelido da entidade.</param>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.#ctor(Colosoft.Query.QueryInfo,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="subQuery">Query aninhada.</param>
            <param name="alias">Apelido da entidade.</param>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.Clone">
            <summary>
            Clona as informações de entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.EntityInfo.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.EntityInfo.FullName">
            <summary>
            Nome completeo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Query.EntityInfo.Alias">
            <summary>
            Apelido da entrada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.EntityInfo.SubQuery">
            <summary>
            Query aninhada.
            </summary>
        </member>
        <member name="T:Colosoft.Query.EntityInfoAliasComparer">
            <summary>
            Implementação do comparador para o alias do EntityInfo.
            </summary>
        </member>
        <member name="F:Colosoft.Query.EntityInfoAliasComparer.Instance">
            <summary>
            Instancia geral do comparador.
            </summary>
        </member>
        <member name="M:Colosoft.Query.EntityInfoAliasComparer.GetAlias(Colosoft.Query.EntityInfo)">
            <summary>
            Recupera o alias do EntityInfo.
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.EntityInfoAliasComparer.Equals(Colosoft.Query.EntityInfo,Colosoft.Query.EntityInfo)">
            <summary>
            Compara as duas entidades informadas.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.EntityInfoAliasComparer.GetHashCode(Colosoft.Query.EntityInfo)">
            <summary>
            Recupera o hash code da entidade informada.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.EntityInfoAliasComparer.Compare(Colosoft.Query.EntityInfo,Colosoft.Query.EntityInfo)">
            <summary>
            Compara as instancias informadas.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.MathematicalOperator">
            <summary>
            Possíveis operadores matemáticos.
            </summary>
        </member>
        <member name="F:Colosoft.Query.MathematicalOperator.Subtraction">
            <summary>
            Subtração.
            </summary>
        </member>
        <member name="F:Colosoft.Query.MathematicalOperator.Addition">
            <summary>
            Adição.
            </summary>
        </member>
        <member name="F:Colosoft.Query.MathematicalOperator.Division">
            <summary>
            Divisão.
            </summary>
        </member>
        <member name="F:Colosoft.Query.MathematicalOperator.Multiplication">
            <summary>
            Multiplicação.
            </summary>
        </member>
        <member name="F:Colosoft.Query.MathematicalOperator.Exponentiation">
            <summary>
            Exponenciação.
            </summary>
        </member>
        <member name="F:Colosoft.Query.MathematicalOperator.Module">
            <summary>
            Módulo.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Formula">
            <summary>
            Representa uma equação.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Formula.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Formula.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Formula.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Formula.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Formula.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Formula.Clone">
            <summary>
            Clona um container condicional.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Formula.ToString">
            <summary>
            Recupera a string que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Formula.GetMathematicalOperator(Colosoft.Text.InterpreterExpression.Expression)">
            <summary>
            Recupera o operador matemático representado pela expressão informada.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Formula.IsArithmeticOperator(Colosoft.Text.InterpreterExpression.Expression)">
            <summary>
            Verifica se a expressão informada é um operador de 
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Formula.GetFormulaSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do registro.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Formula.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados para a instancia.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Formula.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Salva os dados da instancia no escritor informado.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.Formula.Parts">
            <summary>
            Partes da formula.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Formula.Operators">
            <summary>
            Operadores da formula.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Formula.QualifiedName">
            <summary>
            Nome XML que irá representa a o tipo na serialização.
            </summary>
        </member>
        <member name="M:Colosoft.Query.FormatHelper.FormatColumnNamesInSequence(System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})">
            <summary>
            Formata os nomes das colunas em sequencia.
            </summary>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.FunctionCallOptions">
            <summary>
            Possíveis opções da chamada de função.
            </summary>
        </member>
        <member name="F:Colosoft.Query.FunctionCallOptions.None">
            <summary>
            Nenhum opção.
            </summary>
        </member>
        <member name="F:Colosoft.Query.FunctionCallOptions.Distinct">
            <summary>
            Identifica se a função possui uma opção de distinct.
            </summary>
        </member>
        <member name="T:Colosoft.Query.FunctionCall">
            <summary>
            Representa uma chamada de função com seus parâmetros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.#ctor">
            <summary>
            Consrutor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor para serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.GetFunctionCallSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera a informação de esquema para o elemento.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.ToString">
            <summary>
            Retorna a represetação em formato texto do elemento.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.Clone">
            <summary>
            Cria uma cópia do objeto de todos os seus membros.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.GetTerm(System.Runtime.Serialization.SerializationInfo,System.Int32)">
            <summary>
            Lê um termo serializado com as informações da posição <paramref name="index"/>.
            </summary>
            <param name="info"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.SetTerm(System.Runtime.Serialization.SerializationInfo,System.Int32,Colosoft.Query.ConditionalTerm)">
            <summary>
            Serializa um termo na posição <paramref name="index"/>.
            </summary>
            <param name="info"></param>
            <param name="index"></param>
            <param name="term"></param>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.WriteTerm(System.Xml.XmlWriter,Colosoft.Query.ConditionalTerm)">
            <summary>
            Serializa o termo em formato xml.
            </summary>
            <param name="writer"></param>
            <param name="term"></param>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instância anteriormente serializada.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa a instância em formato XML.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.ReadXml(System.Xml.XmlReader)">
            <summary>
            Desserializa a instância previamente serializada em formato XML.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa a instância em formato binário.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.FunctionCall.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa a instância previamente serializada em formato binário.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Colosoft.Query.FunctionCall.Call">
            <summary>
            O nome da função.
            </summary>
        </member>
        <member name="P:Colosoft.Query.FunctionCall.Parameters">
            <summary>
            A lista de parâmetros da chamada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.FunctionCall.Options">
            <summary>
            Opções da chamada de função.
            </summary>
        </member>
        <member name="P:Colosoft.Query.FunctionCall.QualifiedName">
            <summary>
            O nome do elemento na serialização.
            </summary>
        </member>
        <member name="P:Colosoft.Query.FunctionCall.ListQualifiedName">
            <summary>
            O nome do elemento da lista de parâmetros.
            </summary>
        </member>
        <member name="P:Colosoft.Query.FunctionCall.EmptyQualifiedName">
            <summary>
            Nome para identificar um elemento nulo na lista de parâmetros.
            </summary>
        </member>
        <member name="T:Colosoft.Query.GroupBy">
            <summary>
            Representa um agrupamento.
            </summary>
        </member>
        <member name="M:Colosoft.Query.GroupBy.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.GroupBy.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.GroupByEntry})">
            <summary>
            Cria uma instancia definidos as colunas.
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:Colosoft.Query.GroupBy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.GroupBy.Add(Colosoft.Query.GroupByEntry)">
            <summary>
            Adiciona uma nova coluna para a instancia.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.GroupBy.Add(System.String)">
            <summary>
            Adiciona uma nova coluna para a instancia.
            </summary>
            <param name="columnName">Nome da coluna.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.GroupBy.Parse(System.String)">
            <summary>
            Transforma a expressão em uma instancia de agrupamento.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.GroupBy.Clone">
            <summary>
            Clona um GroupBy clause.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.GroupBy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dado da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.GroupBy.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema Xml da classe.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.GroupBy.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.GroupBy.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.GroupBy.Count">
            <summary>
            Quantidade de colunas da instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.GroupByEntry">
            <summary>
            Armazena os dados de uma coluna que será usada no agrupamento.
            </summary>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.#ctor(System.Collections.Generic.List{Colosoft.Text.InterpreterExpression.Expression})">
            <summary>
            Recupera os dados da coluna de projeção com base nas expressões informadas
            </summary>
            <param name="expressions"></param>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.#ctor(System.String)">
            <summary>
            Cria a instancia.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.#ctor(Colosoft.Query.ConditionalTerm)">
            <summary>
            Cria uma instancia.
            </summary>
            <param name="term"></param>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instância anteriormente serializada.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.Clone">
            <summary>
            Clona uma projeção.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.Fill(System.Collections.Generic.List{Colosoft.Text.InterpreterExpression.Expression})">
            <summary>
            Preenche os dados da instancia com a expressões informadas.
            </summary>
            <param name="expressions"></param>
        </member>
        <member name="M:Colosoft.Query.GroupByEntry.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.GroupByEntry.Term">
            <summary>
            Termo associado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IProviderLocator">
            <summary>
            Assinatura da classe responsável por localizar os dados
            dos provedores de acesso.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IProviderLocator.GetProviderName(Colosoft.Query.QueryInfo)">
            <summary>
            Recupera o nome do provedor associado com as informações
            da consulta informada.
            </summary>
            <param name="queryInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IProviderLocator.GetProviderName(System.String)">
            <summary>
            Recupera o nome do provedor associado com o nome completo da entidade.
            </summary>
            <param name="entityFullName">Nome completo da entiade.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IProviderLocator.GetProviderName(Colosoft.Query.StoredProcedureName)">
            <summary>
            Recupera o nome do provedor associado com o nom e da storedprocedure.
            </summary>
            <param name="storedProcedureName">Nome do storedprocedure.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IQueryableContainer">
            <summary>
            Assinatura das classes que possui um queryable associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IQueryableContainer.Queryable">
            <summary>
            Queryable associado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryCommandType">
            <summary>
            Possíveis tipos de comando de uma consulta;
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryCommandType.Text">
            <summary>
            Comando de texto.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryCommandType.StoredProcedure">
            <summary>
            Chamada de uma StoredProcedure
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryCommand">
            <summary>
            Armazena os dados od comando da consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryCommand.#ctor(System.String,Colosoft.Query.QueryCommandType,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:Colosoft.Query.QueryCommand.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.QueryCommand.CommandText">
            <summary>
            Texto do comando.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryCommand.CommandType">
            <summary>
            Tipo de comando.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryCommand.Timeout">
            <summary>
            Tempo limite para a execução do comando.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryCommandContainer">
            <summary>
            Assinatura das classe que contém um comando de consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IQueryCommandContainer.Command">
            <summary>
            Instancia do comando associado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryExecuteObserver">
            <summary>
            Assinatura da classe usada para observar a execução de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryExecuteObserver.Executed(Colosoft.Query.QueryInfo,Colosoft.Query.ReferenceParameterValueCollection,Colosoft.Query.IQueryResult)">
            <summary>
            Método acionado quando a consulta for executada.
            </summary>
            <param name="info">Informações da consulta.</param>
            <param name="referenceValues"></param>
            <param name="result">Resultado da consulta.</param>
        </member>
        <member name="M:Colosoft.Query.IQueryExecuteObserver.Error(Colosoft.Query.QueryInfo,Colosoft.Query.QueryFailedInfo)">
            <summary>
            Método acionado quando ocorre uma falha na execução da consulta.
            </summary>
            <param name="info">Informações da consulta.</param>
            <param name="fail">Dados da falha.</param>
        </member>
        <member name="P:Colosoft.Query.IQueryExecuteObserver.ErrorHandlerEnabled">
            <summary>
            Identifica se o tratamento de erro está ativo.
            </summary>
        </member>
        <member name="T:Colosoft.Query.BindStrategyMode">
            <summary>
            Possíveis modos de estratégia de bind.
            </summary>
        </member>
        <member name="F:Colosoft.Query.BindStrategyMode.All">
            <summary>
            Identifica se é para realizar o bind de todos os dados
            do registro para a instancia
            </summary>
        </member>
        <member name="F:Colosoft.Query.BindStrategyMode.Differences">
            <summary>
            Identifica se é para realizar o bind somente os
            dados diferentes do registro em relação com a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryResultBindStrategySession">
            <summary>
            Assinatura da sessão de estratégia de vinculação do resultado da uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryResultBindStrategySession.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,System.Object@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="T:Colosoft.Query.IQueryResultObjectCreator">
            <summary>
            Assinatura das classes responsáveis pela criação de uma instancia para 
            o resultado da consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryResultObjectCreator.Create">
            <summary>
            Cria uma nova instancia do tipo do resultado da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.QueryResultObjectCreator">
            <summary>
            Implementação padrão do <see cref="T:Colosoft.Query.IQueryResultObjectCreator"/>.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResultObjectCreator.#ctor(System.Func{System.Object})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="creator"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultObjectCreator.#ctor(System.Type)">
            <summary>
            Cria um creator a partir do tipo informado.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultObjectCreator.Create">
            <summary>
            Cria uma nova instancia do tipo do resultado da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IQueryResultObserver">
            <summary>
            Assinatura da classe que é reponsável por observar o processamento 
            do resultado de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryResultObserver.BeginProcessing(Colosoft.Query.IQueryResult)">
            <summary>
            Método acionado quando inicia o processamento do resultado.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Query.IQueryResultObserver.LoadRecord(Colosoft.Query.IQueryResult,Colosoft.Query.Record)">
            <summary>
            Método acionado quando um registro for carregado.
            </summary>
            <param name="result"></param>
            <param name="record"></param>
        </member>
        <member name="M:Colosoft.Query.IQueryResultObserver.EndProcessing(Colosoft.Query.IQueryResult)">
            <summary>
            Método acionado quando o processamento do resultado for finalizado.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Query.IQueryResultObserver.Error(Colosoft.Query.IQueryResult,System.Exception)">
            <summary>
            Método acionado quando ocorrer algum erro no processamento do resultado.
            </summary>
            <param name="result"></param>
            <param name="exception">Instancia do erro ocorrido.</param>
        </member>
        <member name="T:Colosoft.Query.ITranslatedName">
            <summary>
            Interface para as classe que armazena um nome traduzido.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryTranslator">
            <summary>
            Interface para traduzir os nomes e propriedadades dos objetos CLR para colunas e tabelas do banco de dados
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryTranslator.GetName(Colosoft.Query.EntityInfo)">
            <summary>
            Pega nome da tabela
            </summary>
            <param name="entity">Entidade cuja qual se quer saber o nome da tabela</param>
            <returns>Nome da tabela</returns>
        </member>
        <member name="M:Colosoft.Query.IQueryTranslator.GetName(Colosoft.Query.EntityInfo,System.Boolean)">
            <summary>
            Pega nome da tabela
            </summary>
            <param name="entity">Entidade cuja qual se quer saber o nome da tabela</param>
            <param name="ignoreTypeSchema">Identifica se é para ignorar o tipo do esquema.</param>
            <returns>Nome da tabela</returns>
        </member>
        <member name="M:Colosoft.Query.IQueryTranslator.GetName(Colosoft.Query.EntityInfo,System.String)">
            <summary>
            Pega nome da coluna
            </summary>
            <param name="entity">Entidade cuja qual a coluna pertence</param>
            <param name="propertyName">Nome da propriedade que representa a coluna</param>
            <returns>Nome da coluna</returns>
        </member>
        <member name="M:Colosoft.Query.IQueryTranslator.GetName(Colosoft.Query.EntityInfo,System.String,System.Boolean)">
            <summary>
            Pega nome da coluna
            </summary>
            <param name="entity">Entidade cuja qual a coluna pertence</param>
            <param name="propertyName">Nome da propriedade que representa a coluna</param>
            <param name="ignoreTypeSchema">Identifica se é para ignorar o esquema do tipo.</param>
            <returns>Nome da coluna</returns>
        </member>
        <member name="M:Colosoft.Query.IQueryTranslator.TryGetName(Colosoft.Query.EntityInfo,System.String,Colosoft.Query.ITranslatedName@)">
            <summary>
            Tenta recupera o nome traduzido para a propriedade da entidade.
            </summary>
            <param name="entity">Informações da entidade.</param>
            <param name="propertyName">Nome da propriedade da entidade.</param>
            <param name="name">Nome encontrado.</param>
            <returns>True caseo tenha encontrada a tradução do nome.</returns>
        </member>
        <member name="M:Colosoft.Query.IQueryTranslator.TryGetName(Colosoft.Query.EntityInfo,System.String,System.Boolean,Colosoft.Query.ITranslatedName@)">
            <summary>
            Tenta recupera o nome traduzido para a propriedade da entidade.
            </summary>
            <param name="entity">Informações da entidade.</param>
            <param name="propertyName">Nome da propriedade da entidade.</param>
            <param name="ignoreTypeSchema">Identifica se é para ignorar o esquema do tipo.</param>
            <param name="name">Nome encontrado.</param>
            <returns>True caseo tenha encontrada a tradução do nome.</returns>
        </member>
        <member name="M:Colosoft.Query.IQueryTranslator.GetName(Colosoft.Query.StoredProcedureName)">
            <summary>
            Pega o nome da storedprocedure.
            </summary>
            <param name="storedProcedureName">Nome da stored procedure.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.ISourceContext">
            <summary>
            Representa o contexto da fonte de dados.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ISourceContext.CreateQuery">
            <summary>
            Cria uma nova consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ISourceContext.CreateMultiQuery">
            <summary>
            Cria uma nova instância de um container de consultas
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IWhereClause">
            <summary>
            Assinatura da clausa  where.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.Add(System.String,System.Object)">
            <summary>
            Adiciona um parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="value">Valor do parametro.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.Add(Colosoft.Query.QueryParameter)">
            <summary>
            Adiciona um parametro.
            </summary>
            <param name="parameter">Instancia do parametro.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.And(System.String)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="expression">Expressão.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.And(Colosoft.Query.Conditional)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="conditional">Condicional.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.And(Colosoft.Query.ConditionalContainer)">
            <summary>
            Adiciona um container de condição do tipo AND.
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.Or(System.String)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="expression">Expressõa.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.Or(Colosoft.Query.Conditional)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="conditional">Condicional.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.Or(Colosoft.Query.ConditionalContainer)">
            <summary>
            Adiciona um container de condição do tipo OR.
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.Start(System.String)">
            <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.Start(Colosoft.Query.Conditional)">
            <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IWhereClause.Start(Colosoft.Query.ConditionalContainer)">
            <summary>
            Adiciona o container condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.IWhereClause.Container">
            <summary>
            Container da clausula.
            </summary>
        </member>
        <member name="T:Colosoft.Query.JoinType">
            <summary>
            Tipo de junção.
            </summary>
        </member>
        <member name="F:Colosoft.Query.JoinType.Inner">
            <summary>
            INNER JOIN.
            </summary>
        </member>
        <member name="F:Colosoft.Query.JoinType.Left">
            <summary>
            Junção a partir de esquerda.
            </summary>
        </member>
        <member name="F:Colosoft.Query.JoinType.Right">
            <summary>
            Junção a partir de direita.
            </summary>
        </member>
        <member name="F:Colosoft.Query.JoinType.Cross">
            <summary>
            Jução cruzada.
            </summary>
        </member>
        <member name="T:Colosoft.Query.JoinInfo">
            <summary>
            Armazena as informações de uma junção de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.JoinInfo.#ctor">
            <summary>
            Construtor vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.JoinInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.JoinInfo.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.JoinInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.JoinInfo.Clone">
            <summary>
            Clona as informações de join.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.JoinInfo.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.JoinInfo.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.JoinInfo.Left">
            <summary>
            Apelido da entidade da esquerda.
            </summary>
        </member>
        <member name="P:Colosoft.Query.JoinInfo.Right">
            <summary>
            Apelido da entidade de direita.
            </summary>
        </member>
        <member name="P:Colosoft.Query.JoinInfo.Conditional">
            <summary>
            Condicional da junção.
            </summary>
        </member>
        <member name="P:Colosoft.Query.JoinInfo.Type">
            <summary>
            Tipo da junção.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.ILinqSourceContext">
            <summary>
            Assinatura da classe que irá representar o contexto de origem do linq.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.ILinqSourceContext.CreateQuery``1">
            <summary>
            Cria uma consulta apartir do contexto.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.ILinqSourceContext.Provider">
            <summary>
            Recupera o provedor utilizado pela instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.ISourceProvider">
            <summary>
            Provedor da fonte de consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.ISourceProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executa a consulta com a expressão informada.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Linq.LinqSourceContext">
            <summary>
            Implementação do contexto de origem do linq.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.LinqSourceContext.#ctor(Colosoft.Query.ISourceContext,Colosoft.Query.Linq.ISourceProvider)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="sourceContext"></param>
            <param name="sourceProvider"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.LinqSourceContext.CreateQuery``1">
            <summary>
            Cria uma consulta do Linq.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.LinqSourceContext.CreateQuery">
            <summary>
            Cria uma consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.LinqSourceContext.CreateMultiQuery">
            <summary>
            Cria uma multiconsulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.LinqSourceContext.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.LinqSourceContext.Provider">
            <summary>
            Provedor associado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.CustomQueryable">
            <summary>
            Implementação do Queryable para a consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.CustomQueryable.#ctor(Colosoft.Query.Queryable,System.Type)">
            <summary>
            Cria a instancia a partir de uma consulta.
            </summary>
            <param name="queryable"></param>
            <param name="elementType">Tipo do elemento do resultado da consulta.</param>
        </member>
        <member name="M:Colosoft.Query.Linq.CustomQueryable.#ctor(Colosoft.Query.Queryable,System.Type,System.Func{Colosoft.Query.Queryable,System.Collections.IEnumerable})">
            <summary>
            Cria a instancia a partir de uma consulta.
            </summary>
            <param name="queryable"></param>
            <param name="elementType"></param>
            <param name="executeSelect">Referencia do método que será usado para executar a seleção dos dados.</param>
        </member>
        <member name="M:Colosoft.Query.Linq.CustomQueryable.#ctor(Colosoft.Query.Linq.ILinqSourceContext)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="context">Contexto usado pela instancia.</param>
        </member>
        <member name="M:Colosoft.Query.Linq.CustomQueryable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.CustomQueryable.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.CustomQueryable.Context">
            <summary>
            Instancia do contexto associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.CustomQueryable.ElementType">
            <summary>
            Tipo do elemento trabalhado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.CustomQueryable.Expression">
            <summary>
            Expressão associada com a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.CustomQueryable.Provider">
            <summary>
            Recupera a instancia do provedor de consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.Queryable`1">
            <summary>
            Representa um classe de consulta.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Query.Linq.Queryable`1.#ctor(Colosoft.Query.Queryable)">
            <summary>
            Cria a instancia a partir de uma consulta.
            </summary>
            <param name="queryable"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.Queryable`1.#ctor(Colosoft.Query.Queryable,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Cria a instancia a partir de uma consulta.
            </summary>
            <param name="queryable"></param>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator">Criador de objetos.</param>
        </member>
        <member name="M:Colosoft.Query.Linq.Queryable`1.#ctor(Colosoft.Query.Queryable,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator,System.Func{Colosoft.Query.Queryable,System.Collections.Generic.IEnumerable{`0}})">
            <summary>
            Cria a instancia a partir de uma consulta.
            </summary>
            <param name="queryable"></param>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator">Criador de objetos.</param>
            <param name="executeSelect">Referencia do método que será usado para executar a seleção dos dados.</param>
        </member>
        <member name="M:Colosoft.Query.Linq.Queryable`1.#ctor(Colosoft.Query.Linq.ILinqSourceContext)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="context">Contexto usado pela instancia.</param>
        </member>
        <member name="M:Colosoft.Query.Linq.Queryable`1.GetEnumerator">
            <summary>
            Recupera o enumerador dos itens da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Queryable`1.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.Queryable`1.Context">
            <summary>
            Instancia do contexto associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Queryable`1.ElementType">
            <summary>
            Tipo do elemento trabalhado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Queryable`1.Expression">
            <summary>
            Expressão associada com a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Queryable`1.Provider">
            <summary>
            Recupera a instancia do provedor de consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.QueryableSourceProvider">
            <summary>
            Implementação do provedor de origem associado a uma consulta do Colosoft.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryableSourceProvider.#ctor(Colosoft.Query.Queryable,System.Func{Colosoft.Query.Queryable,System.Collections.IEnumerable})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryable"></param>
            <param name="executeSelect">Referencia do método que será usado para executar a seleção dos dados.</param>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryableSourceProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executa a consulta.
            </summary>
            <param name="query">Expressão da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryableSourceProvider.ExecuteSelect(Colosoft.Query.Queryable)">
            <summary>
            Executa a consulta que recupera uma seleção de valores.
            </summary>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryableSourceProvider.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.QueryableSourceProvider`1">
            <summary>
            Implementação do provedor de origem associado a uma consulta do Colosoft.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryableSourceProvider`1.#ctor(Colosoft.Query.Queryable,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator,System.Func{Colosoft.Query.Queryable,System.Collections.Generic.IEnumerable{`0}})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryable"></param>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator">Criador dos objetos.</param>
            <param name="executeSelect">Referencia do método que será usado para executar a seleção dos dados.</param>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryableSourceProvider`1.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executa a consulta.
            </summary>
            <param name="query">Expressão da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryableSourceProvider`1.ExecuteSelect(Colosoft.Query.Queryable)">
            <summary>
            Executa a consulta que recupera uma seleção de valores.
            </summary>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryableSourceProvider`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.QueryProvider">
            <summary>
            Implementação do provedor de consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryProvider.#ctor(Colosoft.Query.Linq.ILinqSourceContext)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="sourceContext"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryProvider.Create``1(Colosoft.Query.Queryable)">
            <summary>
            Cria uma instancia do provedor para a consulta informada.
            </summary>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryProvider.Create``1(Colosoft.Query.Queryable,System.Func{Colosoft.Query.Queryable,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Cria uma instancia do provedor para a consulta informada.
            </summary>
            <param name="queryable"></param>
            <param name="executeSelect">Método acionado quando for executada uma seleção de valores da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryProvider.Create``1(Colosoft.Query.Queryable,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator,System.Func{Colosoft.Query.Queryable,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Cria uma instancia do provedor para a consulta informada.
            </summary>
            <param name="queryable"></param>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator">Criador de objetos.</param>
            <param name="executeSelect">Método acionado quando for executada uma seleção de valores da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Cria uma consultada.
            </summary>
            <typeparam name="TElement"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>
            Cria um estrutura de consulta.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryProvider.Execute``1(System.Linq.Expressions.Expression)">
            <summary>
            Executa a consulta com a expressão informada.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.QueryProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executa a consulta com a expressão informada.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Linq.SourceProvider">
            <summary>
            Implementação básica do provedor da origem.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.SourceProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
            This is very the query is executed and the results are mapped to objects
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.SourceProvider.Execute(Colosoft.Query.QueryInfo)">
            <summary>
            Executa o consulta.
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.SourceProvider.CheckDispose">
            <summary>
            Verifica se a instancia já foi liberada.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.SourceProvider.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.SourceProvider.ResultMapperType">
            <summary>
            Tipo mapeado para o resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.SourceQuery`1">
            <summary>
            Representa uma consultada na fonte.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Query.Linq.SourceQuery`1.#ctor(Colosoft.Query.Linq.ILinqSourceContext,System.Linq.Expressions.Expression)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="context"></param>
            <param name="expression"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.SourceQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Recupera os itens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.SourceQuery`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Cria a consutla para o tipo informado.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.SourceQuery`1.System#Linq#IQueryable#ElementType">
            <summary>
            Tipo do elemento da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.SourceQuery`1.System#Linq#IQueryable#Expression">
            <summary>
            Expressão associada com a consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.ExpressionVisitor">
            <summary>
            Classe usada para visitar os elementos.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.ExpressionVisitor.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Visita a expressão.
            </summary>
            <param name="exp"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visita uma expressão binária.
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Vista um expressão unitária.
            </summary>
            <param name="u"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.Member">
            <summary>
            Representa um membro da projeção.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.Member.#ctor(System.String,System.Reflection.MemberInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="owner"></param>
            <param name="member"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.Member.Equals(Colosoft.Query.Linq.Translators.Member)">
            <summary>
            Verifica se o membro é igual ao membro informado.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.Member.Owner">
            <summary>
            Nome do pai do membro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.Member.Info">
            <summary>
            Instancia do membro da projeção.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.OrderDirection">
            <summary>
            Possíveis direções de ordenação.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Linq.Translators.OrderDirection.Ascending">
            <summary>
            Asc.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Linq.Translators.OrderDirection.Descending">
            <summary>
            Desc.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.OrderByItem">
            <summary>
            Representa um item da ordenação.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Linq.Translators.OrderByItem.DataMember">
            <summary>
            Membro associado.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Linq.Translators.OrderByItem.Direction">
            <summary>
            Direção de ordenação.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Linq.Translators.QueryTranslator._parameters">
            <summary>
            Lista dos parametro que serão usados na consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
            Traduz a consulta.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.Apply(Colosoft.Query.Queryable,System.Linq.Expressions.Expression)">
            <summary>
            Aplica os parametros da expressão para a consulta informada.
            </summary>
            <param name="queryable"></param>
            <param name="expression"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.ConvertToExecutableQuery(System.Linq.Expressions.Expression)">
            <summary>
            Converte a expressão da consulta com uma consulta executável.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.GetResultShape(System.Linq.Expressions.Expression)">
            <summary>
            O que essa consulta retorna?
            - um entidade unica
            - uma sequencia de entidades
            - ou nada
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.GetSourceEntity(System.Linq.Expressions.Expression,System.Type@)">
            <summary>
            Recupera os dados da tabela fonte da consulta.
            </summary>
            <param name="query"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Método acionado toda vez que um método é visitado na arvore de expressões.
            </summary>
            <param name="mc"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.VisitWhere(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visita a parte da condicional.
            </summary>
            <param name="predicate">The lambda expression parameter to the Where extension method</param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.VisitSelect(System.Linq.Expressions.LambdaExpression)">
            <param name="predicate">The lambda expression parameter to the Select extension method</param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.VisitOrderBy(System.Linq.Expressions.LambdaExpression,Colosoft.Query.Linq.Translators.OrderDirection)">
            <summary>
            Realiza a visita a expressão de ordenação.
            </summary>
            <param name="predicate"></param>
            <param name="direction"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.GetLambdaWithParamCheck(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Check to see if the expression is valid for
            Select, Where, OrderBy, ThenBy, OrderByDescending and ThenByDescending
            and then return the lmbda section
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.Parameters">
            <summary>
            Lista dos parametro que serão usados na consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.UseMethod">
            <summary>
            Método de consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.LongCount">
            <summary>
            Identiica se é para usar long para count.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.QueryTranslator.OrderByTranslator">
            <summary>
            Classe responsável por traduzir a ordenação.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.OrderByTranslator.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.OrderByTranslator.Visit(System.Linq.Expressions.Expression,Colosoft.Query.Linq.Translators.OrderDirection)">
            <summary>
            Visita a expressão de ordenação.
            </summary>
            <param name="e">Expressão que será usada na ordenação.</param>
            <param name="direction">Direção da ordenação.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.OrderByTranslator.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visita o acesso ao membro.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.OrderByTranslator.Members">
            <summary>
            Membros da ordenação.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.OrderByTranslator.OrderByClause">
            <summary>
            Recupera a clausula da ordenação.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator">
            <summary>
            Classe responsável por traduzir a projeção do resultado.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator._members">
            <summary>
            Lista dos membros da projeção.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.Linq.Translators.Member})">
            <summary>
            Cria uma instancia já com os membros da projeção.
            </summary>
            <param name="dataMembers"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator.Translate(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Traduz a expressão lambda.
            </summary>
            <param name="lambda"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visita o acesso do membro.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator.ProjectionClause">
            <summary>
            Recupera a clausula da projeção.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator.DataMembers">
            <summary>
            Membros.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.ProjectionTranslator.ProjectionLambda">
            <summary>
            Expressão Lambda da projeção.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.QueryTranslator.SkipTranslator">
            <summary>
            Classe usada para armazenar os dados da tradução da rotina de saltar registros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.SkipTranslator.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.SkipTranslator.GetNewFirstTranslator(System.Boolean)">
            <summary>
            Recupera um novo tradutor.
            </summary>
            <param name="useDefault"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.SkipTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
            Traduz a expressão.
            </summary>
            <param name="exp"></param>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.QueryTranslator.TakeTranslator">
            <summary>
            Representa o tradutor da quantidade de itens q recuperar.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.TakeTranslator.GetNewFirstTranslator(System.Boolean)">
            <summary>
            Recupera um novo tradutor.
            </summary>
            <param name="useDefault"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.TakeTranslator.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Trata a visita de uma constante.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="F:Colosoft.Query.Linq.Translators.QueryTranslator.WhereTranslator._parameters">
            <summary>
            Lista dos parametros usados
            </summary>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.WhereTranslator.#ctor(Colosoft.Query.QueryParameterCollection)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.WhereTranslator.Translate(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Traduz a expressão.
            </summary>
            <param name="lambda"></param>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.WhereTranslator.IsComparingWithNull(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Is the expression comparing a value with NULL such as:
            c.CustomerName = NULL in which case it has to be
            reworked to look like (c.CustomerName is NULL)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Linq.Translators.QueryTranslator.WhereTranslator.IsNullConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Verifica se a expressão é uma constante nula.
            </summary>
            <param name="ce"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Linq.Translators.QueryTranslator.WhereTranslator.WhereClause">
            <summary>
            Claúsula condicional.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Linq.Translators.ResultShape">
            <summary>
            Possíveis formas de resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.MinusTerm">
            <summary>
            Representa o termo que precede de um sinal negativo.
            </summary>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.#ctor(Colosoft.Query.ConditionalTerm)">
            <summary>
            Cria a instancia informa o termo associado.
            </summary>
            <param name="term"></param>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.Clone">
            <summary>
            Clona um container condicional.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.GetMinusTermSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do registro.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados para a instancia.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.MinusTerm.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Salva os dados da instancia no escritor informado.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.MinusTerm.Term">
            <summary>
            Termo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.MinusTerm.QualifiedName">
            <summary>
            Nome XML que irá representa a o tipo na serialização.
            </summary>
        </member>
        <member name="T:Colosoft.Query.MultiQueryable">
            <summary>
            Representa um container de consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.#ctor">
            <summary>
            Construtor padrão
            </summary>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor para serialização binária
            </summary>
            <param name="info">Informações de serialização</param>
            <param name="context">Contexto de serialização</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.GetEnumerator">
            <summary>
            Recupera o enumerador da lista
            </summary>
            <returns>Retorna o enumerador genérico"/></returns>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add(Colosoft.Query.Queryable)">
            <summary>
            Adiciona uma query
            </summary>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add(Colosoft.Query.Queryable,Colosoft.Query.QueryCallBack)">
            <summary>
            Adiciona uma query
            </summary>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callback">Função de callback da consulta</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add(Colosoft.Query.Queryable,Colosoft.Query.QueryCallBack,Colosoft.Query.QueryFailedCallBack)">
            <summary>
            Adiciona uma query
            </summary>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callBack">Função de callback da consulta</param>
            <param name="failedCallBack"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add``1(Colosoft.Query.Queryable,Colosoft.Query.QueryCallBack{``0})">
            <summary>
            Adiciona uma query
            </summary>
            <typeparam name="TModel">Tipo de retorno</typeparam>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callback">Função de callback da consulta</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add``1(Colosoft.Query.Queryable,Colosoft.Query.QueryCallBack{``0},Colosoft.Query.QueryFailedCallBack)">
            <summary>
            Adiciona uma query
            </summary>
            <typeparam name="TModel">Tipo de retorno</typeparam>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callback">Função de callback da consulta</param>
            <param name="failedCallBack"></param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add``1(Colosoft.Query.Queryable,Colosoft.Query.QueryCallBack{``0},Colosoft.Query.IQueryResultBindStrategy)">
            <summary>
            Adiciona uma query
            </summary>
            <typeparam name="TModel">Tipo de retorno</typeparam>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callback">Função de callback da consulta</param>
            <param name="bindStrategy">Estratégia de binding</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add``1(Colosoft.Query.Queryable,Colosoft.Query.QueryCallBack{``0},Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Adiciona uma query
            </summary>
            <typeparam name="TModel">Tipo de retorno</typeparam>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callback">Função de callback da consulta</param>
            <param name="bindStrategy">Estratégia de binding</param>
            <param name="objectCreator">Criador de objetos</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add``1(Colosoft.Query.Queryable,Colosoft.Query.QueryCallBack{``0},Colosoft.Query.QueryFailedCallBack,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Adiciona uma query
            </summary>
            <typeparam name="TModel">Tipo de retorno</typeparam>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callback">Função de callback da consulta</param>
            <param name="failedCallBack"></param>
            <param name="bindStrategy">Estratégia de binding</param>
            <param name="objectCreator">Criador de objetos</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add(Colosoft.Query.Queryable,Colosoft.Query.BindableQueryCallBack,Colosoft.Query.QueryFailedCallBack,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Adiciona uma query
            </summary>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callback">Função de callback da consulta</param>
            <param name="failedCallBack"></param>
            <param name="bindStrategy">Estratégia de binding</param>
            <param name="objectCreator">Criador de objetos</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Add(Colosoft.Query.Queryable,Colosoft.Query.BindableQueryCallBack,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Adiciona uma query
            </summary>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a ser adicionado</param>
            <param name="callback">Função de callback da consulta</param>
            <param name="bindStrategy">Estratégia de binding</param>
            <param name="objectCreator">Criador de objetos</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Remove(Colosoft.Query.Queryable)">
            <summary>
            Remove a query
            </summary>
            <param name="query"><see cref="T:Colosoft.Query.Queryable"/> a se remover</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.RemoveAt(System.Int32)">
            <summary>
            Remove a query baseada no index
            </summary>
            <param name="index">Índice no qual remover</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Execute">
            <summary>
            Executa a consulta.
            </summary>
            <returns>Resultado na forma de um vetor de <see cref="T:Colosoft.Query.QueryResult"/></returns>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.Execute(Colosoft.Query.IQueryDataSource)">
            <summary>
            Executa a consulta.
            </summary>
            <returns>Resultado na forma de um vetor de <see cref="T:Colosoft.Query.QueryResult"/></returns>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Obtém dados para serialização binária
            </summary>
            <param name="info">Informações de serialização</param>
            <param name="context">Contexto de serialização</param>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Retorna o enumerador para coleções antigas
            </summary>
            <returns>Retorna <see cref="T:System.Collections.IEnumerator"/></returns>
        </member>
        <member name="M:Colosoft.Query.MultiQueryable.CreateQueryInfos">
            <summary>
            Cria vetor de <see cref="T:Colosoft.Query.QueryInfo"/> baseado no objeto <see cref="T:Colosoft.Query.MultiQueryable"/>
            </summary>
            <returns>Retorna vetor de <see cref="T:Colosoft.Query.QueryInfo"/></returns>
        </member>
        <member name="P:Colosoft.Query.MultiQueryable.Count">
            <summary>
            Número de queries no container
            </summary>
        </member>
        <member name="P:Colosoft.Query.MultiQueryable.DataSource">
            <summary>
            Instancia da fonte de dados associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.MultiQueryable.SourceContext">
            <summary>
            Instancia do contexto de origem associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.MultiQueryable.Item(System.Int32)">
            <summary>
            Recupera a query baseado no indice
            </summary>
            <param name="index">Índice do <see cref="T:Colosoft.Query.Queryable"/></param>
            <returns>A query a ser retornada</returns>
        </member>
        <member name="M:Colosoft.Query.Namespaces.ResolveQuerySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Resolve o esquema da consulta.
            </summary>
            <param name="xs"></param>
        </member>
        <member name="P:Colosoft.Query.Namespaces.QuerySchema">
            <summary>
            Instancia do esquema da consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Operator">
            <summary>
            Representa um operação de uma condicional.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Operator.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Operator.#ctor(System.String)">
            <summary>
            Cria a instancia com o texto do operação.
            </summary>
            <param name="operatorText"></param>
        </member>
        <member name="M:Colosoft.Query.Operator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Operator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Operator.ReadXml(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Operator.WriteXml(System.Xml.XmlWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Operator.ToString">
            <summary>
            Recupera o texto da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Operator.Clone">
            <summary>
            Clona o operador.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Operator.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização compacta
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Operator.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Colosoft.Query.Operator.Op">
            <summary>
            Texto do operador.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Operator.QualifiedName">
            <summary>
            Recupera o nome qualificado para o tipo,
            </summary>
        </member>
        <member name="T:Colosoft.Query.Parser.SqlDefaultLexerConfiguration">
            <summary>
            Configuração do analizador lexa.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlDefaultLexerConfiguration.#cctor">
            <summary>
            Construtor estático.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlDefaultLexerConfiguration.GetKeywords">
            <summary>
            Recupera as palavras chave.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Parser.SqlExpressionType">
            <summary>
            Possíveis tipos de expressão.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Parser.SqlExpression">
            <summary>
            Representa um expressão sql.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlExpression.#ctor(Colosoft.Text.InterpreterExpression.Expression)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="expression">Expressão relacionadas</param>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlExpression.#ctor(Colosoft.Text.InterpreterExpression.Expression,Colosoft.Query.Parser.SqlExpressionType)">
            <summary>
            Construtor completo.
            </summary>
            <param name="value">Expressão.</param>
            <param name="type">Tipo da expressão.</param>
        </member>
        <member name="P:Colosoft.Query.Parser.SqlExpression.Value">
            <summary>
            Valor da expressão.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Parser.SqlExpression.Type">
            <summary>
            Tipo da expressão.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Parser.SqlTokenParser">
            <summary>
            Implementação do <see cref="T:Colosoft.Text.InterpreterExpression.ITokenParser"/> para comandos SQL.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Parser.SqlTokenParser.Keywords">
            <summary>
            Palavras chave do sql.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlTokenParser.#cctor">
            <summary>
            Construtor estático.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlTokenParser.ParseTokenID(System.Char)">
            <summary>
            Recupera o identificador do token.
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlTokenParser.ParseTokenID(System.String)">
            <summary>
            Recupera o identificador do token.
            </summary>
            <param name="term"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlTokenParser.GetTerm(System.Int32)">
            <summary>
            Recupera o termo com base no token.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Parser.SqlTokenParser.IsSqlAnsiFunction(System.Int32)">
            <summary>
            Verifica se o token informado é uma função Ansi do SQL.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Projection">
            <summary>
            Armazena os dados da projeção do consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Projection.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Projection.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.ProjectionEntry})">
            <summary>
            Cria uma instancia da projeção já com as colunas que serão usadas.
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:Colosoft.Query.Projection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Projection.FixLexerResult(Colosoft.Text.InterpreterExpression.LexerResult)">
            <summary>
            Fixa o resultado do analizador lexo.
            </summary>
            <param name="lResult"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Projection.FixGroupExpressions(System.Collections.Generic.List{Colosoft.Text.InterpreterExpression.Expression},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Fixa o grupo de expressões.
            </summary>
            <param name="source"></param>
            <param name="startToken"></param>
            <param name="endToken"></param>
            <param name="groupInto">Identica se é para grupar por dentro.</param>
        </member>
        <member name="M:Colosoft.Query.Projection.Add(Colosoft.Query.ProjectionEntry)">
            <summary>
            Adiciona um novo campo para a projeção.
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Projection.Add(System.String,System.String)">
            <summary>
            Adiciona um novo camp para a projeção.
            </summary>
            <param name="expression"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Projection.Concat(Colosoft.Query.Projection)">
            <summary>
            Concatena a projeção.
            </summary>
            <param name="projection"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Projection.Parse(System.String)">
            <summary>
            Transforma a expressão em uma projeção.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Projection.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Projection.Clone">
            <summary>
            Clona a projeção.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Projection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Projection.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema Xml da classe.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Projection.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Projection.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.Projection.ProjectionsLexer">
            <summary>
            Instancia do analizador lexo das projeções.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Projection.Count">
            <summary>
            Quantidade de campos da projeção.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Projection.Item(System.Int32)">
            <summary>
            Recupera os dados do campo na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Projection.FunctionName">
            <summary>
            Nome da função da projeção
            </summary>
        </member>
        <member name="T:Colosoft.Query.Projection.GroupExpressionInfo">
            <summary>
            Armazena as informações da expressão case.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Projection.GroupExpressionInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="startIndex"></param>
            <param name="stopIndex"></param>
        </member>
        <member name="F:Colosoft.Query.Projection.GroupExpressionInfo.StartIndex">
            <summary>
            Indice onde está a expressão de inicio.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Projection.GroupExpressionInfo.StopIndex">
            <summary>
            Indice onde está a expressão de fim.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ProjectionColumnInfo">
            <summary>
            Armazena as informações de uma coluna na projeção.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ProjectionColumnInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="alias"></param>
        </member>
        <member name="P:Colosoft.Query.ProjectionColumnInfo.Owner">
            <summary>
            Proprietário da coluna.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ProjectionColumnInfo.Name">
            <summary>
            Nome da coluna.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ProjectionColumnInfo.Alias">
            <summary>
            Alias da coluna.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ProjectionEntry">
            <summary>
            Armazena os dados do campo da projeção.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.#ctor">
            <summary>
            Construtor vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.#ctor(Colosoft.Query.ConditionalTerm,System.String)">
            <summary>
            Cria a instancia com o termo associado e o alias da entrada.
            </summary>
            <param name="term"></param>
            <param name="alias"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.#ctor(System.String,System.String)">
            <summary>
            Cria a instancia.
            </summary>
            <param name="expression"></param>
            <param name="alias"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.#ctor(System.Collections.Generic.List{Colosoft.Text.InterpreterExpression.Expression})">
            <summary>
            Recupera os dados da coluna de projeção com base nas expressões informadas
            </summary>
            <param name="expressions"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instância anteriormente serializada.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.Fill(System.Collections.Generic.List{Colosoft.Text.InterpreterExpression.Expression})">
            <summary>
            Preenche os dados da instancia com a expressões informadas.
            </summary>
            <param name="expressions"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.GetParameters(System.Collections.Generic.List{Colosoft.Text.InterpreterExpression.Expression},System.Int32@,System.Int32@)">
            <summary>
            Recupera os indice os parametros contidos nas expressões.
            </summary>
            <param name="expressions"></param>
            <param name="ownerIndex"></param>
            <param name="aliasIndex"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.CheckSimpleEntry">
            <summary>
            Verifica se é uma entrada simples, ou seja possui apenas uma coluna.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.GetColumnInfo">
            <summary>
            Recupera as informações da coluna associada.
            </summary>
            <remarks>Os dados da coluna serão recuperados somente se a entrada for considerada simples.</remarks>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.Clone">
            <summary>
            Clona uma projeção.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.Parse(System.String)">
            <summary>
            Transforma a expressão em um campo de projeção.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionEntry.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.ProjectionEntry.Term">
            <summary>
            Termo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ProjectionEntry.Alias">
            <summary>
            Apelido do campo de projeção.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ProjectionSearcherResult">
            <summary>
            Armazena do resultado de uma pesquisa de projeção.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ProjectionSearcherResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Cria a instancia com os nomes da colunas para a projeção.
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionSearcherResult.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.ProjectionSearcherResult.Entry})">
            <summary>
            Cria a instancia com a relação das entradas.
            </summary>
            <param name="entries"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionSearcherResult.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionSearcherResult.GetEnumerator">
            <summary>
            Recupera o enumerador das entradas.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionSearcherResult.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador das entradas
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.ProjectionSearcherResult.Item(System.Int32)">
            <summary>
            Recupera a entrada pelo indice informado.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.ProjectionSearcherResult.Count">
            <summary>
            Quantidade de itens no resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ProjectionSearcherResult.Entry">
            <summary>
            Representa uma entrada do resultado.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ProjectionSearcherResult.Entry.#ctor(System.String)">
            <summary>
            Cria uma entrada com o nome da coluna.
            </summary>
            <param name="columnName"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionSearcherResult.Entry.#ctor(System.String,System.String)">
            <summary>
            Cria uma entrada com o nome da coluna e seu apelido.
            </summary>
            <param name="columnName"></param>
            <param name="alias"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionSearcherResult.Entry.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.ProjectionSearcherResult.Entry.ColumnName">
            <summary>
            Nome da coluna associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ProjectionSearcherResult.Entry.Alias">
            <summary>
            Apelido da coluna.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IProjectionSearcher">
            <summary>
            Assinatura de pesquisador de projeções.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IProjectionSearcher.Search(Colosoft.Query.EntityInfo)">
            <summary>
            Localiza as projeções que pode ser aplicadas sobre as informações da entidade informada.
            </summary>
            <param name="entityInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.ProjectionProvider">
            <summary>
            Classe usada para auxialiar na montagem de projeção para 
            tipos consultados.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ProjectionProvider.Add(Colosoft.Query.IProjectionSearcher)">
            <summary>
            Adiciona um pesquisador.
            </summary>
            <param name="searcher"></param>
        </member>
        <member name="M:Colosoft.Query.ProjectionProvider.Remove(Colosoft.Query.IProjectionSearcher)">
            <summary>
            Remove o pesquisador.
            </summary>
            <param name="searcher"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionProvider.Search(Colosoft.Query.EntityInfo)">
            <summary>
            Pesquisa a projeção para as informações da entidade.
            </summary>
            <param name="entityInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionProvider.GetEnumerator">
            <summary>
            Recupera o enumerador dos pesquisadores.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ProjectionProvider.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador dos pesquisadores.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.ProjectionProvider.Instance">
            <summary>
            Instancia do provedor.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ProjectionProvider.Item(System.Int32)">
            <summary>
            Recupera o pesquisador no indice informado.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.ProjectionProvider.Count">
            <summary>
            Quantidade de pesquisadores.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.ArgumentException_ParameterWithSameNameAlreadyExists">
            <summary>
              Looks up a localized string similar to A parameter with the name &apos;{0}&apos; already exists on the procedure &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.ArgumentNullException_WhereClause">
            <summary>
              Looks up a localized string similar to WhereClause missing in query..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.DataSourceUndefined">
            <summary>
              Looks up a localized string similar to DataSource undefined..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.Exception_FailOnLoadDataSourceToSourceContext">
            <summary>
              Looks up a localized string similar to Source context not in the dependency injection container.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.Exception_NotFoundEmptyConstructorForType">
            <summary>
              Looks up a localized string similar to Not found empty constructor for type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.InvalidOperationException_ContextUndefined">
            <summary>
              Looks up a localized string similar to Context undefined..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.InvalidOperationException_ProviderOfContextUndefined">
            <summary>
              Looks up a localized string similar to Provider of context undefined..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.InvalidRecordChecksumException_Message">
             <summary>
               Looks up a localized string similar to Invalid checksum for record.
            Availables fields: {0}.
             </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.MultiQueryable_MultiQueryableExecuteErrorProcess">
            <summary>
              Looks up a localized string similar to Cannot possible execute all queries for multiquery..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.Record_DeserializeFieldError">
            <summary>
              Looks up a localized string similar to An error ocurred until deserialize field &apos;{0}&apos; of type &apos;{1}&apos;. &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.Record_SerializeFieldError">
            <summary>
              Looks up a localized string similar to An error ocurred until serialize field &apos;{0}&apos; of type &apos;{1}&apos;. &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.RecordFieldNotFoundException_Message">
             <summary>
               Looks up a localized string similar to Field &apos;{0}&apos; not found on record.
            Availables fields: {1}.
             </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.RecordFieldNotFoundExceptionWithQueryCommand_Message">
             <summary>
               Looks up a localized string similar to Field &apos;{0}&apos; not found on record.
            Availables fields: {1}
            Comand:{2}.
             </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.ServiceLocatorUndefined">
            <summary>
              Looks up a localized string similar to Service locator undefined..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.TypeBindStrategy_ConvertValueError">
            <summary>
              Looks up a localized string similar to An error ocurred when bind value to property &apos;{0}&apos; from type &apos;{1}&apos;. Object of type &apos;{2}&apos; cannot be converted to type &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.TypeBindStrategy_ConvertValueError2">
            <summary>
              Looks up a localized string similar to An error ocorred when bind value. Object of type &apos;{0}&apos; cannot be converted to type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.TypeBindStrategy_DuplicateFieldName">
             <summary>
               Looks up a localized string similar to Duplicate field with name &apos;{0}&apos;.
            TypeBinding: {1}
            Descriptor: {2}.
             </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.TypeBindStrategy_GetPropertyValueError">
            <summary>
              Looks up a localized string similar to An error ocurred when get value of property &apos;{0}&apos; from instance of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Properties.Resources.ValidationQueryResult_NotMatchFields">
             <summary>
               Looks up a localized string similar to Query result field no match with projection field.
            Project fields: {0}
            Result fields: {1}.
             </summary>
        </member>
        <member name="T:Colosoft.Query.Queryable">
            <summary>
            Representa um estrutura de consulta.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Queryable._parent">
            <summary>
            Armazena a relação da consulta pai no caso de subconsulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Queryable.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Queryable.#ctor(System.String)">
            <summary>
            Cria uma consulta iniciando com a expressão condicional.
            </summary>
            <param name="whereExpression"></param>
        </member>
        <member name="M:Colosoft.Query.Queryable.#ctor(Colosoft.Query.ConditionalContainer)">
            <summary>
            Cria uma consulta já com os parametros condicionais.
            </summary>
            <param name="conditional"></param>
        </member>
        <member name="M:Colosoft.Query.Queryable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Queryable.IgnoreTypeSchema">
            <summary>
            Identifica que é para ignora o esquema de tipo.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AsQueryable``1">
            <summary>
            Converte para um queryble do linq.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AsQueryable``1(Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Converte para um queryble do linq.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator">Criador dos objetos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AsQueryable``1(System.Func{System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Converte para um queryble do linq.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="processor">Método usado para processar os itens do resultado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AddConditionalDescription(Colosoft.IMessageFormattable,System.String)">
            <summary>
            Adiciona a descrição da condicinal aplicada a consulta.
            </summary>
            <param name="description">Descrição que será adicionada.</param>
            <param name="parameterName">Nome do parametro associado a condicionais.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AddConditionalDescription(System.String,System.String)">
            <summary>
            Adiciona a descrição da condicinal aplicada a consulta.
            </summary>
            <param name="description">Descrição que será adicionada.</param>
            <param name="parameterName">Nome do parametro associado a condicionais.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AddDescription(System.Lazy{Colosoft.IMessageFormattable},System.String)">
            <summary>
            Adiciona a descrição da condicional aplicada a consulta.
            </summary>
            <param name="description"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AddDescription(System.Lazy{System.String},System.String)">
            <summary>
            Adiciona a descrição da condicional aplicada a consulta.
            </summary>
            <param name="description"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AddDescription(System.Func{System.String},System.String)">
            <summary>
            Adiciona a descrição da condicional aplicada a consulta.
            </summary>
            <param name="description"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.AddDescription(System.Func{Colosoft.IMessageFormattable},System.String)">
            <summary>
            Adiciona a descrição da condicional aplicada a consulta.
            </summary>
            <param name="description"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Provider(System.String)">
            <summary>
            Configura o provider da consulta.
            </summary>
            <param name="providerName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.CreateWhere">
            <summary>
            Where da consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Queryable.CreateWhereInnerJoin``1(System.String)">
            <summary>
            Where de um inner join.
            </summary>
            <param name="alias">Alias do Join.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.CreateWhereLeftJoin``1(System.String)">
            <summary>
            Where de um left join.
            </summary>
            <param name="alias">Alias do Join.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.CreateWhereRightJoin``1(System.String)">
            <summary>
            Where de um right join.
            </summary>
            <param name="alias">Alias do Join.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.CreateWhereJoin(System.String,Colosoft.Query.JoinType,System.String)">
            <summary>
            Where de um join.
            </summary>
            <param name="entityFullName">Nome da entidade de join.</param>
            <param name="type">Tipo do join.</param>
            <param name="alias">Alias do Join.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.GetWhereJoin``1">
             <summary>
            Recupera uma whereClause de join.
             </summary>
             <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.GetWhereJoin(System.String)">
            <summary>
            Recupera uma whereClause de join.
            </summary>
            <param name="entityFullName">Nome da entidade.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.SetStoredProcedure(System.String,System.String)">
            <summary>
            Faz a query representar uma StoredProcedure.
            </summary>
            <param name="name">Nome da StoredProcedure a ser representada.</param>
            <param name="providerName">Nome do provedor de conexão de banco de dados da procedure.</param>
            <returns>Referência a própria instância.</returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.RemoveStoredProcedure">
            <summary>
            Remove da query a StoredProcedure fazendo com que ela volte a ser uma query simples.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Having(Colosoft.Query.ConditionalContainer)">
            <summary>
            Define o container condicional do having.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Having(System.String)">
            <summary>
            Define as condicionais do having.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Where(Colosoft.Query.ConditionalContainer)">
            <summary>
            Define o container condicional da consulta.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Where(System.String)">
            <summary>
            Define as condicionais da consulta.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Add(Colosoft.Query.QueryParameter)">
            <summary>
            Adiciona um novo parametro na consulta.
            </summary>
            <param name="parameter">Paramentro a ser adicionado.</param>
            <returns>Retorna a referencia da consulta aonde o parametro foi adicionado.</returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Add(Colosoft.Query.QueryParameter[])">
            <summary>
            Adiciona um novo conjunto de parametros na consulta.
            </summary>
            <param name="parameters">Parametros a serem adicionados.</param>
            <returns>Retorna a referencia da consulta aonde os parametros foram adicionados.</returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Add(System.Collections.Generic.IEnumerable{Colosoft.Query.QueryParameter})">
            <summary>
            Adiciona um novo conjunto de parametros na consulta.
            </summary>
            <param name="parameters">Parametros a serem adicionados.</param>
            <returns>Retorna a referencia da consulta aonde os parametros foram adicionados.</returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Add(System.String,System.Object)">
            <summary>
            Adiciona um parametro para a consulta.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Add(System.String,System.Object,Colosoft.Query.ParameterDirection)">
            <summary>
            Adiciona um parametro para consulta.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Join(System.String,Colosoft.Query.JoinType,Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona uma consulta
            </summary>
            <param name="entityFullName"></param>
            <param name="type"></param>
            <param name="conditional"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Join(Colosoft.Query.Queryable,Colosoft.Query.JoinType,Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona uma consulta
            </summary>
            <param name="queryable"></param>
            <param name="type"></param>
            <param name="conditional"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Join``1(Colosoft.Query.JoinType,Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona uma junção para a consulta.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <param name="alias"></param>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.CrossJoin``1(System.String)">
            <summary>
            Adiciona uma junção cruzada para a consulta.
            </summary>
            <typeparam name="T">Tipo da classe que será feita a junção.</typeparam>
            <param name="alias">Apelido da junção.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.CrossJoin(Colosoft.Query.Queryable,System.String)">
            <summary>
            Adiciona uma junção cruzada com a consulta informada.
            </summary>
            <param name="query">Consulta que irá representar a junção.</param>
            <param name="alias">Apelido da junçã.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.InnerJoin``1(Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona uma junção para a consulta.
            </summary>
            <typeparam name="T">Tipo de classe que será feita a junção</typeparam>
            <param name="alias">Apelido da junção.</param>
            <param name="conditional">Condicional da junção.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.InnerJoin``1(System.String,System.String)">
            <summary>
            Adiciona uma junção para a consulta.
            </summary>
            <typeparam name="T">Tipo de classe que será feita a junção</typeparam>
            <param name="expression">Expressão condicional da junção.</param>
            <param name="alias">Apelido da junção.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.InnerJoin(Colosoft.Query.Queryable,Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona uma junção para a consulta.
            </summary>
            <param name="query">Query aninhada no join.</param>
            <param name="alias">Apelido da junção.</param>
            <param name="conditional">Condicional da junção.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.InnerJoin(Colosoft.Query.Queryable,System.String,System.String)">
            <summary>
            Adiciona uma junção para a consulta.
            </summary>
            <param name="query">Query aninhada no join.</param>
            <param name="expression">Expressão condicional da junção.</param>
            <param name="alias">Apelido da junção.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.LeftJoin``1(Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona um LEFT JOIN para a consulta.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="conditional"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.LeftJoin``1(System.String,System.String)">
            <summary>
            Adiciona um LEFT JOIN para a consulta.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.LeftJoin(Colosoft.Query.Queryable,Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona um LEFT JOIN para a consulta.
            </summary>
            <param name="query">Query aninhada no join.</param>
            <param name="conditional"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.LeftJoin(Colosoft.Query.Queryable,System.String,System.String)">
            <summary>
            Adiciona um LEFT JOIN para a consulta.
            </summary>
            <param name="query">Query aninhada no join.</param>
            <param name="expression"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.RightJoin``1(Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona um RIGHT JOIN para a consulta.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="conditional"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.RightJoin``1(System.String,System.String)">
            <summary>
            Adiciona um RIGHT JOIN para a consulta.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.RightJoin(Colosoft.Query.Queryable,System.String,System.String)">
            <summary>
            Adiciona um RIGHT JOIN para a consulta.
            </summary>
            <param name="query">Query aninhada no join.</param>
            <param name="expression"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.RightJoin(Colosoft.Query.Queryable,Colosoft.Query.ConditionalContainer,System.String)">
            <summary>
            Adiciona um RIGHT JOIN para a consulta.
            </summary>
            <param name="query">Query aninhada no join.</param>
            <param name="conditional"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Select(Colosoft.Query.Projection)">
            <summary>
            Define a projeção de seleção.
            </summary>
            <param name="projection"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Select(System.String)">
            <summary>
            Define a projeção da seleção.
            </summary>
            <param name="expression">Expressão a projeção.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Define a projeção da seleção.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertiesSelector">Propriedades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.SelectDistinct">
            <summary>
            Faz seleção distinta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.SelectDistinct(Colosoft.Query.Projection)">
            <summary>
            Define a projeção de seleção distinta.
            </summary>
            <param name="projection"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.SelectDistinct(System.String)">
            <summary>
            Define a projeção da seleção.
            </summary>
            <param name="expression">Expressão a projeção.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.SelectDistinct``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Define a projeção da seleção.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertiesSelector">Propriedades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Count">
            <summary>
            Define a projeção para recupera a função COUNT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Count(System.String)">
            <summary>
            Conta segundo uma expressão.
            </summary>
            <param name="countExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.From``1(System.String)">
            <summary>
            Define a entidade sobre qual a pesquisa será realizada.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.From(Colosoft.Query.EntityInfo)">
            <summary>
            Define a entidade sobre qual a pesquisa será realizada.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.From(Colosoft.Query.Queryable,System.String)">
            <summary>
            Define a entidade sobre qual a pesquisa será realizada.
            </summary>
            <param name="query"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.OrderBy(System.String)">
            <summary>
            Define a ordenação do resultado.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.OrderBy(Colosoft.Query.Sort)">
            <summary>
            Define a ordenação do resultado.
            </summary>
            <param name="sort">Instancia com os dados da ordenação.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.GroupBy(Colosoft.Query.GroupBy)">
            <summary>
            Define o agrupamento do resultado.
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.GroupBy(System.String)">
            <summary>
            Define o agrupamento do resultado.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.GroupBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Define a projeção da seleção.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertiesSelector">Propriedades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Skip(System.Int32)">
            <summary>
            Salta os skip primeiros registros do resultado
            </summary>
            <param name="skip">Número de registros a serem saltados</param>
            <returns>Instância atual do Queryable</returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Take(System.Int32)">
            <summary>
            Traz os count primeiros registros do resultado
            </summary>
            <param name="count">Número de registros a serem trazidos</param>
            <returns>Instância atual do Queryable</returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.SetCommandTimeout(System.Int32)">
            <summary>
            Define o tempo de espera do comando.
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.SetIsolationLevel(System.Transactions.IsolationLevel)">
            <summary>
            Define o nível de isolamento da consulta.
            </summary>
            <param name="isolationLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.BeginSubQuery">
            <summary>
            Inicia uma subconsulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.BeginSubQuery(Colosoft.Query.SubQueryCallBack,Colosoft.Query.SubQueryFailedCallBack)">
            <summary>
            Inicia uma subconsulta.
            </summary>
            <param name="callBack">Callback acionado quando a subquery for executada.</param>
            <param name="failedCallBack">Callback acioando quando ocorrer alguma falha na execução da subquery.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.EndSubQuery">
            <summary>
            Finaliza a subconsulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Union(Colosoft.Query.Queryable)">
            <summary>
            Cria uma união com a consulta informada.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.UnionAll(Colosoft.Query.Queryable)">
            <summary>
            Cria uma união do tipo ALL com a consulta informada.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.ConfigureExecutePredicate(System.String,Colosoft.Query.QueryParameter[])">
            <summary>
            Configura o predicado que será usado na execuçao.
            </summary>
            <param name="expression"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.NoUseCache">
            <summary>
            Identifica que não é para usar o cache 
            no resultado da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Execute(Colosoft.Query.IQueryDataSource)">
            <summary>
            Executa a consulta na fonte de dados informada.
            </summary>
            <param name="dataSource"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Execute">
            <summary>
            Executa a consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Execute``1(Colosoft.Query.IQueryDataSource,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            
            Executa a consulta.
            </summary>
            <param name="dataSource">Intancia da origem de dados que será usada.</param>
            <param name="bindStrategy">Estratégia de vinculação que será utilizada.</param>
            <param name="objectCreator">Instancia responsável pela criação do objeto.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Execute``1">
            <summary>
            Executa a consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.ExistsResult">
            <summary>
            Verifica se a consulta possui algum resultado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.Clone">
            <summary>
            Clona o queryable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.ProjectionFix">
            <summary>
            Fixa a projeção da consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Queryable.CreateQueryInfo(Colosoft.Query.QueryMethod)">
            <summary>
            Cria um QueryInfo da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.QueryInfoNestedQueriesRecordProcessed(System.Object,Colosoft.Query.NestedQueriesRecordProcessedEventArgs)">
            <summary>
            Método acionado quando o registro de uma consulta aninhada for processada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Query.Queryable.QueryInfoNestedQueryProcessed(System.Object,Colosoft.Query.NestedQueryProcessedEventArgs)">
            <summary>
            Método acionado quando uma consulta aninhada for processada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Query.Queryable.QueryInfoNestedQueriesProcessed(System.Object,Colosoft.Query.NestedQueriesProcessedEventArgs)">
            <summary>
            Método acionado quando as consultas aninhadas forem processadas.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Query.Queryable.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Queryable.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Queryable.ReadItem``1(System.Xml.XmlReader,System.String)">
            <summary>
            Recupera o item do Reader.
            </summary>
            <typeparam name="T">Tipo da instancia que será preechida.</typeparam>
            <param name="reader"></param>
            <param name="itemName">Nome do item.</param>
        </member>
        <member name="M:Colosoft.Query.Queryable.WriteItem``1(System.Xml.XmlWriter,System.String,``0)">
            <summary>
            Escreve os dados do item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="writer"></param>
            <param name="itemName">Nome do item.</param>
            <param name="item">Instancia do item.</param>
        </member>
        <member name="E:Colosoft.Query.Queryable.NestedQueriesProcessed">
            <summary>
            Evento acionado quando as consulta aninhadas forem processadas.
            </summary>
        </member>
        <member name="E:Colosoft.Query.Queryable.NestedQueryProcessed">
            <summary>
            Evento acioando quando uma consulta aninhada for processada.
            </summary>
        </member>
        <member name="E:Colosoft.Query.Queryable.NestedQueriesRecordProcessed">
            <summary>
            Evento acionado quando um registro das consultas aninhadas for processado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.IgnoreTypeSchemaInternal">
            <summary>
            Identifica se para ignorar o esquema de tipo.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.IsolationLevel">
            <summary>
            Nível de isolamento da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.CommandTimeout">
            <summary>
            Tempo de espera antes de terminar a tentativa de executar um comando e de gerar um erro.
            </summary>
            <value>O tempo em segundos de esperar o comando executar. O padrão é 30 segundos.</value>
        </member>
        <member name="P:Colosoft.Query.Queryable.ProviderName">
            <summary>
            Nome do provedor que será usado na consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.CanUseCache">
            <summary>
            Identifica se pode usar o cache para obter o resultado da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.ExecutePredicate">
            <summary>
            Predicado que define a execução da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.SubQueryCallBack">
            <summary>
            Callback da subquery representada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.SubQueryFailedCallBack">
            <summary>
            Callback da falha da subquery representada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.Joins">
            <summary>
            Informação dos joins da query.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.JoinEntities">
            <summary>
            Relação das entidades do join.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.WhereClause">
            <summary>
            Clausula WHERE.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.Entity">
            <summary>
            Informações da entidade que será processada pela pesquisa.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.DataSource">
            <summary>
            Instancia da fonte de dados associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.SourceContext">
            <summary>
            Instancia do contexto de origem associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.Sort">
            <summary>
            Dados da ordenação da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.Projection">
            <summary>
            Projeção de seleção.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.GroupByClause">
            <summary>
            Clausula da agrupamento da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.HavingClause">
            <summary>
            Clausula having.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.TakeParameters">
            <summary>
            Parameter de recuperação.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.Parameters">
            <summary>
            Parametros da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.StoredProcedureName">
            <summary>
            Nome da StoredProcedure a ser executada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.IsStoredProcedure">
            <summary>
            Retorna se a query representa uma StoredProcedure.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.NestedQueries">
            <summary>
            Consultas aninhadas.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.Unions">
            <summary>
            Uniões da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Queryable.SearchParameterDescriptions">
            <summary>
            Descrições dos parametros de pesquisa.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryableExecuterHandler`1">
            <summary>
            Argumentos do executor de consultas.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryFailedReason">
            <summary>
            Armazena a razão por ter havido uma falha na consulta.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryFailedReason.Error">
            <summary>
            Ocorreu um erro na consulta no servidor.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryFailedReason.PreviousQueryFailed">
            <summary>
            Alguma consulta anterior, no caso de mult-consulta, falhou.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryFailedReason.Aborted">
            <summary>
            Consulta abortada.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryFailedInfo">
            <summary>
            Armazena as informações da falha de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryFailedInfo.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryFailedInfo.#ctor(Colosoft.Query.QueryFailedReason,Colosoft.IMessageFormattable,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="reason"></param>
            <param name="message"></param>
            <param name="error"></param>
        </member>
        <member name="P:Colosoft.Query.QueryFailedInfo.Reason">
            <summary>
            Razão pela falha.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryFailedInfo.Message">
            <summary>
            Mensagem associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryFailedInfo.Error">
            <summary>
            Erro associado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryCallBack">
            <summary>
            Callback da execução de uma consulta.
            </summary>
            <param name="sender">Disparador do callbakc</param>
            <param name="info">Informações da consulta</param>
            <param name="result">Resultado da consulta</param>
        </member>
        <member name="T:Colosoft.Query.QueryCallBack`1">
            <summary>
            Callback da execução de uma consulta.
            </summary>
            <param name="sender">Disparador do callback</param>
            <param name="info">Informações da consulta</param>
            <param name="result">Resultado da consulta</param>
        </member>
        <member name="T:Colosoft.Query.BindableQueryCallBack">
            <summary>
            CallBack da execução de uma consulta.
            </summary>
            <param name="sender">Disparador do callback.</param>
            <param name="info">Informações da consulta.</param>
            <param name="result">Resultado da consulta.</param>
        </member>
        <member name="T:Colosoft.Query.QueryFailedCallBack">
            <summary>
            Callback acionado quando ocorre um falha a execução de uma consulta.
            </summary>
            <param name="sender">Disparador do callback</param>
            <param name="info">Informações da consulta</param>
            <param name="result">Detalhes da falha ocorrida.</param>
        </member>
        <member name="T:Colosoft.Query.QueryCallBackWrapper`1">
            <summary>
            Wrapper para callback genérico
            </summary>
            <typeparam name="TModel">Tipo de retorno do callback</typeparam>
        </member>
        <member name="M:Colosoft.Query.QueryCallBackWrapper`1.ExecuteCallBack(Colosoft.Query.MultiQueryable,Colosoft.Query.QueryInfo,Colosoft.Query.IQueryResult)">
            <summary>
            Executa callback
            </summary>
            <param name="sender">Objeto que disparou a execução</param>
            <param name="info">Informações da consulta</param>
            <param name="result">Resultado da consulta</param>
        </member>
        <member name="M:Colosoft.Query.QueryCallBackWrapper`1.RemoveCallBack">
            <summary>
            Remove callback do wrapper
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryCallBackWrapper`1.BindStrategy">
            <summary>
            Estratégia de binding
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryCallBackWrapper`1.ObjectCreator">
            <summary>
            Criador de objetos
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryCallBackWrapper`1.QueryCallBack">
            <summary>
            Objeto do Callback
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryException">
            <summary>
            Representa uma Exception disparada pela parte de consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryException.#ctor(System.String)">
            <summary>
            Cria a instancia com a mensagem informada.
            </summary>
            <param name="message">Mensagem do erro.</param>
        </member>
        <member name="M:Colosoft.Query.QueryException.#ctor(System.String,System.Exception)">
            <summary>
            Cria a instancia com a mensagem e o erro interno.
            </summary>
            <param name="message">Mensagem do erro.</param>
            <param name="innerException">Erro interno.</param>
        </member>
        <member name="M:Colosoft.Query.QueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Método usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Colosoft.Query.QueryInvalidOperationException">
            <summary>
            Representa o erro de operação inválida.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryInvalidOperationException.#ctor(System.String)">
            <summary>
            Cria a instancia com a mensagem informada.
            </summary>
            <param name="message">Mensagem do erro.</param>
        </member>
        <member name="M:Colosoft.Query.QueryInvalidOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Cria a instancia com a mensagem e o erro interno.
            </summary>
            <param name="message">Mensagem do erro.</param>
            <param name="innerException">Erro interno.</param>
        </member>
        <member name="M:Colosoft.Query.QueryInvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryInvalidOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Método usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Colosoft.Query.TypeBindStrategyException">
            <summary>
            Representa o erro na estratégio de vinculação de tipo.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategyException.#ctor(System.String)">
            <summary>
            Cria a instancia com a mensagem informada.
            </summary>
            <param name="message">Mensagem do erro.</param>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategyException.#ctor(System.String,System.Exception)">
            <summary>
            Cria a instancia com a mensagem e o erro interno.
            </summary>
            <param name="message">Mensagem do erro.</param>
            <param name="innerException">Erro interno.</param>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Método usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Colosoft.Query.ConditionalParserException">
            <summary>
            Representa um erro do parser
            </summary>
        </member>
        <member name="M:Colosoft.Query.ConditionalParserException.#ctor(System.String)">
            <summary>
            Cria a instancia com a mensagem informada.
            </summary>
            <param name="message">Mensagem do erro.</param>
        </member>
        <member name="M:Colosoft.Query.ConditionalParserException.#ctor(System.String,System.Exception)">
            <summary>
            Cria a instancia com a mensagem e o erro interno.
            </summary>
            <param name="message">Mensagem do erro.</param>
            <param name="innerException">Erro interno.</param>
        </member>
        <member name="M:Colosoft.Query.ConditionalParserException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ConditionalParserException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Método usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Colosoft.Query.QueryExecutePredicate">
            <summary>
            Representa o predicado usado para definir se uma consulta aninha
            deve ou não ser executada com base em parametros da consulta pai.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.#ctor">
            <summary>
            Construtor vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.#ctor(System.String,Colosoft.Query.QueryParameter[],Colosoft.Query.QueryExecutePredicate.RequiredField[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="expression"></param>
            <param name="parameters"></param>
            <param name="requiredFields"></param>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.Create(System.String,Colosoft.Query.QueryParameter[])">
            <summary>
            Cria um novo predicado de execução.
            </summary>
            <param name="expression"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.Verify(Colosoft.Query.IRecord)">
            <summary>
            Verifica se o predicado é valido com os dados
            do registro informado.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.NavigateRecordMethods(System.Linq.Expressions.Expression)">
            <summary>
            Navega pelos método do Record que estão na expressão informada.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema que representa o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.Clone">
            <summary>
            Clona a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.QueryExecutePredicate.Expression">
            <summary>
            Expressão do predicado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryExecutePredicate.RequiredFields">
            <summary>
            Relação dos campos requeridos para o processamento do predicado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryExecutePredicate.Parameters">
            <summary>
            Parametros do predicado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryExecutePredicate.RequiredField">
            <summary>
            Armazena os dados de um campo requerido.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.RequiredField.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.RequiredField.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.RequiredField.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.RequiredField.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema que representa o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryExecutePredicate.RequiredField.Clone">
            <summary>
            Clona a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.QueryExecutePredicate.RequiredField.Name">
            <summary>
            Nome do campo.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryExecutePredicate.RequiredField.Index">
            <summary>
            Indice do campo.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryMethod">
            <summary>
            Tipos dos métodos de consulta.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryMethod.Select">
            <summary>
            Consulta do tipo de seleção.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryMethod.Count">
            <summary>
            Consulta para recuperar a quantidade de registros.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryMethod.Sum">
            <summary>
            Consulta para recuperar a soma de uma das colunas do resulta.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryMethod.Max">
            <summary>
            Consulta para recuperar o valor máximo de uma coluna.
            </summary>
        </member>
        <member name="T:Colosoft.Query.NestedQueriesProcessedEventArgs">
            <summary>
            Argumentos do evento de processamento das consultas aninhada.
            </summary>
        </member>
        <member name="M:Colosoft.Query.NestedQueriesProcessedEventArgs.#ctor(System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="recordsCount">Quantidade de registros processados.</param>
        </member>
        <member name="P:Colosoft.Query.NestedQueriesProcessedEventArgs.RecordsCount">
            <summary>
            Quantidade de registro processados.
            </summary>
        </member>
        <member name="T:Colosoft.Query.NestedQueryProcessedEventArgs">
            <summary>
            Argumentos do evento acioando quando um consulta aninhada for processada.
            </summary>
        </member>
        <member name="M:Colosoft.Query.NestedQueryProcessedEventArgs.#ctor(Colosoft.Query.QueryInfo,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="nestedQuery">Consulta aninhada associada.</param>
            <param name="recordPosition">Posição do registro que está sendo processado.</param>
        </member>
        <member name="P:Colosoft.Query.NestedQueryProcessedEventArgs.RecordPosition">
            <summary>
            Posição do registro que está sendo processado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.NestedQueryProcessedEventArgs.NestedQuery">
            <summary>
            Instancia da consulta aninhada.
            </summary>
        </member>
        <member name="T:Colosoft.Query.NestedQueriesRecordProcessedEventArgs">
            <summary>
            Argumentos do evento acioando quando um registros das consultas aninhas for processado.
            </summary>
        </member>
        <member name="M:Colosoft.Query.NestedQueriesRecordProcessedEventArgs.#ctor(System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="recordPosition">Posição do registro que está sendo processado.</param>
        </member>
        <member name="P:Colosoft.Query.NestedQueriesRecordProcessedEventArgs.RecordPosition">
            <summary>
            Posição do registro que está sendo processado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.NestedQueriesProcessedHandler">
            <summary>
            Assinatura do evento acionado quando as consultas aninhadas forem processadas.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Query.NestedQueryProcessedHandler">
            <summary>
            Assinatura do evento acionado quando um consulta aninhada for processada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Query.NestedQueriesRecordProcessedHandler">
            <summary>
            Assinatura do evento acionado quando um registros das consultas aninhadas for processado.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Query.QueryInfo">
            <summary>
            Informa
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.CanExecute(Colosoft.Query.IRecord)">
            <summary>
            Verifica se pode executar a consulta com base no 
            registro da consulta pai.
            </summary>
            <param name="parentRecord">Reigstro com os dados do resultado da consulta pai.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.ToString2(System.Text.StringBuilder,System.Int32)">
            <summary>
            Recupera o texto que repreesnta a instancia.
            </summary>
            <param name="sb">StringBuilder para escrever o texto.</param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.FinishNestedQueriesProcess(System.Int32)">
            <summary>
            Finaliza o processo da consultas aninhadas.
            </summary>
            <param name="recordsCount">Quantidade de registros para processar as consulta aninhadas.</param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.FinishNestedQueriesRecordProcess(System.Int32)">
            <summary>
            Finaliza o processo do registro das consultas aninhadas.
            </summary>
            <param name="recordPosition"></param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.NotifyNestedQueryProcessed(Colosoft.Query.QueryInfo,System.Int32)">
            <summary>
            Notifica que uma consulta aninhada for processada.
            </summary>
            <param name="nestedQuery">Informações da consulta aninhada.</param>
            <param name="recordPosition">Posição do registro que está sendo processado.</param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.ReadItem``1(System.Xml.XmlReader,System.String)">
            <summary>
            Recupera o item do Reader.
            </summary>
            <typeparam name="T">Tipo da instancia que será preechida.</typeparam>
            <param name="reader"></param>
            <param name="itemName">Nome do item.</param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.WriteItem``1(System.Xml.XmlWriter,System.String,``0)">
            <summary>
            Escreve os dados do item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="writer"></param>
            <param name="itemName">Nome do item.</param>
            <param name="item">Instancia do item.</param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.QueryInfo.Clone">
            <summary>
            Clona a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Colosoft.Query.QueryInfo.NestedQueriesProcessed">
            <summary>
            Evento acioando quando as consultas aninhadas forem processadas.
            </summary>
        </member>
        <member name="E:Colosoft.Query.QueryInfo.NestedQueryProcessed">
            <summary>
            Evento acioando quando uma consulta aninhada for processada.
            </summary>
        </member>
        <member name="E:Colosoft.Query.QueryInfo.NestedQueriesRecordProcessed">
            <summary>
            Evento acionado quando um registro das consultas aninhadas for processado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.IgnoreTypeSchema">
            <summary>
            Identifica se é para ignorar o esquema de tipo na consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.IsolationLevel">
            <summary>
            Nível de isolamento da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.DefaultCommandTimeout">
            <summary>
            Tempo de espera padrão para a execução de um comando.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.CommandTimeout">
            <summary>
            Tempo de espera antes de terminar a tentativa de executar um comando e de gerar um erro. (em segundos)
            </summary>
            <value>O tempo em segundos de esperar o comando executar. O padrão é 30 segundos.</value>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.CanUseCache">
            <summary>
            Identifica se pode usar o cache para obter o resultado da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.ExecutePredicate">
            <summary>
            Predicado usado na validação da execução da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Id">
            <summary>
            Identificador unico das informações da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.ExecuteObserver">
            <summary>
            Instancia usada para observar a execução da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.ResultObserver">
            <summary>
            Instancia usada para observar o resultado da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.StoredProcedureName">
            <summary>
            Nome da StoredProcedure a ser executada ou nulo.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.StoredProcedureProvider">
            <summary>
            Nome do provedor de configurações da StoredProcedure.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.IsSelectDistinct">
            <summary>
            Define se consulta é com Select Distinct.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.IgnoreRegisterUserInfo">
            <summary>
            Identifica se é para ignorar o registro das informações do usuário
            na execução da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Method">
            <summary>
            Método que será usado na consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Projection">
            <summary>
            Projeção da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Entities">
            <summary>
            Relação das entidades envolvidas na consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Joins">
            <summary>
            Joins da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.GroupBy">
            <summary>
            GrouBys da consulta
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Having">
            <summary>
            Having da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Sort">
            <summary>
            Ordenação da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.WhereClause">
            <summary>
            Clausula condicional da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.TakeParameters">
            <summary>
            Parametros usados na recuperação do resultado da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Parameters">
            <summary>
            Parametros da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.NestedQueries">
            <summary>
            Consultas aninhadas.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.HasRowVersion">
            <summary>
            Define se a consulta retorna ou não o campo RowVersion.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.Unions">
            <summary>
            Uniões da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryInfo.ProviderName">
            <summary>
            Nome do provedor que será usado pela consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ParameterDirection">
            <summary>
            Enumerador da direção do parâmetro.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ParameterDirection.Input">
            <summary>
            Representa um parâmetro de input.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ParameterDirection.Output">
            <summary>
            Representa um parâmetro de output.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ParameterDirection.InputOutput">
            <summary>
            Representa um parâmetro de output e de input.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ParameterDirection.ReturnValue">
            <summary>
            Representa o retorno da Stored Procedure.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryParameter">
            <summary>
            Representa o parametro que será usado em uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.#ctor(Colosoft.Query.ParameterDirection)">
            <summary>
            Construtor vazio passando a direção do parâmetro como padrão Input.
            </summary>
            <param name="direction">Direção do parâmetro.</param>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.#ctor(System.String,System.Object,Colosoft.Query.ParameterDirection)">
            <summary>
            Cria uma instância do parâmetro informando seus dados.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="value">Valor do parametro.</param>
            <param name="direction">Direção do parâmetro.</param>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.GetConditionalTermSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema Xml da classe.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa usando o CompactSerializer.
            </summary>
            <param name="reader">Representa o compact reader.</param>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa usando o CompactSerializer.
            </summary>
            <param name="writer">Representa o compact writer.</param>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.Clone">
            <summary>
            Clona um parâmetro.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.GetParameters(Colosoft.Query.QueryInfo,System.Boolean)">
            <summary>
            Recupera os parametros das informações da consulta.
            </summary>
            <param name="queryInfo"></param>
            <param name="findParametersOfQuery">Identifica se é para pesquisar os parametro de consultas contidas nos parametros.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.GetParameters(Colosoft.Query.QueryParameter,System.Boolean)">
            <summary>
            Recupera os parametros contidos no parametro
            </summary>
            <param name="parameter"></param>
            <param name="findParametersOfQuery">Identifica se é para pesquisar os parametro de consultas contidas nos parametros.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.GetParameters(Colosoft.Query.ConditionalContainer)">
            <summary>
            Recupera os parametros do container.
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.GetParameters(Colosoft.Query.ConditionalTerm)">
            <summary>
            Recupera os parametros.
            </summary>
            <param name="term"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryParameter.GetParameters(Colosoft.Query.Queryable,System.Boolean)">
            <summary>
            Recupera os parametros das informações da consulta.
            </summary>
            <param name="queryable"></param>
            <param name="findParametersOfQuery">Identifica se é para pesquisar os parametro de consultas contidas nos parametros.</param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.QueryParameter.Name">
            <summary>
            Nome do parametro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryParameter.Value">
            <summary>
            Valor do parametro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryParameter.Direction">
            <summary>
            Direção do parâmetro.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryTerm">
            <summary>
            Termo de uma query.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.#ctor(Colosoft.Query.QueryInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryInfo"></param>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado para serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.ReadXml(System.Xml.XmlReader)">
            <summary>
            Serializa em xml.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Deserializa em xml.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa com o compact serializer.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa com o compact serializer.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados serializados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryTerm.Clone">
            <summary>
            Clona o termo condicional.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.QueryTerm.QueryInfo">
            <summary>
            Informações da query.
            </summary>
        </member>
        <member name="T:Colosoft.Query.BindableQueryResult">
            <summary>
            Implementação do do resultado de uma consulta que possui a
            estratégia de vinculação associada.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryResultContainer">
            <summary>
            Assinatura de um container de resultados de consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryResultContainer.GetResult">
            <summary>
            Recupera o resultado encapsulado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.BindableQueryResult.#ctor(Colosoft.Query.IQueryResult,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="result">Instancia do resultado da consulta.</param>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator">Instancia do criador dos objetos.</param>
        </member>
        <member name="M:Colosoft.Query.BindableQueryResult.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.BindableQueryResult.Get(Colosoft.Query.Record)">
            <summary>
            Recupera uma instancia de TModel pelo registro informado.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.BindableQueryResult.GetResult">
            <summary>
            Recupera o resulta simples.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.BindableQueryResult.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador dos objetos do resultado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.BindableQueryResult.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Query.BindableQueryResult.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.BindableQueryResult.Id">
            <summary>
            Identificador do resultado da consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Record">
            <summary>
            Representa um registro remoto.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IRecord">
            <summary>
            Assinatura de um registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IRecord.SetValues(System.Object[])">
            <summary>
            Define os valores do registro.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetValues(System.Object[])">
            <summary>
            Recupera os valores da registro para o vetor informado.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetBoolean(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Boolean"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetBoolean(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Boolean"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetByte(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Byte"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetByte(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Byte"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Recupera os bytes do campo na posição informada.
            </summary>
            <param name="i"></param>
            <param name="fieldOffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetBytes(System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Recupera os bytes do campo com o nome informado.
            </summary>
            <param name="name"></param>
            <param name="fieldOffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetChar(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Char"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetChar(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Char"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="fieldoffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetChars(System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="fieldoffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDataTypeName(System.Int32)">
            <summary>
            Recupera o nome do tipo de dados do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDataTypeName(System.String)">
            <summary>
            Recupera o nome do tipo de dados do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDateTime(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.DateTime"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDateTime(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.DateTime"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDecimal(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Decimal"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDecimal(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Decimal"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDouble(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Double"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDouble(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Double"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetFieldType(System.Int32)">
            <summary>
            Recupera o tipo do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetFieldType(System.String)">
            <summary>
            Recupera o tipo do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetFloat(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Single"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetFloat(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Single"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetGuid(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Guid"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetGuid(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Guid"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetInt16(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Int16"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetInt16(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Int16"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetInt32(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Int32"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetInt32(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Int32"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetInt64(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Int64"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetInt64(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Int64"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetName(System.Int32)">
            <summary>
            Recupera o nome do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetOrdinal(System.String)">
            <summary>
            Recupera a posição ordinal do campos com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetString(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.String"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetString(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.String"/> do campo com o nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDateTimeOffset(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.DateTimeOffset"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetDateTimeOffset(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.DateTimeOffset"/> do campo com o nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetValue(System.Int32)">
            <summary>
            Recupera o valor do campo na posição informada.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.GetValue(System.String)">
            <summary>
            Recupera o valor da campo com o nome innformado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.IsDBNull(System.Int32)">
            <summary>
            Verifica se o campo na posição informada possui um valor nulo.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecord.IsDBNull(System.String)">
            <summary>
            Verifica se o campo com o onme informado possui um valor nulo.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.IRecord.QueryResult">
            <summary>
            Instancia do resultado onde o registro está sendo recuperado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IRecord.Descriptor">
            <summary>
            Descritor do registro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IRecord.FieldCount">
            <summary>
            Quantidade de campos no resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IRecord.Item(System.Int32)">
            <summary>
            Recupera o valor da coluna na posição informada.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.IRecord.Item(System.String)">
            <summary>
            Recupera um valor pelo nome da coluna.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IDataRecord">
            <summary>
            Assinatura de um registro de dados.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IDataRecord.GetValues(System.Object[])">
            <summary>
            Recupera os valores da registro para o vetor informado.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.IDataRecord.Descriptor">
            <summary>
            Descritor do registro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IDataRecord.FieldCount">
            <summary>
            Quantidade de campos no resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IDataRecord.Item(System.Int32)">
            <summary>
            Recupera o valor da coluna na posição informada.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.IDataRecord.Item(System.String)">
            <summary>
            Recupera um valor pelo nome da coluna.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IEditableRecord">
            <summary>
            Assinatura de um registro editável.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IEditableRecord.SetValue(System.String,System.Object)">
            <summary>
            Define o valor para o campo.
            </summary>
            <param name="name">Nome do campo.</param>
            <param name="value">Valor que será definido.</param>
        </member>
        <member name="M:Colosoft.Query.IEditableRecord.SetValue(System.Int32,System.Object)">
            <summary>
            Define o valor para o campo.
            </summary>
            <param name="i">Posição do campo.</param>
            <param name="value">Valor que será atribuído.</param>
        </member>
        <member name="F:Colosoft.Query.Record.FieldNameComparer">
            <summary>
            Comparador do nome dos campos.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Record._descriptor">
            <summary>
            Descritor do registro.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Record._values">
            <summary>
            Valores dos itens do registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Record.#ctor(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="descriptor">Descritor do record.</param>
        </member>
        <member name="M:Colosoft.Query.Record.#ctor(Colosoft.Query.Record.RecordDescriptor,System.Object[])">
            <summary>
            Cria a instancia com o descritor e seus valores associados.
            </summary>
            <param name="descriptor"></param>
            <param name="values"></param>
        </member>
        <member name="M:Colosoft.Query.Record.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Record.SetValues(System.Object[])">
            <summary>
            Define os valores do registro.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Colosoft.Query.Record.GetValues">
            <summary>
            Recupera os valores diretos do registor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetFieldPosition(System.String)">
            <summary>
            Recupera a posição do campo com base no nome.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetBoolean(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Boolean"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetBoolean(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Boolean"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetByte(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Byte"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetByte(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Byte"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Recupera os bytes do campo na posição informada.
            </summary>
            <param name="i"></param>
            <param name="fieldOffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetBytes(System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Recupera os bytes do campo com o nome informado.
            </summary>
            <param name="name"></param>
            <param name="fieldOffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetChar(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Char"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetChar(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Char"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="fieldoffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetChars(System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="fieldoffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDataTypeName(System.Int32)">
            <summary>
            Recupera o nome do tipo de dados do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDataTypeName(System.String)">
            <summary>
            Recupera o nome do tipo de dados do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDateTime(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.DateTime"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDateTime(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.DateTime"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDecimal(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Decimal"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDecimal(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Decimal"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDouble(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Double"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDouble(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Double"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetFieldType(System.Int32)">
            <summary>
            Recupera o tipo do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetFieldType(System.String)">
            <summary>
            Recupera o tipo do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetFloat(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Single"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetFloat(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Single"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetGuid(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Guid"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetGuid(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Guid"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetInt16(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Int16"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetInt16(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Int16"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetInt32(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Int32"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetInt32(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Int32"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetInt64(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.Int64"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetInt64(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.Int64"/> do campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetName(System.Int32)">
            <summary>
            Recupera o nome do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetOrdinal(System.String)">
            <summary>
            Recupera a posição ordinal do campos com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetString(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.String"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetString(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.String"/> do campo com o nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDateTimeOffset(System.Int32)">
            <summary>
            Recupera o valor <see cref="T:System.DateTimeOffset"/> do campo na posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetDateTimeOffset(System.String)">
            <summary>
            Recupera o valor <see cref="T:System.DateTimeOffset"/> do campo com o nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetValue(System.Int32)">
            <summary>
            Recupera o valor do campo na posição informada.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetValue(System.String)">
            <summary>
            Recupera o valor da campo com o nome innformado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetValues(System.Object[])">
            <summary>
            Recupera os valores da registro para o vetor informado.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.IsDBNull(System.Int32)">
            <summary>
            Verifica se o campo na posição informada possui um valor nulo.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.IsDBNull(System.String)">
            <summary>
            Verifica se o campo com o onme informado possui um valor nulo.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.GetRecordSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do registro.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados do XML.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Record.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados em XML.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Record.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa os dados na instancia.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Record.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa os dados da instancia.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Record.Colosoft#Query#IEditableRecord#SetValue(System.String,System.Object)">
            <summary>
            Atribui o valor para o campo com o nome informado.
            </summary>
            <param name="name">Nome do campo.</param>
            <param name="value">Valor que será atribuído.</param>
        </member>
        <member name="M:Colosoft.Query.Record.Colosoft#Query#IEditableRecord#SetValue(System.Int32,System.Object)">
            <summary>
            Atribui o valor para o campo com a posição informada.
            </summary>
            <param name="i">Posição do campo.</param>
            <param name="value">Valor que será atribuído.</param>
        </member>
        <member name="P:Colosoft.Query.Record.QueryResult">
            <summary>
            Instancia do resultado onde o registro está sendo recuperado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.Descriptor">
            <summary>
            Descritor do registro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.FieldCount">
            <summary>
            Quantidade de campos no resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.Item(System.String)">
            <summary>
            Recupera um valor pelo nome da coluna.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Record.Item(System.Int32)">
            <summary>
            Recupera o valor da coluna na posição informada.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Record.Colosoft#Query#IDataRecord#Item(System.Int32)">
            <summary>
            Recupera o valor da coluna na posição informada.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Record.Colosoft#Query#IDataRecord#Item(System.String)">
            <summary>
            Recupera um valor pelo nome da coluna.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Record.Field">
            <summary>
            Representa os dados do campo do registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Record.Field.#ctor">
            <summary>
            Construtor vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Record.Field.#ctor(System.String,System.Type)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
        </member>
        <member name="M:Colosoft.Query.Record.Field.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Record.Field.ChangeFieldType(System.Type)">
            <summary>
            Altera o tipo do campo.
            </summary>
            <param name="newType"></param>
        </member>
        <member name="M:Colosoft.Query.Record.Field.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.Field.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Record.Field.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema que representa o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Record.Field.Name">
            <summary>
            Nome do campo.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.Field.Type">
            <summary>
            Tipo do campo.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.Field.EncodedName">
            <summary>
            Nome codificado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.Field.ImplementsINullable">
            <summary>
            Identifica o tipo implementa um INullable.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.Field.NullableType">
            <summary>
            Tipo com suporte para nulo.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Record.RecordDescriptor">
            <summary>
            Descrição do registro.
            </summary>        
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.#ctor">
            <summary>
            Construtor vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.#ctor(System.String,System.Collections.Generic.IEnumerable{Colosoft.Query.Record.Field})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do descritor.</param>
            <param name="fields">Nome dos fields</param>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.Contains(System.String)">
            <summary>
            Verifica se existe o campo com o nome informado.
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.GetFieldPosition(System.String)">
            <summary>
            Recupera a posição do campo com o nome informado.
            </summary>
            <param name="name"></param>
            <returns>Posição do campo no descritor ou -1 caso não encontre.</returns>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.Add(Colosoft.Query.Record.Field)">
            <summary>
            Adiciona um campo para o descritor.
            </summary>
            <param name="field">Campo a ser adicionado</param>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.AddRange(System.Collections.Generic.IEnumerable{Colosoft.Query.Record.Field})">
            <summary>
            Adiciona vários campos ao descritor.
            </summary>
            <param name="fields">Campos a serem adicionados.</param>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.CreateRecord(System.Object[])">
            <summary>
            Cria um registro apartir do descritor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados do objeto.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.GetEnumerator">
            <summary>
            Recupera o enumerador dos campos da descritor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Recupera os dados serializados no XML.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados em XML.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa os dados para a instancia.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Record.RecordDescriptor.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa os dados da isntancia.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.Record.RecordDescriptor.Name">
            <summary>
            Nome do descritor.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.RecordDescriptor.EncodedName">
            <summary>
            Nome codificado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.RecordDescriptor.Locale">
            <summary>
            Dados de localização do descritor.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.RecordDescriptor.Count">
            <summary>
            Quantidades de campos do descritor.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Record.RecordDescriptor.Item(System.Int32)">
            <summary>
            Recupera o define o campo no indice informado.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IExtensiveData">
            <summary>
            Representa classe de dados que possui suporta para a carga de dados extensivos.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IExtensiveData.Process(Colosoft.Query.IRecord)">
            <summary>
            Processa o registros com os dados adicionais.
            </summary>
            <param name="record"></param>
        </member>
        <member name="T:Colosoft.Query.InvalidQueryResultException">
            <summary>
            Representa o erro de um resultado de consulta inválido.
            </summary>
        </member>
        <member name="M:Colosoft.Query.InvalidQueryResultException.#ctor(Colosoft.Query.ValidationQueryResult)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Query.InvalidQueryResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.InvalidQueryResultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Método usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.InvalidQueryResultException.FormatMessage(Colosoft.Query.ValidationQueryResult)">
            <summary>
            Formata mensagem do erro.
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.InvalidQueryResultException.Error">
            <summary>
            Erro da validação.
            </summary>
        </member>
        <member name="T:Colosoft.Query.InvalidRecordChecksumException">
            <summary>
            Representa um erro de falha no dados do registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.InvalidRecordChecksumException.#ctor(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Cria a instancia com as informações do campo não encontrado.
            </summary>
            <param name="descriptor"></param>
        </member>
        <member name="M:Colosoft.Query.InvalidRecordChecksumException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.InvalidRecordChecksumException.FormatMessage(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Formata a mensagem do erro.
            </summary>
            <param name="descriptor"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IQueryResultExt">
            <summary>
            Assinatura das classe de extensão do resultado de uma consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IQueryResult">
            <summary>
            Assinatura do resultado de uma consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IQueryResult.Id">
            <summary>
            Identificador do resultado da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IQueryResult.Descriptor">
            <summary>
            Descritpr do resultado da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IQueryResultExt.QueryInfo">
            <summary>
            Informações da consulta associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IQueryResultExt.ReferenceValues">
            <summary>
            Valores de referencia da consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.INestedQueryContainer">
            <summary>
            Assinatura de um container de subconsultas.
            </summary>
        </member>
        <member name="M:Colosoft.Query.INestedQueryContainer.GetReferenceParameters">
            <summary>
            Recupera a relação dos parametros de referencia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.INestedQueryContainer.GetQueryResults(System.Object[])">
            <summary>
            Recupera as subconsultas com base nos valores de referencia.
            </summary>
            <param name="referenceValues">Valores de referencia do registro.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IQueryResult`1">
            <summary>
            Assinatura do resultado da consulta para um determinado tipo.
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="T:Colosoft.Query.QueryResultChangedObserverUidGenerator">
            <summary>
            Classe responsável por gerar o identificador unico para os observers.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserverUidGenerator.CreateUid">
            <summary>
            Cria um novo identificador.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IQueryResultChangedObserver">
            <summary>
            Assinatura das classe que é um observer das modificações
            sobre o resultado de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IQueryResultChangedObserver.Evaluate(Colosoft.Query.IRecord)">
            <summary>
            Avalia se o registro possui vinculo
            com o resultado da consulta.
            </summary>
            <param name="record">Instancia do registro que será usado no calculo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IQueryResultChangedObserver.Evaluate(Colosoft.Query.RecordKey)">
            <summary>
            Avalia se a chave pertence a algum dos registros
            associados com o resultado da consulta.
            </summary>
            <param name="recordKey">Chave que será usada na avaliação.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IQueryResultChangedObserver.OnRecordInserted(Colosoft.Query.IRecord)">
            <summary>
            Método acionado quando o registro for inserido.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Colosoft.Query.IQueryResultChangedObserver.OnRecordDeleted(Colosoft.Query.RecordKey)">
            <summary>
            Método acionado quando registro for apagado.
            </summary>
            <param name="recordKey">Chave do registro apagado.</param>
        </member>
        <member name="P:Colosoft.Query.IQueryResultChangedObserver.Uid">
            <summary>
            Identificador único associado com o observer.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IQueryResultChangedObserver.IsAlive">
            <summary>
            Identifica se o observer está vivo.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IRecordKeyEquatable">
            <summary>
            Assinatura das classe usada para compara chave de registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IRecordKeyEquatable.Equals(Colosoft.Query.RecordKey,Colosoft.Query.RecordKeyComparisonType)">
            <summary>
            Compara com a chave do registro informada.
            </summary>
            <param name="recordKey">Chave do registro.</param>
            <param name="comparisonType">Tipo de comparação.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IRecordKeyGenerator">
            <summary>
            Assinatura do gerador de chave de registor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IRecordKeyGenerator.GetSimpleKey(Colosoft.Query.IRecord)">
            <summary>
            Recupera a chave simples que representa o registro.
            </summary>
            <param name="record">Instancia do registro.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecordKeyGenerator.GetKey(Colosoft.Query.IRecord)">
            <summary>
            Recupera a chave com base nos dados do registro informado.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecordKeyGenerator.GetSimpleKeyFromFullKey(System.String)">
            <summary>
            Recupera uma chave simples a partir de uma chave completa.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IRecordKeyFactory">
            <summary>
            Assinatura das classe responsável por criar
            a chave para um registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IRecordKeyFactory.CreateGenerator(Colosoft.Reflection.TypeName)">
            <summary>
            Cria o gerador associado com o tipo informado.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecordKeyFactory.GetKeyFields(Colosoft.Reflection.TypeName)">
            <summary>
            Recupera os nomes dos campos que fazem parte da chave do registro.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecordKeyFactory.Create(Colosoft.Reflection.TypeName,Colosoft.Query.IRecord)">
            <summary>
            Cria uma chave para o registro.
            </summary>
            <param name="typeName">Nome do tipo que representa os dados contidos no registro.</param>
            <param name="record">Instancia do registro com os dados.</param>
            <returns>Chave que representa o registro.</returns>
        </member>
        <member name="T:Colosoft.Query.RecordObserverUidGenerator">
            <summary>
            Classe responsável por gerar o identificador unico para os observers.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverUidGenerator.CreateUid">
            <summary>
            Cria um novo identificador.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.IRecordObserver">
            <summary>
            Assinatura das classes que trabalham para
            observer as alterações realizadas nos dados
            do modelo carregado no sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IRecordObserver.OnChanged(Colosoft.Query.IRecord)">
            <summary>
            Método acionado quando os dados forem alterados.
            </summary>
            <param name="record"></param>
        </member>
        <member name="P:Colosoft.Query.IRecordObserver.Uid">
            <summary>
            Identificador unico do observer.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IRecordObserverNotifier">
            <summary>
            Assinatura da classe responsável por notificar 
            os observer de uma alteração no registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverNotifier.Notify(Colosoft.Query.IRecord)">
            <summary>
            Notifica a alteração que contém os dados no registro informado.
            </summary>
            <param name="record"></param>
        </member>
        <member name="P:Colosoft.Query.IRecordObserverNotifier.IsValid">
            <summary>
            Identifica se o notificador é valido.
            </summary>
        </member>
        <member name="T:Colosoft.Query.TypeRecordChangeType">
            <summary>
            Possíveis alterações para o registro de um tipo.
            </summary>
        </member>
        <member name="F:Colosoft.Query.TypeRecordChangeType.Insert">
            <summary>
            Identifica que um registro foi inserido.
            </summary>
        </member>
        <member name="F:Colosoft.Query.TypeRecordChangeType.Delete">
            <summary>
            Identifica que um registro foi apagado.
            </summary>
        </member>
        <member name="F:Colosoft.Query.TypeRecordChangeType.Update">
            <summary>
            Identifica que um registro foi atualizado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.TypeRecordChangedEventArgs">
            <summary>
            Armazena os argumentos do evento acionado quando o registro 
            de um determinado tipo for alterado.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeRecordChangedEventArgs.#ctor(Colosoft.Reflection.TypeName,Colosoft.Query.TypeRecordChangeType,Colosoft.Query.IRecord,Colosoft.Query.RecordKey)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeName"></param>
            <param name="changeType"></param>
            <param name="record"></param>
            <param name="recordKey"></param>
        </member>
        <member name="P:Colosoft.Query.TypeRecordChangedEventArgs.TypeName">
            <summary>
            Nome do tipo no qual os dados sofreram alteração.
            </summary>
        </member>
        <member name="P:Colosoft.Query.TypeRecordChangedEventArgs.ChangeType">
            <summary>
            Tipo de alteração.
            </summary>
        </member>
        <member name="P:Colosoft.Query.TypeRecordChangedEventArgs.Record">
            <summary>
            Instancia do registro que está sofrendo a alteração.
            </summary>
        </member>
        <member name="P:Colosoft.Query.TypeRecordChangedEventArgs.RecordKey">
            <summary>
            Chave do registro que está sofrendo alteração.
            </summary>
        </member>
        <member name="T:Colosoft.Query.IRecordObserverManager">
            <summary>
            Assinatura do gerenciador dos observers dos registros de dados.
            </summary>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.IgnoreTypes(Colosoft.Reflection.TypeName[])">
            <summary>
            Adicionar o tipo que deve ser ignorado pelo gerenciador.
            </summary>
            <param name="typeNames"></param>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.GetTypeEntryDescriptions">
            <summary>
            Recupera as descrição das entradas dos tipos registrados.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.Register(Colosoft.Reflection.TypeName,Colosoft.Query.RecordKey,Colosoft.Query.IRecordObserver)">
            <summary>
            Registra o observer para o registro informado. Toda
            vez que ocorrer alguma alteração que implique sobre os
            dados do registro o observer será notificado.
            </summary>
            <param name="typeName">Nome do tipo no qual o registro representa.</param>
            <param name="recordKey">Chave que representa o registro.</param>
            <param name="observer">Instancia do observer que reberá as notificações.</param>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.Register(Colosoft.Reflection.TypeName,Colosoft.Query.IQueryResultChangedObserver)">
            <summary>
            Registra o observer para o resultado da consulta. Toda vez 
            que ocorrer alguma alteração que implique sobre os dados
            do resultado o observer será notificado.
            </summary>
            <param name="typeName">Nome do tipo no qual o resultado se basea.</param>
            <param name="observer">Instancia do observer.</param>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.Unregister(Colosoft.Reflection.TypeName,Colosoft.Query.IRecordObserver)">
            <summary>
            Remove o registro do observer.
            </summary>
            <param name="typeName">Nome do tipo no qual o observer está associado.</param>
            <param name="observer"></param>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.Unregister(Colosoft.Reflection.TypeName,Colosoft.Query.IQueryResultChangedObserver)">
            <summary>
            Remove o registro do observer.
            </summary>
            <param name="typeName"></param>
            <param name="observer"></param>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.NotifyRecordDeleted(Colosoft.Reflection.TypeName,System.Collections.Generic.IEnumerable{Colosoft.Query.RecordKey})">
            <summary>
            Notifica que os registros foram apagados.
            </summary>
            <param name="typeName"></param>
            <param name="recordKeys"></param>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.NotifyRecordsInserted(Colosoft.Reflection.TypeName,System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord})">
            <summary>
            Notific que o registro foram inseridos.
            </summary>
            <param name="typeName"></param>
            <param name="records"></param>
        </member>
        <member name="M:Colosoft.Query.IRecordObserverManager.GetRecordChangedNotifier(Colosoft.Reflection.TypeName,Colosoft.Query.RecordKey)">
            <summary>
            Recupera o notificador de alterações no registro.
            </summary>
            <param name="typeName"></param>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="E:Colosoft.Query.IRecordObserverManager.TypeRecordChanged">
            <summary>
            Evento acionado quando o registro de um terminado tipo sofrer alguma alteração.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IRecordObserverManager.RecordObserversCount">
            <summary>
            Quantidade de observers de registros registrados.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IRecordObserverManager.QueryResultObserverCount">
            <summary>
            Quantidade de observers de resultado de consultas registradas.
            </summary>
        </member>
        <member name="P:Colosoft.Query.IRecordObserverManager.IsEnabled">
            <summary>
            Identifica que o gerenciador de observers de registros está habilitado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryResult">
            <summary>
            Representa o resultado de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.#ctor">
            <summary>
            Construtor vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.#ctor(Colosoft.Query.Record.RecordDescriptor,System.Collections.Generic.IEnumerable{Colosoft.Query.Record})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="descriptor">Instancia do descritor do resultado.</param>
            <param name="records"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.#ctor(Colosoft.Query.Record.RecordDescriptor,System.Collections.Generic.IEnumerable{Colosoft.Query.Record},Colosoft.Query.QueryInfo,System.Func{Colosoft.Query.QueryInfo,Colosoft.Query.IQueryResult})">
            <summary>
            Cria uma instancia com o registros encontrados e as subconsultas.
            </summary>
            <param name="descriptor"></param>
            <param name="records"></param>
            <param name="info">Informações da consulta.</param>
            <param name="executer">Ponteiro para o método responsável por executar um consulta com base no QueryInfo</param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.#ctor(Colosoft.Query.Record.RecordDescriptor,System.Collections.Generic.IEnumerable{Colosoft.Query.Record},Colosoft.Query.Queryable)">
            <summary>
            Cria a instancia com base em um queryable.
            </summary>
            <param name="descriptor"></param>
            <param name="records"></param>
            <param name="queryable"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.Finalize">
            <summary>
            Destrutor;
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do registro.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetEnumerator">
            <summary>
            Recupera o enumerador dos itens do resultado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.To``1">
            <summary>
            Converte para o resulta do tipo informado.
            </summary>
            <typeparam name="Model">Tipo deo modelo que será recuperado.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.To``1(Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Converte para o resulta do tipo informado.
            </summary>
            <typeparam name="Model">Tipo deo modelo que será recuperado.</typeparam>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.ProcessNestedQueries(System.Collections.Generic.IEnumerable{System.Object[]})">
            <summary>
            Processa as subconsultas do resultado.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.CreateRecordFromReferenceParameterValues(System.Int32[],System.Object[])">
            <summary>
            Cria o registro de dados apartir dos valores dos parametros de ferencia.
            </summary>
            <param name="recordValuesPositions">
            Vetor com as posições dos valores dos parametros de referencias
            que serão vinculados com o registro
            </param>
            <param name="refValues"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetRecordPositionsFromReferenceParameters">
            <summary>
            Método usado para recuperar as posição do registro equivalente do 
            descriptor com base nos parametros de referencia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetRecords(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Recupera os registros serializados no leitor informado.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa os dados na instancia.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa os dados da instancia.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetReferenceParameters">
            <summary>
            Recupera os parametros de references que devem ser usados pelo resultado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryInfos(System.Object[])">
            <summary>
            Recupera o resultado da consulta com base no valores da referencia.
            </summary>
            <param name="referenceValues"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResults(System.Object[])">
            <summary>
            Recupera o resultado da consulta com base no valores da referencia.
            </summary>
            <param name="referenceValues"></param>
            <returns></returns>
        </member>
        <member name="E:Colosoft.Query.QueryResult.Disposed">
            <summary>
            Evento acionado quando o resultado for liberado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResult.Command">
            <summary>
            Instancia do comando associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResult.Id">
            <summary>
            Identificador do resultado da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResult.Descriptor">
            <summary>
            Descritor dos registros do resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryResult.RecordEnumerator">
            <summary>
            Enumerador do resultado da ume consulta.
            </summary>
        </member>
        <member name="F:Colosoft.Query.QueryResult.RecordEnumerator._recordsReferenceValues">
            <summary>
            Coleção que armazena os valores de referencia dos registros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.RecordEnumerator.#ctor(Colosoft.Query.QueryResult,System.Collections.Generic.IEnumerator{Colosoft.Query.Record})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryResult"></param>
            <param name="recordEnumerator"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.RecordEnumerator.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.RecordEnumerator.Dispose(System.Boolean)">
            <summary>
            Libera a instancia
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.RecordEnumerator.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.RecordEnumerator.MoveNext">
            <summary>
            Move para o próximo registro.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.RecordEnumerator.Reset">
            <summary>
            Reseta o enumerador.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResult.RecordEnumerator.DisposeQueryResult">
            <summary>
            Identifica se é para libera a instancia do QueryResult no final da iteração.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResult.RecordEnumerator.Current">
            <summary>
            Instancia do atual registro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResult.RecordEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Instancia do atual registro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResult.RecordEnumerator.IgnoreProcessNestedQueries">
            <summary>
            Identifica se é para ignorar a execução de subqueries.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResult.RecordEnumerator.RecordsReferenceValues">
            <summary>
            Relação dos valores de referencia dos registros.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryResult.GetQueryResultEnumerable">
            <summary>
            Implementação do Enumberable para percorrer os resultados das consultas.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultEnumerable.#ctor(Colosoft.Query.QueryResult,System.Collections.Generic.IEnumerable{Colosoft.Query.QueryInfo},System.Object[],System.Int32[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryResult"></param>
            <param name="infos"></param>
            <param name="referenceValues"></param>
            <param name="recordValuesPositions"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultEnumerable.GetEnumerator">
            <summary>
            Recupera o enumerador associado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador associado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultEnumerable.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryResult.GetQueryResultEnumerable.GetQueryResultEnumerator">
            <summary>
            Implementação do Enumerator
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultEnumerable.GetQueryResultEnumerator.#ctor(Colosoft.Query.QueryResult.GetQueryResultEnumerable,System.Collections.Generic.IEnumerator{Colosoft.Query.QueryInfo})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="owner"></param>
            <param name="infoEnumerator"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultEnumerable.GetQueryResultEnumerator.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultEnumerable.GetQueryResultEnumerator.MoveNext">
            <summary>
            Move para o próximo item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult.GetQueryResultEnumerable.GetQueryResultEnumerator.Reset">
            <summary>
            Reseta o enumerador.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryResult`1">
            <summary>
            Resulta da consulta para um tipo especifico.
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Query.QueryResult`1.#ctor(Colosoft.Query.IQueryResult)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResult`1.#ctor(Colosoft.Query.IQueryResult,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Construtor completo.
            </summary>
            <param name="result">Resultado base da consulta.</param>
            <param name="bindStrategy">Estratégia de vinculação que será utilizada.</param>
            <param name="objectCreator">Instancia responsável pela criação do tipo do resultado.</param>
        </member>
        <member name="M:Colosoft.Query.QueryResult`1.GetResult">
            <summary>
            Recupera o resulta simples.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult`1.GetEnumerator">
            <summary>
            Recupera o enumerado da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResult`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerado da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.QueryResultChangedObserver`1">
            <summary>
            Implementação do observer de alteração do resultado 
            de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.#ctor(System.Collections.IList)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.CreateCollectionItem(Colosoft.Query.IRecord)">
            <summary>
            Cria um registro para a coleção com base no registro informado.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.Evaluate(Colosoft.Query.IRecord)">
            <summary>
            Avalia se o registro informado é compatível.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.Evaluate(Colosoft.Query.RecordKey)">
            <summary>
            Avalia se a chave do registro é compatível.
            </summary>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.OnRecordInserted(Colosoft.Query.IRecord)">
            <summary>
            Método acionado quando um registro é criado.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.OnRecordDeleted(Colosoft.Query.RecordKey)">
            <summary>
            Método acionado quando um registro for removido.
            </summary>
            <param name="recordKey"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acionado quando a coleção sore alguma alteração.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultChangedObserver`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResultChangedObserver`1.Collection">
            <summary>
            Instancia da coleção associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResultChangedObserver`1.Uid">
            <summary>
            Identificador unico do observer.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResultChangedObserver`1.IsAlive">
            <summary>
            Identifica se o observer está vivo.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResultChangedObserver`1.IsDisposed">
            <summary>
            Identifica se a instancia foi liberada.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryResultParameters">
            <summary>
            Classe que contém resultado da consulta mais seus parâmetros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.#ctor">
            <summary>
            Construtor Vazio.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.#ctor(Colosoft.Query.IQueryResult,Colosoft.Query.QueryParameterCollection)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="result">Resultado da consulta.</param>
            <param name="parameters">Parâmetros da consulta.</param>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.GetQueryResultParametersSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do registro.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa a instância.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa instância.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados do objeto.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.GetSchema">
            <summary>
            Recupera schema da instância.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.ReadXml(System.Xml.XmlReader)">
            <summary>
            Implementação da leitura de xml para a interface <see cref="T:System.Xml.Serialization.IXmlSerializable"/>
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultParameters.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Implementação da escrita de xml para a interface <see cref="T:System.Xml.Serialization.IXmlSerializable"/>
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.QueryResultParameters.Result">
            <summary>
            Resultado de consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryResultParameters.Parameters">
            <summary>
            Parâmetros da consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryResultProxy">
            <summary>
            Delegate que representa um proxy para o resultado de um consulta.
            </summary>
            <param name="result">Resultado da consulta.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.QueryResultValidator">
            <summary>
            Classe com método para validar o resultado da consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryResultValidator.Validate(Colosoft.Query.IQueryResult)">
            <summary>
            Valida o resultado da consulta.
            </summary>
            <param name="queryResult"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResultValidator.ThrowInvalid(Colosoft.Query.ValidationQueryResult)">
            <summary>
            Dispara uma exception caso o resultado informado seja inválido.
            </summary>
            <param name="validationResult"></param>
        </member>
        <member name="M:Colosoft.Query.QueryResultValidator.Validate(Colosoft.Query.Record,Colosoft.Query.QueryInfo)">
            <summary>
            Valida os dados do registro.
            </summary>
            <param name="record"></param>
            <param name="queryInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.QueryResultValidator.GetFieldName(Colosoft.Query.ProjectionEntry)">
            <summary>
            Recupera o nome do campo da projeção.
            </summary>
            <param name="projectionEntry"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.RecordFieldNotFoundException">
            <summary>
            Representa o erro acionado quando um campo
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordFieldNotFoundException.#ctor(System.String,Colosoft.Query.Record.RecordDescriptor,Colosoft.Query.IQueryResult)">
            <summary>
            Cria a instancia com as informações do campo não encontrado.
            </summary>
            <param name="fieldName"></param>
            <param name="descriptor"></param>
            <param name="queryResult">Resultado da consulta associada.</param>
        </member>
        <member name="M:Colosoft.Query.RecordFieldNotFoundException.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Colosoft.Query.RecordFieldNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Cria instancia com a mensagem e o erro interno.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Colosoft.Query.RecordFieldNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado pela serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.RecordFieldNotFoundException.FormatMessage(System.String,Colosoft.Query.Record.RecordDescriptor,Colosoft.Query.IQueryResult)">
            <summary>
            Formata a mensagem do erro.
            </summary>
            <param name="fieldName"></param>
            <param name="descriptor"></param>
            <param name="queryResult">Resulta da consulta associada.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.RecordKeyComparisonType">
            <summary>
            Possíveis tipos de comparação que se
            pode aplicar sobre um RecordKey
            </summary>
        </member>
        <member name="F:Colosoft.Query.RecordKeyComparisonType.Key">
            <summary>
            Identifica se é para comparar o chave.
            </summary>
        </member>
        <member name="F:Colosoft.Query.RecordKeyComparisonType.RowVersion">
            <summary>
            Identifica se é para comparar o RowVersion.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordKey">
            <summary>
            Classe que representa a chave de um registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordKey.#ctor(System.String,System.Int64)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="key">Chave do registro.</param>
            <param name="rowVersion">Versão do registro.</param>
        </member>
        <member name="M:Colosoft.Query.RecordKey.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordKey.CompareTo(System.Object)">
            <summary>
            Compara a instancia com objeto informado.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordKey.CompareTo(Colosoft.Query.RecordKey)">
            <summary>
            Compara a instancia informada.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.RecordKey.Key">
            <summary>
            Chave que identifica o registro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordKey.RowVersion">
            <summary>
            Versão da linha do registro.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordKeyFactory">
            <summary>
            Implementação padrão da factory das chave dos 
            registros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordKeyFactory.CreateGenerator(Colosoft.Reflection.TypeName)">
            <summary>
            Cria o gerador associado com o tipo informado.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordKeyFactory.GetKeyFields(Colosoft.Reflection.TypeName)">
            <summary>
            Recupera os nomes dos campos que fazem parte da chave do registro.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordKeyFactory.Create(Colosoft.Reflection.TypeName,Colosoft.Query.IRecord)">
            <summary>
            Cria a chave para o registro informado.
            </summary>
            <param name="typeName"></param>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.RecordKeyFactory.Instance">
            <summary>
            Instancia da factory padrão.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordObserverManager">
            <summary>
            Classe geral usada para armazena a instancia do observer
            utilizado pelo sistema.
            </summary>
        </member>
        <member name="F:Colosoft.Query.RecordObserverManager._ignoreTypes">
            <summary>
            Relação dos tipos que devem ser ignorados.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.DoValidateEntries(System.Object)">
            <summary>
            Método que processa a validação da entradas.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.ValidateEntries">
            <summary>
            Valida as entradas do gerenciador.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.GetTypeNameEntry(Colosoft.Reflection.TypeName)">
            <summary>
            Recupera uma entrada do nome do tipo.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.OnTypeRecordChanged(Colosoft.Reflection.TypeName,Colosoft.Query.IRecord)">
            <summary>
            Método aciona quando o registro sofreu uma alteração.
            </summary>
            <param name="typeName"></param>
            <param name="record"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.OnTypeRecordInserted(Colosoft.Reflection.TypeName,Colosoft.Query.IRecord)">
            <summary>
            Método acionado quando um registro for inserido.
            </summary>
            <param name="typeName"></param>
            <param name="record"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.OnTypeRecordDeleted(Colosoft.Reflection.TypeName,Colosoft.Query.RecordKey)">
            <summary>
            Método acionado quando um registro for apagado.
            </summary>
            <param name="typeName"></param>
            <param name="recordKey"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.IsValidType(Colosoft.Reflection.TypeName)">
            <summary>
            Verifica se o tipo é valido para o gerenciado.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.IgnoreTypes(Colosoft.Reflection.TypeName[])">
            <summary>
            Adicionar o tipo que deve ser ignorado pelo gerenciador.
            </summary>
            <param name="typeNames"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.IgnoreType(Colosoft.Reflection.TypeName)">
            <summary>
            Adicionar o tipo que deve ser ignorado pelo gerenciador.
            </summary>
            <param name="typeName"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.GetTypeEntryDescriptions">
            <summary>
            Recupera as descrição das entradas dos tipos registrados.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.Register(Colosoft.Reflection.TypeName,Colosoft.Query.RecordKey,Colosoft.Query.IRecordObserver)">
            <summary>
            Registro o registro para ser observado.
            </summary>
            <param name="typeName"></param>
            <param name="recordKey"></param>
            <param name="observer"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.Register(Colosoft.Reflection.TypeName,Colosoft.Query.IQueryResultChangedObserver)">
            <summary>
            Registra o observer para o resultado da consulta. Toda vez 
            que ocorrer alguma alteração que implique sobre os dados
            do resultado o observer será notificado.
            </summary>
            <param name="typeName">Nome do tipo no qual o resultado se basea.</param>
            <param name="observer">Instancia do observer.</param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.Unregister(Colosoft.Reflection.TypeName,Colosoft.Query.IRecordObserver)">
            <summary>
            Remove o observador do sistema.
            </summary>
            <param name="typeName"></param>
            <param name="observer"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.Unregister(Colosoft.Reflection.TypeName,Colosoft.Query.IQueryResultChangedObserver)">
            <summary>
            Remove o registro do observer.
            </summary>
            <param name="typeName"></param>
            <param name="observer"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.NotifyRecordDeleted(Colosoft.Reflection.TypeName,System.Collections.Generic.IEnumerable{Colosoft.Query.RecordKey})">
            <summary>
            Notifica que um registro foi apagado.
            </summary>
            <param name="typeName"></param>
            <param name="recordKeys"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.NotifyRecordsInserted(Colosoft.Reflection.TypeName,System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord})">
            <summary>
            Notific que o registro foram inseridos.
            </summary>
            <param name="typeName"></param>
            <param name="records"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.GetRecordChangedNotifier(Colosoft.Reflection.TypeName,Colosoft.Query.RecordKey)">
            <summary>
            Recupera o notificador de alterações no registro.
            </summary>
            <param name="typeName"></param>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Colosoft.Query.RecordObserverManager.TypeRecordChanged">
            <summary>
            Evento acionado quando o registro de um terminado tipo sofrer alguma alteração.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.Instance">
            <summary>
            Instancia do manager utilizado pelo sistma.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.RecordObserversCount">
            <summary>
            Quantidade de observers de registros registrados.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.QueryResultObserverCount">
            <summary>
            Quantidade de observers de resultado de consultas registradas.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.IsEnabled">
            <summary>
            Identifica que o gerenciador de observers de registros está habilitado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordObserverManager.ChangeRecordObserverNotifier">
            <summary>
            Implementação do notificador para alterações no registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.ChangeRecordObserverNotifier.#ctor(Colosoft.Query.RecordObserverManager.RecordKeyEntry,Colosoft.Query.RecordObserverManager.TypeNameEntry)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="keyEntry"></param>
            <param name="typeNameEntry"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.ChangeRecordObserverNotifier.Notify(Colosoft.Query.IRecord)">
            <summary>
            Notifica a alteração que contém os dados no registro informado.
            </summary>
            <param name="record"></param>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.ChangeRecordObserverNotifier.IsValid">
            <summary>
            Identifica se o notificador é valido.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordObserverManager.QueryResultChangeObserverEntry">
            <summary>
            Implementação da entrada do observer de alterações do resultado de consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.QueryResultChangeObserverEntry.#ctor(Colosoft.Query.IQueryResultChangedObserver)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="observer">Instancia do observer a entrada.</param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.QueryResultChangeObserverEntry.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.QueryResultChangeObserverEntry.ReferenceUid">
            <summary>
            Hash code da referencia associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.QueryResultChangeObserverEntry.IsAlive">
            <summary>
            Identifica se a entrada está viva.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.QueryResultChangeObserverEntry.Observer">
            <summary>
            Instancia do observer associado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordObserverManager.RecordObserverEntry">
            <summary>
            Armazena a entrada do observer do registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.RecordObserverEntry.#ctor(Colosoft.Query.IRecordObserver)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="observer">Instancia do observer que a entra encapsula.</param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.RecordObserverEntry.Remove">
            <summary>
            Remove a entrada.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.RecordObserverEntry.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.RecordObserverEntry.IsAlive">
            <summary>
            Identifica se a entrada está viva.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.RecordObserverEntry.Observer">
            <summary>
            Instancia do observer associado.
            </summary>
        </member>
        <member name="E:Colosoft.Query.RecordObserverManager.RecordObserverEntry.Removed">
            <summary>
            Evento acionado quando a entrada for apagada.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordObserverManager.RecordKeyEntry">
            <summary>
            Armazena os dado da entrada de chave de um registro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.RecordKeyEntry.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="key">Chave que a instancia representa.</param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.RecordKeyEntry.AddObserver(Colosoft.Query.IRecordObserver)">
            <summary>
            Adiciona um observer para a entrada.
            </summary>
            <param name="observer"></param>
            <returns>Entrada gerada para o observer.</returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.RecordKeyEntry.GetObservers">
            <summary>
            Recupera a instancia dos observer para serem processados.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.RecordKeyEntry.ObserverEntryRemoved(System.Object,System.EventArgs)">
            <summary>
            Método acionado quando uma entrada do observer for removida.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.RecordKeyEntry.Key">
            <summary>
            Chave associada.
            </summary>
        </member>
        <member name="E:Colosoft.Query.RecordObserverManager.RecordKeyEntry.Removed">
            <summary>
            Evento acionado quando a entrada foi removida.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordObserverManager.TypeNameEntry">
            <summary>
            Armazena os dados da entrada do nome de um tipo.
            </summary>
        </member>
        <member name="F:Colosoft.Query.RecordObserverManager.TypeNameEntry._recordObserverEntries">
            <summary>
            Dicionário com a relação das entradas de observers registrados.
            </summary>
        </member>
        <member name="F:Colosoft.Query.RecordObserverManager.TypeNameEntry._queryResultObserverEntries">
            <summary>
            Dicionário com a relação das entradas de observers registrados.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.#ctor(Colosoft.Reflection.TypeName,Colosoft.Query.RecordObserverManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeName">Nome do tipo da entrada.</param>
            <param name="observerManager"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.Refresh">
            <summary>
            Valida os observers da instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.AddObserver(Colosoft.Query.IQueryResultChangedObserver)">
            <summary>
            Adiciona o observer para a entrada do tipo.
            </summary>
            <param name="observer"></param>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.AddRecordKey(Colosoft.Query.RecordKey,Colosoft.Query.IRecordObserver)">
            <summary>
            Adiciona a chave de um registro.
            </summary>
            <param name="recordKey"></param>
            <param name="recordObserver">Observer do registro.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.RemoveObserver(Colosoft.Query.IRecordObserver)">
            <summary>
            Remove o observer associado.
            </summary>
            <param name="recordObserver">Instancia do observer que será removido.</param>
            <returns>True se for removido com sucesso.</returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.RemoveObserver(Colosoft.Query.IQueryResultChangedObserver)">
            <summary>
            Remove o observer associado.
            </summary>
            <param name="queryResultObserver">Instancia do observer que será removido.</param>
            <returns>True se for removido com sucesso.</returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.RemoveObserver(Colosoft.Query.RecordObserverManager.QueryResultChangeObserverEntry)">
            <summary>
            Remove a entrada do observer.
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.GetNotifier(Colosoft.Query.RecordKey)">
            <summary>
            Recupera o notificador associado com a chave do registor.
            </summary>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.GetChangeObserverEntries">
            <summary>
            Recupera os observers de alteração.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordObserverManager.TypeNameEntry.RecordKeyEntryRemoved(System.Object,System.EventArgs)">
            <summary>
            Método acionado quando uma entrada da chave do registro for removida
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.TypeNameEntry.LastRefresh">
            <summary>
            Horário do ultimo refresh do tipo.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.TypeNameEntry.TypeName">
            <summary>
            Nome do tipo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.TypeNameEntry.ObserverManager">
            <summary>
            Instancia do gerenciador do observer.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.TypeNameEntry.RecordObserverEntriesCount">
            <summary>
            Quantidade de entradas de observers de registro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordObserverManager.TypeNameEntry.QueryResultObserverEntriesCount">
            <summary>
            Quantidade de entradas de observers de resultado de consultas.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordSortComparer">
            <summary>
            Implementação do comparador usado para a ordenação de registros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordSortComparer.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.RecordSortComparer.Field})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="fields">Relação dos campos que serão usados no comparador.</param>
        </member>
        <member name="M:Colosoft.Query.RecordSortComparer.Compare(Colosoft.Query.Record,Colosoft.Query.Record)">
            <summary>
            Compara dois <see cref="T:Colosoft.Query.Record"/> baseado nas propriedades passadas.
            </summary>
            <param name="x">Primeiro objeto.</param>
            <param name="y">Segundo objeto.</param>
            <returns>Retorna negativo se x é menor que y, zero se for igual ou positivo se x é maior que y.</returns>
        </member>
        <member name="T:Colosoft.Query.RecordSortComparer.Field">
            <summary>
            Armazena os dados do campo para a ordenação.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordSortComparer.Field.#ctor(System.Int32,System.Boolean)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="index"></param>
            <param name="reverse"></param>
        </member>
        <member name="P:Colosoft.Query.RecordSortComparer.Field.Index">
            <summary>
            Indice do campo do registro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.RecordSortComparer.Field.Reverse">
            <summary>
            Identifica se é para realizar uma ordenação reversa.
            </summary>
        </member>
        <member name="T:Colosoft.Query.RecordValue">
            <summary>
            Representa o valor de um campo do resultado.
            </summary>
        </member>
        <member name="F:Colosoft.Query.RecordValue._value">
            <summary>
            Valor do campo.
            </summary>
        </member>
        <member name="F:Colosoft.Query.RecordValue._valueExists">
            <summary>
            Identifica se o valor da propriedade existe no resultado.
            </summary>
        </member>
        <member name="M:Colosoft.Query.RecordValue.#ctor(System.Object,System.Boolean)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="value">Valor do campo.</param>
            <param name="valueExists"></param>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToInt32">
            <summary>
            Converte o valor para um Int32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToInt32Nullable">
            <summary>
            Converte o valor para um Int32Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToUInt32">
            <summary>
            Converte o valor para um Int32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToUInt32Nullable">
            <summary>
            Converte o valor para um UInt32Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToInt16">
            <summary>
            Converte o valor para um Int16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToInt16Nullable">
            <summary>
            Converte o valor para um Int16Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToUInt16">
            <summary>
            Converte o valor para um UInt16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToUInt16Nullable">
            <summary>
            Converte o valor para um UInt16Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToInt64">
            <summary>
            Converte o valor para um Int64.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToInt64Nullable">
            <summary>
            Converte o valor para um Int64Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToUInt64">
            <summary>
            Converte o valor para um UInt64.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToUInt64Nullable">
            <summary>
            Converte o valor para um UInt64Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToDouble">
            <summary>
            Converte o valor para um Double.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToDoubleNullable">
            <summary>
            Converte o valor para um DoubleNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToSingle">
            <summary>
            Converte o valor para um Single.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToSingleNullable">
            <summary>
            Converte o valor para um SingleNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToDecimal">
            <summary>
            Converte o valor para um Decimal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToDecimalNullable">
            <summary>
            Converte o valor para um DecimalNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToDateTime">
            <summary>
            Converte o valor para um DateTime.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToDateTimeNullable">
            <summary>
            Converte o valor para um DateTimeNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToDateTimeOffset">
            <summary>
            Converte o valor para um DateTimeOffset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToDateTimeOffsetNullable">
            <summary>
            Converte o valor para um DateTimeOffsetNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToBoolean">
            <summary>
            Converte o valor para um Boolean.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToBooleanNullable">
            <summary>
            Converte o valor para um BooleanNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToBytes">
            <summary>
            Converte o valor para um Boolean.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.GetValue">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.ToString">
            <summary>
            Converte o valor para uma string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Int32">
            <summary>
            Converte implicitamente para um Int32.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.Int32}">
            <summary>
            Converte implicitamente para um Int32Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.UInt32">
            <summary>
            Converte implicitamente para um UInt32.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.UInt32}">
            <summary>
            Converte implicitamente para um UInt32Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Int16">
            <summary>
            Converte implicitamente para um Int16.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.Int16}">
            <summary>
            Converte implicitamente para um Int16Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.UInt16">
            <summary>
            Converte implicitamente para um UInt16.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.UInt16}">
            <summary>
            Converte implicitamente para um UInt16Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Int64">
            <summary>
            Converte implicitamente para um Int64.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.Int64}">
            <summary>
            Converte implicitamente para um Int64Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.UInt64">
            <summary>
            Converte implicitamente para um UInt64.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.UInt64}">
            <summary>
            Converte implicitamente para um UInt64Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Single">
            <summary>
            Converte implicitamente para um Single.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.Single}">
            <summary>
            Converte implicitamente para um SingleNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Double">
            <summary>
            Converte implicitamente para um Double.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.Double}">
            <summary>
            Converte implicitamente para um DoubleNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Decimal">
            <summary>
            Converte implicitamente para um Decimal.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.Decimal}">
            <summary>
            Converte implicitamente para um DecimalNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.DateTime">
            <summary>
            Converte implicitamente para um DateTime.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.DateTime}">
            <summary>
            Converte implicitamente para um DateTimeNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Boolean">
            <summary>
            Converte implicitamente para um Boolean.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.Boolean}">
            <summary>
            Converte implicitamente para um BooleanNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Byte[]">
            <summary>
            Converte implicitamente para um byte[].
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.String">
            <summary>
            Converte implicitamente para uma string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.DateTimeOffset">
            <summary>
            Converte implicitamente para um DateTimeOffset.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.RecordValue.op_Implicit(Colosoft.Query.RecordValue)~System.Nullable{System.DateTimeOffset}">
            <summary>
            Converte implicitamente para um DateTimeOffsetNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.RecordValue.ValueExists">
            <summary>
            Identifica se o valor da propriedade existe no resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ValidationQueryResult">
            <summary>
            Armazena o resultado da validação do resultado de uma consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ValidationQueryResult.#ctor(Colosoft.Query.ValidationQueryResult.ValidationError,Colosoft.IMessageFormattable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="error">Informações do erro ocorrido.</param>
            <param name="message">Mensagem da validação.</param>
        </member>
        <member name="M:Colosoft.Query.ValidationQueryResult.op_Implicit(Colosoft.Query.ValidationQueryResult)~System.Boolean">
            <summary>
            Converte implicitamente para um Boolean.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Colosoft.Query.ValidationQueryResult.Message">
            <summary>
            Mensagem da validação.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ValidationQueryResult.Error">
            <summary>
            Erro associada com a validação.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ValidationQueryResult.ValidationError">
            <summary>
            Possíveis erros da validação.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ValidationQueryResult.ValidationError.None">
            <summary>
            Identifica que não existe nenhum erro.
            </summary>
        </member>
        <member name="F:Colosoft.Query.ValidationQueryResult.ValidationError.InvalidFields">
            <summary>
            Identifica que o campos do resultado são inválido.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ReferenceParameter">
            <summary>
            Armazena os dados de um parametro de referencia para 
            uma consulta pai.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameter.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameter.#ctor(System.String)">
            <summary>
            Cria a instancia com o nome da coluna na qual referencia.
            </summary>
            <param name="columnName"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameter.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameter.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa os dados.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameter.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa os dados.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameter.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.ReferenceParameter.ColumnName">
            <summary>
            Nome da coluna.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ReferenceParameterValue">
            <summary>
            Representa o valor do parametro de referencia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValue.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValue.#ctor(System.String,System.Object)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="columnName">Instancia do parametro de referencia.</param>
            <param name="value">Valor do parametro.</param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValue.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValue.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValue.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema Xml da classe.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValue.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa usando o CompactSerializer.
            </summary>
            <param name="reader">Representa o compact reader.</param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValue.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa usando o CompactSerializer.
            </summary>
            <param name="writer">Representa o compact writer.</param>
        </member>
        <member name="P:Colosoft.Query.ReferenceParameterValue.ColumnName">
            <summary>
            Nome da coluna de referencia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ReferenceParameterValue.Value">
            <summary>
            Valor do parametro.
            </summary>
        </member>
        <member name="T:Colosoft.Query.ReferenceParameterValueCollection">
            <summary>
            Coleção dos valores de referencia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValueCollection.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValueCollection.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.ReferenceParameterValue})">
            <summary>
            Cria uma nova instancia a partir de uma enumeração existente.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValueCollection.#ctor(System.Int32)">
            <summary>
            Cria uma nova instancia já definindo a sua capacidade inicial.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValueCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValueCollection.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Deserializa usando o CompactSerializer.
            </summary>
            <param name="reader">Representa o compact reader.</param>
        </member>
        <member name="M:Colosoft.Query.ReferenceParameterValueCollection.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa usando o CompactSerializer.
            </summary>
            <param name="writer">Representa o compact writer.</param>
        </member>
        <member name="M:Colosoft.Query.SchemasHelper.GetSchema(System.String)">
            <summary>
            Recupera o esquema da biblioteca.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.SchemasHelper.ReadString(System.Xml.XmlReader,System.String,System.String)">
            <summary>
            Recupera o valor string do elemento do reader.
            </summary>
            <param name="reader"></param>
            <param name="name"></param>
            <param name="ns"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Serialization.XmlHelper.XmlDataTypeName(System.Type)">
            <summary>
            Recupera o tipo XML.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Sort">
            <summary>
            Armazena os dados da ordenação.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Sort.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Sort.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.SortEntry})">
            <summary>
            Cria uma instancia de ordenação com os campos.
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:Colosoft.Query.Sort.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Sort.Add(Colosoft.Query.SortEntry)">
            <summary>
            Adiciona um campo de ordenação.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Colosoft.Query.Sort.Parse(System.String)">
            <summary>
            Transforma a expressão informação em uma instancia de ordenação.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Sort.Clone">
            <summary>
            Clona um Sort
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Sort.GetEnumerator">
            <summary>
            Recupera o enumerado da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Sort.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Sort.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema da classe.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Sort.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Sort.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.Sort.Count">
            <summary>
            Quantidade de campos de ordenação.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Sort.Item(System.Int32)">
            <summary>
            Recupera e definie o campo de ordenação na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.SortEntry">
            <summary>
            Armazena os dados do campo de ordenação.
            </summary>
        </member>
        <member name="M:Colosoft.Query.SortEntry.#ctor(System.Collections.Generic.List{Colosoft.Text.InterpreterExpression.Expression})">
            <summary>
            Recupera os dados da coluna de projeção com base nas expressões informadas
            </summary>
            <param name="expressions"></param>
        </member>
        <member name="M:Colosoft.Query.SortEntry.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.SortEntry.#ctor(Colosoft.Query.ConditionalTerm,System.Boolean)">
            <summary>
            Cria a instancia já definindo os parametros.
            </summary>
            <param name="term"></param>
            <param name="reverse"></param>
        </member>
        <member name="M:Colosoft.Query.SortEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.SortEntry.Fill(System.Collections.Generic.List{Colosoft.Text.InterpreterExpression.Expression})">
            <summary>
            Preenche os dados da instancia com a expressões informadas.
            </summary>
            <param name="expressions"></param>
        </member>
        <member name="M:Colosoft.Query.SortEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.SortEntry.Equals(Colosoft.Query.SortEntry)">
            <summary>
            Compara com outra coluna de ordenação.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.SortEntry.ToString">
            <summary>
            String que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.SortEntry.Clone">
            <summary>
            Clona coluna de Sort.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.SortEntry.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema da classe.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.SortEntry.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.SortEntry.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.SortEntry.Term">
            <summary>
            Termo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.SortEntry.Reverse">
            <summary>
            Identifica se é uma ordenação invertida.
            </summary>
        </member>
        <member name="P:Colosoft.Query.SortEntry.Name">
            <summary>
            Recupera o nome que representa a entrada de ordenação.
            </summary>
        </member>
        <member name="T:Colosoft.Query.SourceContext">
            <summary>
            Source context padrão
            </summary>
        </member>
        <member name="M:Colosoft.Query.SourceContext.#ctor">
            <summary>
            Construtor privado.
            </summary>
        </member>
        <member name="M:Colosoft.Query.SourceContext.CreateQuery">
            <summary>
            Cria um nova consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.SourceContext.CreateMultiQuery">
            <summary>
            Cria uma nova instância de um container de consultas
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.SourceContext.Dispose">
            <summary>
            Libera a memória dos componentes
            </summary>
        </member>
        <member name="M:Colosoft.Query.SourceContext.Dispose(System.Boolean)">
            <summary>
            Libera a memória dos componentes
            </summary>
            <param name="disposing">indica chamada fora do destrutor</param>
        </member>
        <member name="T:Colosoft.Query.StoredProcedureName">
            <summary>
            Representa o nome de uma store procedure.
            </summary>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.#ctor(System.String,System.String)">
            <summary>
            Cria a instancia com os valores iniciais.
            </summary>
            <param name="name"></param>
            <param name="schema"></param>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados para a serialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.Parse(System.String)">
            <summary>
            Executa um parse do texto informado para o nome da stored procedure.
            </summary>
            <param name="storedProcedureName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.GetStoredProcedureName(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquena para o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados do XML.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados no xml.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.StoredProcedureName.Clone">
            <summary>
            Clona a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.StoredProcedureName.Name">
            <summary>
            Nome da stored procedure.
            </summary>
        </member>
        <member name="P:Colosoft.Query.StoredProcedureName.Schema">
            <summary>
            Nome do esquema onde a stored procedure está inserida.
            </summary>
        </member>
        <member name="P:Colosoft.Query.StoredProcedureName.Empty">
            <summary>
            Representa uma storedprocedure vazia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.SubQueryCallBackArgs">
            <summary>
            Argumentos do callback da subquery.
            </summary>
        </member>
        <member name="M:Colosoft.Query.SubQueryCallBackArgs.#ctor(Colosoft.Query.QueryInfo,Colosoft.Query.ReferenceParameterValueCollection,Colosoft.Query.IQueryResult)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="info"></param>
            <param name="referenceValues"></param>
            <param name="result"></param>
        </member>
        <member name="P:Colosoft.Query.SubQueryCallBackArgs.Info">
            <summary>
            Informações da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.SubQueryCallBackArgs.ReferenceValues">
            <summary>
            Valores de referencia.
            </summary>
        </member>
        <member name="P:Colosoft.Query.SubQueryCallBackArgs.Result">
            <summary>
            Resultado do consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.SubQueryCallBackFailedArgs">
            <summary>
            Armazena os argumentos do callback de falha da execução da subquery.
            </summary>
        </member>
        <member name="M:Colosoft.Query.SubQueryCallBackFailedArgs.#ctor(Colosoft.Query.QueryInfo,Colosoft.Query.QueryFailedInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="info"></param>
            <param name="result"></param>
        </member>
        <member name="P:Colosoft.Query.SubQueryCallBackFailedArgs.Info">
            <summary>
            Informações da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.SubQueryCallBackFailedArgs.Result">
            <summary>
            Resultado da falha.
            </summary>
        </member>
        <member name="T:Colosoft.Query.SubQueryCallBack">
            <summary>
            Delegate do callback da execução das subqueries.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Query.SubQueryFailedCallBack">
            <summary>
            Callback acionado quando ocorre um falha a execução de uma consulta.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Query.TakeParameters">
            <summary>
            Armazena os paremetros do take.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.#ctor">
             <summary>
            Construtor padrão sem parâmetros 
             </summary>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            Construtor que preenche os dados.
            </summary>
            <param name="take"></param>
            <param name="skip"></param>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados do objeto.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.ToString">
            <summary>
            String que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.Clone">
            <summary>
            Clona TakeParameters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.TakeParameters.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.TakeParameters.Take">
            <summary>
            Quantidade de registros que devem ser recuperados.
            </summary>
        </member>
        <member name="P:Colosoft.Query.TakeParameters.Skip">
            <summary>
            Quantidade de registros que devem ser saltados.
            </summary>
        </member>
        <member name="T:Colosoft.Query.TypeBindRecordDescriptorSchema">
            <summary>
            Represenat o esquema de vinculação de um descritor de registros.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.#ctor(Colosoft.Query.TypeBindStrategy,Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeBindStrategy">Instancia da estratégia de vinculação associada.</param>
            <param name="descriptor"></param>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.GetEnumerator">
            <summary>
            Recupera o enumerador das propriedades.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador das propriedades.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Equals(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Compara a instancia com um descritor.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.TypeBindRecordDescriptorSchema.Property">
            <summary>
            Representa uma propriedade do esquema.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.#ctor(System.String,System.Reflection.PropertyInfo,System.ComponentModel.TypeConverter)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="fieldName">Nome do campo associado.</param>
            <param name="info"></param>
            <param name="converter"></param>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.ConvertValue(System.Object,System.Type)">
            <summary>
            Converte o valor para o tipo informado.
            </summary>
            <param name="value"></param>
            <param name="toType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.ConvertValue(System.Object)">
            <summary>
            Converte o valor da propriedade.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.GetRecordValue(Colosoft.Query.IRecord)">
            <summary>
            Recupera o valor do registro representado pela propriedade.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.SetValue(System.Object,System.Object)">
            <summary>
            Define o valor para a propriedade.
            </summary>
            <param name="instance">Instancia na qual a propriedade será defina.</param>
            <param name="value">Valor que será definido.</param>
        </member>
        <member name="M:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.GetValue(System.Object)">
            <summary>
            Recupera o valor da propriedade da instancia.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.FieldName">
            <summary>
            Nome do campo do registro associado com a propriedade.
            </summary>
        </member>
        <member name="P:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.Name">
            <summary>
            Nome da propriedade.
            </summary>
        </member>
        <member name="P:Colosoft.Query.TypeBindRecordDescriptorSchema.Property.PropertyType">
            <summary>
            Tipo da propriedade.
            </summary>
        </member>
        <member name="T:Colosoft.Query.TypeBindStrategy">
            <summary>
            Implementa da estratégia de vinculação usando as propriedade 
            do tipo da instancia onde a vinculação será feita.
            </summary>
        </member>
        <member name="F:Colosoft.Query.TypeBindStrategy._schemas">
            <summary>
            Armazena a relação dos esquemas já carregados.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.#ctor(System.Type,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="type">Tipo que será usado pela instancia.</param>
            <param name="creator">Instancia responsável por criar um instancia do tipo informado.</param>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.GetRecordSchema(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Recupera o esquema que será usado para converter os dados do registro.
            </summary>
            <param name="descriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,System.Object@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.Bind``1(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,``0@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <typeparam name="T">Tipo que será usado na operação.</typeparam>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.Bind(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Executa a vinculação dos dados contidos na enumeração de registro informados
            e retorna uma enumeração das instancias preechidas.
            </summary>
            <param name="records">Registros que serão processados.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="creator">Instancia responsável pela criação dos objetos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.Bind``1(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Executa a vinculação dos dados contidos na enumeração de registro informados
            e retorna uma enumeração das instancias preechidas.
            </summary>
            <param name="records">Registros que serão processados.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="creator">Instancia responsável pela criação dos objetos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.CreateSession(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Cria uma sessão de estratégia de vinculação para o descritor informado.
            </summary>
            <param name="recordDescriptor">Descritor dos registros para fazer a vinculação.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy.Create">
            <summary>
            Cria uma nova instancia do tipo do resultado da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.TypeBindStrategy.Type">
            <summary>
            Tipo usado pela estratégia.
            </summary>
        </member>
        <member name="T:Colosoft.Query.TypeBindStrategy`1">
            <summary>
            Implementa da estratégia de vinculação usando as propriedade 
            do tipo da instancia onde a vinculação será feita.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategy`1.#ctor(Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="creator">Instancia responsável por criar um instancia do tipo informado.</param>
        </member>
        <member name="T:Colosoft.Query.TypeBindStrategyCache">
            <summary>
            Classe responsável por gerenciar o cache das estratégias de vinculação de tipos.
            </summary>
        </member>
        <member name="F:Colosoft.Query.TypeBindStrategyCache._itemsAccessCount">
            <summary>
            Matriz que identifica a quantidade de acessos os itens do cache. 
            </summary>
        </member>
        <member name="F:Colosoft.Query.TypeBindStrategyCache._itemsTypeNames">
            <summary>
            Armazena os nomes do tipos das estratégias.
            </summary>
        </member>
        <member name="F:Colosoft.Query.TypeBindStrategyCache._items">
            <summary>
            Armazena os itens do cache.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategyCache.GetItem(System.Type,System.Func{System.Type,Colosoft.Query.IQueryResultObjectCreator})">
            <summary>
            Recupera o item do cache.
            </summary>
            <param name="type"></param>
            <param name="creatorLoader"></param>
            <returns>Posição do mapeamento no vetor</returns>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategyCache.GetItem``1(System.Func{Colosoft.Query.IQueryResultObjectCreator})">
            <summary>
            Recupera o item do cache.
            </summary>
            <typeparam name="T">Tipo para a vinculação.</typeparam>
            <param name="creatorLoader"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.TypeBindStrategyCache.Size">
            <summary>
            Quantidade de itens que o cache suporta.
            </summary>
        </member>
        <member name="T:Colosoft.Query.TypeBindStrategySession">
            <summary>
            Implementação da sessão da estratégia de vinculação do tipo.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategySession.#ctor(Colosoft.Query.TypeBindRecordDescriptorSchema)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="schema"></param>
        </member>
        <member name="M:Colosoft.Query.TypeBindStrategySession.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,System.Object@)">
            <summary>
            Preenche os dados do objeto com o conteudo do registro informado.
            </summary>
            <param name="record"></param>
            <param name="mode"></param>
            <param name="instance"></param>
            <returns>Nomes das propriedade alteradas.</returns>
        </member>
        <member name="T:Colosoft.Query.TypeHelper">
            <summary>
            Auxilia na manipulação dos tipos.
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeHelper.IsNullableType(System.Type)">
            <summary>
            Verifica se é um tipo Nullable;
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeHelper.GetElementType(System.Type)">
            <summary>
            Recupera o tipo do elemento da enumeração.
            </summary>
            <param name="seqType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeHelper.FindIEnumerable(System.Type)">
            <summary>
            Recupera o tipo do elemento da enumeração.
            </summary>
            <param name="seqType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.TypeHelper.GetMemberType(System.Reflection.MemberInfo)">
            <summary>
            What is the type of the current member?
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeHelper.SetMemberValue(System.Object,System.Reflection.MemberInfo,System.Object)">
            <summary>
            If mi is a Property, then its sets it value to value
            If mi is a Field, it assigns value to it
            </summary>
        </member>
        <member name="M:Colosoft.Query.TypeHelper.GetMemberValue(System.Object,System.Reflection.MemberInfo)">
            <summary>
            If mi is a Property, then it returns its value
            If mi is a Field, then it returns its value
            </summary>
        </member>
        <member name="T:Colosoft.Query.Union">
            <summary>
            Armazena as informações de uma união.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Union.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Union.#ctor(Colosoft.Query.Queryable,System.Boolean)">
            <summary>
            Cria a instancia informando os parametros iniciais.
            </summary>
            <param name="query"></param>
            <param name="all"></param>
        </member>
        <member name="M:Colosoft.Query.Union.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Union.CreateUnionInfo">
            <summary>
            Cria as informações do union.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Union.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Union.Clone">
            <summary>
            Clona uma projeção.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Union.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instância anteriormente serializada.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Union.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Union.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Recupera os dados serializados
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Union.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.Union.Query">
            <summary>
            Consulta da união.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Union.All">
            <summary>
            Identifica se é uma união ALL.
            </summary>
        </member>
        <member name="T:Colosoft.Query.UnionCollection">
            <summary>
            Representa uma coleção de uniões.
            </summary>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.Union})">
            <summary>
            Cria uma instancia da projeção já com as uniões que serão usadas.
            </summary>
            <param name="unions"></param>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.Add(Colosoft.Query.Union)">
            <summary>
            Adiciona a união.
            </summary>
            <param name="union"></param>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.Remove(Colosoft.Query.Union)">
            <summary>
            Remove a união.
            </summary>
            <param name="union"></param>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a união no indice informado.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.Clear">
            <summary>
            Limpa as consultas da união.
            </summary>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.Clone">
            <summary>
            Clona a projeção.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.UnionCollection.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema Xml da classe.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.UnionCollection.Count">
            <summary>
            Quantidade de consultas da união.
            </summary>
        </member>
        <member name="P:Colosoft.Query.UnionCollection.Item(System.Int32)">
            <summary>
            Recupera a consulta que está no indice informado.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.UnionInfo">
            <summary>
            Armazena as informações de uma união.
            </summary>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.#ctor(Colosoft.Query.QueryInfo,System.Boolean)">
            <summary>
            Cria a instancia informando os parametros iniciais.
            </summary>
            <param name="query"></param>
            <param name="all"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.Clone">
            <summary>
            Clona uma projeção.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instância anteriormente serializada.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Recupera os dados serializados
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfo.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.UnionInfo.Query">
            <summary>
            Consulta da união.
            </summary>
        </member>
        <member name="P:Colosoft.Query.UnionInfo.All">
            <summary>
            Identifica se é uma união ALL.
            </summary>
        </member>
        <member name="T:Colosoft.Query.UnionInfoCollection">
            <summary>
            Representa uma coleção de uniões.
            </summary>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Query.UnionInfo})">
            <summary>
            Cria uma instancia da projeção já com as uniões que serão usadas.
            </summary>
            <param name="unions"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.Add(Colosoft.Query.UnionInfo)">
            <summary>
            Adiciona a união.
            </summary>
            <param name="union"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.Remove(Colosoft.Query.UnionInfo)">
            <summary>
            Remove a união.
            </summary>
            <param name="union"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a união no indice informado.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.Clear">
            <summary>
            Limpa as consultas da união.
            </summary>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.Clone">
            <summary>
            Clona a projeção.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema Xml da classe.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.Colosoft#Serialization#ICompactSerializable#Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.UnionInfoCollection.Colosoft#Serialization#ICompactSerializable#Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Query.UnionInfoCollection.Count">
            <summary>
            Quantidade de consultas da união.
            </summary>
        </member>
        <member name="P:Colosoft.Query.UnionInfoCollection.Item(System.Int32)">
            <summary>
            Recupera a consulta que está no indice informado.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.ValuesArray">
            <summary>
            Representa um vetor de valores.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.GetValuesArraySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquena para o tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados serializados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados no xml.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados no XML.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.Clone">
            <summary>
            Clona um array de valores.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Serializa o objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.ValuesArray.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Desserializa o objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Colosoft.Query.ValuesArray.Values">
            <summary>
            Valores do vetor.
            </summary>
        </member>
        <member name="P:Colosoft.Query.ValuesArray.QualifiedName">
            <summary>
            Nome que qualifica o tipo.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Variable">
            <summary>
            Representa um termo de parametro.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Variable.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Variable.#ctor(System.String)">
            <summary>
            Cria a instancia com o nome do parametro;
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Colosoft.Query.Variable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado na deserialização dos dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Variable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados para a serializa~çao.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Colosoft.Query.Variable.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escreve os dados da instancia no xml.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Variable.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados do xml para a instancia.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Query.Variable.ToString">
            <summary>
            Texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Variable.Clone">
            <summary>
            Clona a variável.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Variable.Serialize(Colosoft.Serialization.IO.CompactWriter)">
            <summary>
            Faz a serialização do objeto.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Query.Variable.Deserialize(Colosoft.Serialization.IO.CompactReader)">
            <summary>
            Faz a desserialização do objeto.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:Colosoft.Query.Variable.Name">
            <summary>
            Nome do parametro.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Variable.QualifiedName">
            <summary>
            Recupera o nome qualificado para o tipo,
            </summary>
        </member>
        <member name="T:Colosoft.Query.WhereClause">
            <summary>
            Classe que representa a clausa where.
            </summary>
        </member>
        <member name="M:Colosoft.Query.WhereClause.#ctor(Colosoft.Query.ConditionalContainer)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Colosoft.Query.WhereClause.#ctor">
            <summary>
            Construtor para filhos.
            </summary>
        </member>
        <member name="M:Colosoft.Query.WhereClause.And(Colosoft.Query.Conditional)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.Or(Colosoft.Query.Conditional)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.And(System.String)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.Or(System.String)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.And(Colosoft.Query.ConditionalContainer)">
            <summary>
            Adiciona um container de condição do tipo AND.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.Or(Colosoft.Query.ConditionalContainer)">
            <summary>
            Adiciona um container de condição do tipo OR.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.Start(Colosoft.Query.Conditional)">
            <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.Start(System.String)">
             <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
             </summary>
             <param name="expression"></param>
             <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.Start(Colosoft.Query.ConditionalContainer)">
            <summary>
            Adiciona o container condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.ToString">
            <summary>
            Texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.Add(System.String,System.Object)">
            <summary>
            Adiciona um parametro.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.WhereClause.Add(Colosoft.Query.QueryParameter)">
            <summary>
            Adiciona o parametro para o clausula.
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.WhereClause.Owner">
            <summary>
            Pai
            </summary>
        </member>
        <member name="P:Colosoft.Query.WhereClause.Container">
            <summary>
            Instancia do container.
            </summary>
        </member>
        <member name="T:Colosoft.Query.QueryableWhereClause">
            <summary>
            Representa um clausula condicional Where.
            </summary>
        </member>
        <member name="M:Colosoft.Query.QueryableWhereClause.#ctor(Colosoft.Query.Queryable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryable"></param>
        </member>
        <member name="P:Colosoft.Query.QueryableWhereClause.Container">
            <summary>
            Instancia do container.
            </summary>
        </member>
        <member name="P:Colosoft.Query.QueryableWhereClause.Queryable">
            <summary>
            Instancia do Queryable associado.
            </summary>
        </member>
        <member name="T:Colosoft.Query.JoinWhereClause">
            <summary>
            Representa um clausula condicional Where para join.
            </summary>
        </member>
        <member name="M:Colosoft.Query.JoinWhereClause.#ctor(Colosoft.Query.Queryable,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryable"></param>
            <param name="joinIndex"></param>
        </member>
        <member name="P:Colosoft.Query.JoinWhereClause.Container">
            <summary>
            Instancia do container.
            </summary>
        </member>
    </members>
</doc>

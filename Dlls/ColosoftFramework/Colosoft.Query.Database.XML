<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Colosoft.Query.Database</name>
    </assembly>
    <members>
        <member name="T:Colosoft.Query.Database.DataReaderEnumerator">
            <summary>
            Implementação de um enumerador para DataReader.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.DataReaderEnumerator.#ctor(System.Data.IDbCommand,System.Data.IDataReader)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="command"></param>
            <param name="dataReader"></param>
        </member>
        <member name="M:Colosoft.Query.Database.DataReaderEnumerator.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.DataReaderEnumerator.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.DataReaderEnumerator.MoveNext">
            <summary>
            Tenta mover para o próximo registro
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.DataReaderEnumerator.Reset">
            <summary>
            Reseta.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.DataReaderEnumerator.Current">
            <summary>
            Instancia atual.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.DataReaderEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Instancia atual.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.DefaultSqlQueryParser">
            <summary>
            Gerador de texto de query padrão
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.SqlQueryParser">
            <summary>
            Monta a consulta sql a partir do objeto QueryInfo
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.#ctor(Colosoft.Query.IQueryTranslator,Colosoft.Data.Schema.ITypeSchema)">
            <summary>
            Construtor da classe
            </summary>
            <param name="translator">Tradutor de nomes dos objetos CLR para tabelas SQL.</param>
            <param name="typeSchema">Classe de recuperação de metadados.</param>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.#ctor(Colosoft.Query.IQueryTranslator,Colosoft.Data.Schema.ITypeSchema,Colosoft.Query.QueryInfo)">
            <summary>
            Construtor da classe
            </summary>
            <param name="translator">Tradutor de nomes dos objetos CLR para tabelas SQL.</param>
            <param name="typeSchema">Classe de recuperação de metadados.</param>
            <param name="queryInfo"></param>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.GetText">
            <summary>
            Monta a consulta sql a partir do objeto <see cref="T:Colosoft.Query.QueryInfo"/>.
            </summary>
            <returns>String  que contém a consulta SQL.</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.GetText(Colosoft.Query.Database.SqlQueryPart)">
            <summary>
            Monta a consulta sql a partir do objeto <see cref="T:Colosoft.Query.QueryInfo"/>.
            </summary>
            <param name="parts">Partes que devem ser recuperadas no texto.</param>
            <returns>String  que contém a consulta SQL.</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.GetColumnName(Colosoft.Query.Column)">
            <summary>
            Recupera o nome da coluna.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.FormatProjectionAlias(System.String)">
            <summary>
            Formata o alias da projeção.
            </summary>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.IsProjectionAlias(System.String)">
            <summary>
            Verifica se uma string é alias de alguma projeção
            </summary>
            <param name="expression">Expressão que contém o texto do alias</param>
            <returns>Retorna true se for e false se não</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.GetEntity(System.String)">
            <summary>
            Encontra uma entidade baseado no seu alias
            </summary>
            <param name="alias">Alias da entidade</param>
            <returns>Entidade a ser retornada ou nulo caso não seja encontratada</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.IsParameterOrConstant(System.String)">
            <summary>
            Verifica se uma string é o nome de algum parâmetro da query
            </summary>
            <param name="name">Nome do parâmetro a ser verificado</param>
            <returns>True se for e false caso contrário</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryParser.FindAndAddEntity(System.String)">
            <summary>
            Encontra uma entidade interando pelo vetor de entidades do QueryInfo baseano no alias e adiciona ela no dicionário de Entidades interno
            </summary>
            <param name="alias">alias da entidade</param>
            <returns>Entidade a ser retornada ou nulo caso não seja encontratada</returns>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryParser.Query">
            <summary>
            Objeto QueryInfo que contém os dados da consulta
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryParser.Owner">
            <summary>
            Instancia do parser pai.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryParser.Translator">
            <summary>
            Tradutor de nomes dos objetos CLR para tabelas SQL.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryParser.TypeSchema">
            <summary>
            Classe de recuperação de metadados.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryParser.EntityAliasDictionary">
            <summary>
            Retorna uma entidade baseado no alias da mesma.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryParser.Entities">
            <summary>
            Relação das entidades associadas com o Parser
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryParser.UseTakeParameter">
            <summary>
            Identifica se é para usar os parametros de take and skip no parser.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryParser.Text">
            <summary>
            Texto do parse.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Database.DefaultSqlQueryParser._columnNameNoCheckMonitor">
            <summary>
            Monitor usado para verificar o nome da coluna.
            Se ele estiver busy quer dizer não será validado o nome da coluna.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.#ctor(Colosoft.Query.IQueryTranslator,Colosoft.Data.Schema.ITypeSchema,Colosoft.Query.Database.ITakeParametersParser)">
            <summary>
            Constutor da classe
            </summary>
            <param name="translator">Classe de tradução de dados</param>
            <param name="typeSchema">Classe de recuperação de metadados</param>
            <param name="takeParametersParser"></param>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.BuildText(Colosoft.Query.Database.SqlQueryPart)">
            <summary>
            Constrói o texto.
            </summary>
            <param name="part">Partes que serão usadas.</param>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.GetText">
            <summary>
            Método que gera e retorna o texto da query
            </summary>
            <returns>Retorna o texto com o comando sql</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.GetText(Colosoft.Query.Database.SqlQueryPart)">
            <summary>
            Método que gera e retorna o texto da query
            </summary>
            <returns>Retorna o texto com o comando sql</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.SelectParser">
            <summary>
            Adiciona ao campo string builder o texto correspondente a parte SELECT da query
            </summary>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.JoinParser">
            <summary>
            Adiciona ao campo string builder o texto correspondente a parte JOIN da query
            </summary>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.WhereParser">
            <summary>
            Adiciona ao campo string builder o texto correspondente a parte WHERE da query
            </summary>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.HavingParser">
            <summary>
            Adiciona ao campo StringBuilder local o texto correspondente a parte do HAVING.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.GroupByParser">
            <summary>
            Adiciona ao campo StringBuilder local o texto corresponte a parte GROUP BY da query
            </summary>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.SortParser">
            <summary>
            Adiciona ao campo StringBuilder local o texto correspondente a parte SORT da query
            </summary>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.ProjectionParser">
            <summary>
            Faz o parse das projeções.
            </summary>
            <returns>Retorna a própria instância.</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.ProjectionEntry)">
            <summary>
            Formata o texto de uma <see cref="T:Colosoft.Query.ProjectionEntry"/>
            </summary>
            <param name="entry">Recebe a projeção de coluna</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.ConditionalTerm,System.Boolean)">
            <summary>
            Formata texto de um <see cref="T:Colosoft.Query.ConditionalTerm"/>
            </summary>
            <param name="conditionalTerm">Termo condicional</param>
            <param name="ignoreContainerFormat">Identifica que é para ignorar a formatação de de container para a consulta.</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.CaseConditional)">
            <summary>
            Formata a condicional do case.
            </summary>
            <param name="caseConditional"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.QueryTerm,System.Boolean)">
            <summary>
            Formata texto de um <see cref="T:Colosoft.Query.QueryTerm"/>
            </summary>
            <param name="queryTerm">Sub query a ser formatada.</param>
            <param name="ignoreContainerFormat">Identifica que é para ignorar a formatação de de container para a consulta.</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.QueryInfo,System.Boolean)">
            <summary>
            Formata o texto de uma <see cref="T:Colosoft.Query.QueryInfo"/>
            </summary>
            <param name="queryInfo"></param>
            <param name="ignoreContainerFormat">Identifica que é para ignorar a formatação de de container para a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.GetColumnName(Colosoft.Query.Column)">
            <summary>
            Recupera o nome da coluna.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.Column)">
            <summary>
            Formata o texto de um <see cref="T:Colosoft.Query.Column"/>
            </summary>
            <param name="column">coluna</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.Formula)">
            <summary>
            Formata a formula.
            </summary>
            <param name="formula"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.Conditional)">
            <summary>
            Formata o texto de uma <see cref="T:Colosoft.Query.Conditional"/>
            </summary>
            <param name="conditional">Condicional a ser formatada</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.ConditionalContainer)">
            <summary>
            Formata o texto de um <see cref="T:Colosoft.Query.ConditionalContainer"/>
            </summary>
            <param name="container">Container a ser formatado</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.GroupByEntry)">
            <summary>
            Formata o texto de um <see cref="T:Colosoft.Query.GroupByEntry"/>
            </summary>
            <param name="groupby">Coluna de group by a ser formatada</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Format(Colosoft.Query.SortEntry)">
            <summary>
            Formata o texto de coluna de um <see cref="T:Colosoft.Query.SortEntry"/>
            </summary>
            <param name="sort">Coluna de sort a ser formatada</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Append(System.Char)">
            <summary>
            Anexa o texto a composição da consulta.
            </summary>
            <param name="character">Caracter a se anexada</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.Append(System.String)">
            <summary>
            Anexa o texto a composição da consulta.
            </summary>
            <param name="text">String a ser anexada</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.GetTranslatedName(Colosoft.Query.ITranslatedName)">
            <summary>
            Recuper ao nome traduzido.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.AppendTranslatedName(Colosoft.Query.ITranslatedName)">
            <summary>
            Adiciona a tradução do nome.
            </summary>
            <param name="name">Nome a ser adiocionado</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.AppendQuoteExpression(System.String)">
            <summary>
            Adiciona a palavra recebida entre colchetes
            </summary>
            <param name="word">Palavra a ser adicionada</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.QuoteExpression(System.String)">
            <summary>
            Adiciona a palavra recebida entre colchetes.
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.DefaultSqlQueryParser.AppendSqlOperator(System.String)">
            <summary>
            Receve um operador c# e adiciona um sql
            </summary>
            <param name="operatorString">operador c#</param>
            <returns>Retorna o próprio objeto</returns>
        </member>
        <member name="P:Colosoft.Query.Database.DefaultSqlQueryParser.Text">
            <summary>
            Texto do parse.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.IStoredProcedureTransaction">
            <summary>
            Assinatura da classe que representa a transação de uma StoredProcedure.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.ITakeParametersParser">
            <summary>
            Assinatura das classes que executa o parser do TakeParameter
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.ITakeParametersParser.GetText(Colosoft.Query.Database.SqlQueryParser,Colosoft.Query.TakeParameters)">
            <summary>
            Recupera o texto da consulta com os parametros de recuperação.
            </summary>
            <param name="queryParser"></param>
            <param name="takeParameters"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Database.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.ArgumentException_EntityFullNameIsEmpty">
            <summary>
              Looks up a localized string similar to Entity fullname is empty..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.ConditionalParserException_DuplicateParameter">
            <summary>
              Looks up a localized string similar to The parameter &apos;{0}&apos; is duplicated..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.Exception_PropertyNotMappedForType">
            <summary>
              Looks up a localized string similar to Property &apos;{0}&apos; not mapped for type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.InvalidOperationException_FoundEmptyGroupByEntry">
            <summary>
              Looks up a localized string similar to There is an group by entry empty..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.InvalidOperationException_NotFoundEntityFromAlias">
            <summary>
              Looks up a localized string similar to Not found entity from alias &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.InvalidOperationException_NotFoundPropertiesForTypeMetadata">
            <summary>
              Looks up a localized string similar to Not found properties for type metadata &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.InvalidOperationException_TypeMetadataNotFoundByFullName">
            <summary>
              Looks up a localized string similar to Type metadata not found by fullname &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.NotSupportedException_TableIdOnlySupportedInNonCompositePrimaryKeyTable">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; has a composite primary key and does not support TableId..
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.Properties.Resources.NotSupportedException_TypeOfConditionalTermNotSupported">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of ConditionalTerm is not supported. .
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.SqlQueryDataSource">
            <summary>
            Implementação de <see cref="T:Colosoft.Query.IQueryDataSource"/>
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryDataSource.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator,Colosoft.Data.Schema.ITypeSchema,Colosoft.Query.IProviderLocator)">
            <summary>
            Construtor padrão   
            </summary>
            <param name="serviceLocator"><see cref="T:Microsoft.Practices.ServiceLocation.IServiceLocator"/> que será usado pela instancia.</param>
            <param name="typeSchema">Instancia do esquema do tipo associado.</param>
            <param name="providerLocator">Localizador de provedor.</param>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryDataSource.Convert(System.Transactions.IsolationLevel)">
            <summary>
            Converte o nível de isolação do System.Transactions para o System.Data.
            </summary>
            <param name="isolationLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryDataSource.Execute(Colosoft.Query.QueryInfo)">
            <summary>
            Retorna o resultado de uma query receve os dados de uma query e enviando ao SQL Server
            </summary>
            <param name="query">Informações da query</param>
            <returns>Retorna o resultado da query</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryDataSource.Execute(Colosoft.Query.QueryInfo[])">
            <summary>
            Retorna o resultado de várias queries recebe os dados de uma query e enviando ao SQL Server
            </summary>
            <param name="queries">Informações das queries</param>
            <returns>Retorna os resultados da queries</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryDataSource.CreateParser(Colosoft.Query.QueryInfo)">
            <summary>
            Cria um parser com base nos dados da consulta.
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryDataSource.ExecuteQuery(System.String,Colosoft.Query.QueryInfo)">
            <summary>
            Executa a consulta no sistema.
            </summary>
            <param name="queryString">Texto do comando</param>
            <param name="queryInfo">Informações da consulta</param>
            <returns>Resultado da consulta</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryDataSource.ExecuteStoredProcedure(Colosoft.Query.QueryInfo)">
            <summary>
            Executa uma procedure no sistema.
            </summary>
            <param name="queryInfo">Informações da procedure.</param>
            <returns>Resultado da consulta.</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryDataSource.RegisterUserInfo(Colosoft.Query.Database.IStoredProcedureTransaction)">
            <summary>
            Registra as informações do usuário no banco de dados.
            </summary>
            <param name="transaction">Transação que será utilizada na operação.</param>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryDataSource.ServiceLocator">
            <summary>
            Instancia do <see cref="T:Microsoft.Practices.ServiceLocation.IServiceLocator"/> associada.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryDataSource.TypeSchema">
            <summary>
            Instancia do <see cref="T:Colosoft.Data.Schema.ITypeSchema"/> associado.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryDataSource.ProviderLocator">
            <summary>
            Localizador de provedor.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.SqlQueryDataSource.IsInitialized">
            <summary>
            Identifica se a instancia está inicializada.
            
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.SqlQueryPart">
            <summary>
            Possíveis partes de uma consulta SQL.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Database.SqlQueryPart.Select">
            <summary>
            Projeção.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Database.SqlQueryPart.Joins">
            <summary>
            Junções.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Database.SqlQueryPart.Where">
            <summary>
            Filtro.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Database.SqlQueryPart.GroupBy">
            <summary>
            Agrupamento.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Database.SqlQueryPart.OrderBy">
            <summary>
            Ordenação.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Database.SqlQueryPart.Having">
            <summary>
            Filtro para grupo ou agregação.
            </summary>
        </member>
        <member name="F:Colosoft.Query.Database.SqlQueryPart.All">
            <summary>
            Toda as partes
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.TranslatedTableName">
            <summary>
            Nome da tabela
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedTableName.#ctor(System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="schema"></param>
            <param name="name"></param>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedTableName.CompareTo(Colosoft.Query.ITranslatedName)">
            <summary>
            Compara com outro nome.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Database.TranslatedTableName.Name">
            <summary>
            Nome da tabela.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.TranslatedTableName.Schema">
            <summary>
            Esquema da tabela.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.TranslatedColumnName">
            <summary>
            Representa o nome de uma coluna.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedColumnName.#ctor(System.String,System.String,System.Type)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name"></param>
            <param name="tableAlias">Apelido da tabela.</param>
            <param name="propertyType">Tipo da propriedade.</param>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedColumnName.CompareTo(Colosoft.Query.ITranslatedName)">
            <summary>
            Compara com outro nome.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Database.TranslatedColumnName.Name">
            <summary>
            Nome da coluna.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.TranslatedColumnName.TableAlias">
            <summary>
            Apelido da tabela associado com a coluna.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.TranslatedColumnName.PropertyType">
            <summary>
            Tipo da propriedade.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.TranslatedStoredProcedureName">
            <summary>
            Armazena o nome traduzido da stored procedure.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedStoredProcedureName.#ctor(System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name"></param>
            <param name="schema"></param>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedStoredProcedureName.CompareTo(Colosoft.Query.ITranslatedName)">
            <summary>
            Compara com outro nome.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Database.TranslatedStoredProcedureName.Name">
            <summary>
            Nome do stored procedure.
            </summary>
        </member>
        <member name="P:Colosoft.Query.Database.TranslatedStoredProcedureName.Schema">
            <summary>
            Esquema da stored procedure.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.TranslatedSelectPart">
            <summary>
            Armazena uma parte do Statement Select.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedSelectPart.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="part"></param>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedSelectPart.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Query.Database.TranslatedSelectPart.CompareTo(Colosoft.Query.ITranslatedName)">
            <summary>
            Compara com outro nome.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Query.Database.TranslatedSelectPart.Part">
            <summary>
            Texto da parte da seleção.
            </summary>
        </member>
        <member name="T:Colosoft.Query.Database.SqlQueryTranslator">
            <summary>
            Implementação da interface que realiza a tradução do nome da classe para os dados de uma table do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.#ctor(Colosoft.Data.Schema.ITypeSchema)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeSchema">Objeto de recuperação de metadados</param>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.GetTypeMetadata(System.String)">
            <summary>
            Recupera os metadados do tipo pelo nome informado.
            </summary>
            <param name="fullName">Nome informado</param>
            <returns>Metadados do tipo</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.TryGetName(Colosoft.Query.EntityInfo,System.String,System.Boolean,Colosoft.Query.ITranslatedName@,System.Exception@)">
            <summary>
            Recupera o nome da coluna associado com as informações da entidade.
            </summary>
            <param name="entity">Entidade</param>
            <param name="propertyName">Nome da propriedade</param>
            <param name="ignoreTypeSchema">Identifica se é para ignorar o esquema do tipo.</param>
            <param name="translatedName">Nome traduzido que foi encontrado.</param>
            <param name="error">Erro ocorrido.</param>
            <returns>Retorna o nome da entidade</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.GetName(Colosoft.Query.EntityInfo,System.String)">
            <summary>
            Recupera o nome da coluna associado com as informações da entidade.
            </summary>
            <param name="entity">Entidade</param>
            <param name="propertyName">Nome da propriedade</param>
            <returns>Retorna o nome da entidade</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.GetName(Colosoft.Query.EntityInfo,System.String,System.Boolean)">
            <summary>
            Recupera o nome da coluna associado com as informações da entidade.
            </summary>
            <param name="entity">Entidade</param>
            <param name="propertyName">Nome da propriedade</param>
            <param name="ignoreTypeSchema">Identifica se é para ignorar o esquema do tipo.</param>
            <returns>Retorna o nome da entidade</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.TryGetName(Colosoft.Query.EntityInfo,System.String,Colosoft.Query.ITranslatedName@)">
            <summary>
            Recupera o nome da coluna associado com as informações da entidade.
            </summary>
            <param name="entity">Entidade</param>
            <param name="propertyName">Nome da propriedade</param>
            <param name="name"></param>
            <returns>Retorna o nome da entidade</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.TryGetName(Colosoft.Query.EntityInfo,System.String,System.Boolean,Colosoft.Query.ITranslatedName@)">
            <summary>
            Recupera o nome da coluna associado com as informações da entidade.
            </summary>
            <param name="entity">Entidade</param>
            <param name="propertyName">Nome da propriedade</param>
            <param name="ignoreTypeSchema">Identifica se é para ignorar o esquema do tipo.</param>
            <param name="name"></param>
            <returns>Retorna o nome da entidade</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.GetName(Colosoft.Query.EntityInfo)">
            <summary>
            Recupera o nome da tabela associado com a entidade.
            </summary>
            <param name="entity">Entidade</param>
            <returns>Retorna o nome da entidade</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.GetName(Colosoft.Query.EntityInfo,System.Boolean)">
            <summary>
            Recupera o nome da tabela associado com a entidade.
            </summary>
            <param name="entity">Entidade</param>
            <param name="ignoreTypeSchema">Identifica se é para ignorar o esquema do tipo.</param>
            <returns>Retorna o nome da entidade</returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlQueryTranslator.GetName(Colosoft.Query.StoredProcedureName)">
            <summary>
            Pega o nome da storedprocedure.
            </summary>
            <param name="storedProcedureName">Nome da stored procedure.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Query.Database.SqlSourceContext">
            <summary>
            Contexto da origem de um banco de dados SQL.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.SqlSourceContext.#ctor(Colosoft.Query.Database.SqlQueryDataSource)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="dataSource">Fonte de dados</param>
        </member>
        <member name="M:Colosoft.Query.Database.SqlSourceContext.CreateQuery">
            <summary>
            Cria uma nova instancia de consulta.
            </summary>
            <returns>Retorna uma instância do objeto <see cref="T:Colosoft.Query.Queryable"/></returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlSourceContext.CreateMultiQuery">
            <summary>
            Cria uma nova instância de um container de consultas
            </summary>
            <returns>Retorna uma intância do objeto <see cref="T:Colosoft.Query.MultiQueryable"/></returns>
        </member>
        <member name="M:Colosoft.Query.Database.SqlSourceContext.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Query.Database.SqlSourceContext.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing">Se está ou não sendo descartado</param>
        </member>
        <member name="P:Colosoft.Query.Database.SqlSourceContext.DataSource">
            <summary>
            Fonte de dados associada com a instancia.
            </summary>
        </member>
    </members>
</doc>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Colosoft.Web.Mvc</name>
    </assembly>
    <members>
        <member name="T:Colosoft.Web.Mvc.ClientHandlerDescriptor">
            <summary>
            Representa um evento tratado peleo widget.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.ClientHandlerDescriptor.HasValue">
            <summary>
            Identifica se possui valor.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Web.Mvc.ClientHandlerDescriptor.TemplateDelegate">
            <summary>
            A Razor template delegate.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.ClientHandlerDescriptor.HandlerName">
            <summary>
            The name of the JavaScript function which will be called as a handler.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.CustomModelBinder">
            <summary>
            Binder para recupera os dados da conexão.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.CustomModelBinder.CreatePropertyModelName(System.String,System.String)">
            <summary>
            Cria um nome para a propriedade da model.
            </summary>
            <param name="prefix"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.CustomModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.ICustomTypeDescriptor,System.String)">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="descriptor"></param>
            <param name="loader"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.DateTimeModelBinder">
            <summary>
            DateTimeModelBinder.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.DateTimeModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Vincula o valor.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Web.Mvc.DateTimeModelBinder.Culture">
            <summary>
            Cultura associada que será usada.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.DictionaryModelBinder">
            <summary>
            Implementação do Binder para dicionários.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.DictionaryModelBinder.IsGenericDictionary(System.Type)">
            <summary>
            Verifica se o tipo é um dicionário genérico.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.DictionaryModelBinder.AddItemsToDictionary(System.Collections.IDictionary,System.Type,System.String,System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Adiciona os itens para o dicionário.
            </summary>
            <param name="dictionary"></param>
            <param name="dictionaryType">Tipo do dicionário.</param>
            <param name="modelName"></param>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.DictionaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Vincula o modelo de dados.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.EntityModelBinder">
            <summary>
            Representa a vinculação de dados com a entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.EntityModelBinderBase">
            <summary>
            Implementação base do vinculador para entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinderBase.#ctor(Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinderBase.CreatePropertyModelName(System.String,System.String)">
            <summary>
            Cria um nome para a propriedade da model.
            </summary>
            <param name="prefix"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinderBase.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Vincula o valor da propriedade.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="propertyDescriptor"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinderBase.GetRecordKey(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>
            Recupera os valores das chaves associadas com a entidade.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinderBase.GetRecordOfKey(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>
            Recupera os valores das chaves associadas com a entidade.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinderBase.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.ICustomTypeDescriptor,Colosoft.Business.IEntityLoader,System.String)">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="descriptor"></param>
            <param name="loader"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Web.Mvc.EntityModelBinderBase.EntityTypeManager">
            <summary>
            Gerenciador de tipos das entidades.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder.#ctor(Colosoft.Business.IEntityTypeManager,System.Type,System.String,System.String,System.String[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityTypeManager"></param>
            <param name="flowType"></param>
            <param name="getMethodName"></param>
            <param name="createMethodName"></param>
            <param name="clearPropertyNames">Nome das propriedades que serão limpas na vinculação.</param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder.GetFlowInstance">
            <summary>
            Recupera a instancia do fluxo.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>
            Cria a model que será usada na vinculação.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Realiza a vinculação dos dados.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder.CreatePropertyModelName(System.String,System.String)">
            <summary>
            Cria um nome para a propriedade da model.
            </summary>
            <param name="prefix"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder.CreateEntity(System.Object,System.Type)">
            <summary>
            Cria a entidade.
            </summary>
            <param name="flow"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.EntityCollectionModelBinder">
            <summary>
            Vinculador usado para coleções de entidades.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.ShouldPerformRequestValidation(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Verifica se pode realizar a validação na requisição.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.BindComplexModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Realiza a vinculação com a model complexa
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.CreateComplexElementalModelBindingContext(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Object)">
            <summary>
            Cria um contexto de vinculação para um elemento complexo do model.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.BindComplexElementalModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Object)">
            <summary>
            Vincula um elemento complexo para a model.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="model"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.BindProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Vincula as propriedades.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.ShouldUpdateProperty(System.ComponentModel.PropertyDescriptor,System.Predicate{System.String})">
            <summary>
            Verifica se pode atualizar a propriedade.
            </summary>
            <param name="property"></param>
            <param name="propertyFilter"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.CanUpdateReadonlyTypedReference(System.Type)">
            <summary>
            Verifica se pode atualizar a referencia do tipo somente leitura.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.GetZeroBasedIndexes">
            <summary>
            Recupera o enumerable de indices baseados em zero.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.GetIndexes(System.Web.Mvc.ModelBindingContext,System.Boolean@,System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            Recupera os indices
            </summary>
            <param name="bindingContext"></param>
            <param name="stopOnIndexNotFound"></param>
            <param name="indexes"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.GetValueRequiredResource(System.Web.Mvc.ControllerContext)">
            <summary>
            Recupera o descrição do recurso que define que um valor é requirido.
            </summary>
            <param name="controllerContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.AddValueRequiredMessageToModelState(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelStateDictionary,System.String,System.Type,System.Object)">
            <summary>
            Adiciona uma mensagem de valor requerido para o estado da model.
            </summary>
            <param name="controllerContext"></param>
            <param name="modelState"></param>
            <param name="modelStateKey"></param>
            <param name="elementType"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Realiza a vinculação dos dados com o modelo.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityCollectionModelBinder.UpdateCollection(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>
            Atualiza a coleção.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="elementType">Tipo do elemento da coleção.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.EntityModelBinder`1">
            <summary>
            Implementação base do vinculador de entidades.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder`1.#ctor(Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityTypeManager"></param>
            <param name="sourceContext"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder`1.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
            <summary>
            Cria uma instancia da modelo para realizar a vinculação dos dados.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder`1.CreatePropertyModelName(System.String,System.String)">
            <summary>
            Cria um nome para a propriedade da model.
            </summary>
            <param name="prefix"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinder`1.CreateEntity(System.Type)">
            <summary>
            Cria a entidade.
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.EntityBinderAttribute">
            <summary>
            Atributo que define o vinculador de uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityBinderAttribute.#ctor(System.Type,System.String,System.String,System.String[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="flowType">Tipo do fluxo usado.</param>
            <param name="getMethodName">Nome do método que recupera a instancia.</param>
            <param name="createMethodName">Nome do método que cria a instancia.</param>
            <param name="clearPropertyNames"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityBinderAttribute.GetBinder">
            <summary>
            Recupera o vinculador.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.EntityModelBinderProvider">
            <summary>
            Implementação do provedor de binder para entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinderProvider.#ctor(Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="sourceContext"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelBinderProvider.GetBinder(System.Type)">
            <summary>
            Recupera o binder para o tipo informado.
            </summary>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.EntityModelMetadataProvider">
            <summary>
            Implementação do provedor de metadados para modelos de entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Web.Mvc.EntityModelMetadataProvider.ClearPropertyNamesKey">
            <summary>
            Chave os nomes das propriedades de coleção.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.GetMetadataForProperty(Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble,System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor,Colosoft.Validation.IPropertySettingsInfo)">
            <summary>
            Recupera os metadados para a propriedade.
            </summary>
            <param name="owner"></param>
            <param name="modelAccessor"></param>
            <param name="containerType"></param>
            <param name="propertyDescriptor"></param>
            <param name="propertySettings"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.CreateMetadata(Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble,System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String,Colosoft.Validation.IPropertySettingsInfo)">
            <summary>
            Cria o metadado para o tipo informado.
            </summary>
            <param name="owner"></param>
            <param name="attributes">Atributos da propriedade.</param>
            <param name="containerType">Tipo do container.</param>
            <param name="modelAccessor"></param>
            <param name="modelType">Tipo da model.</param>
            <param name="propertyName">Nome da propriedade.</param>
            <param name="propertySettings"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.GetMetadataForEntityProperties(System.Object,System.Type)">
            <summary>
            Recupera os metadados das propriedades da entidade.
            </summary>
            <param name="container"></param>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
            <summary>
            Recupera as propriedades para o container informado.
            </summary>
            <param name="container"></param>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.IsAssignableTo(System.Type,System.Type)">
            <summary>
            Verifica se o tipo implementa o tipo informado.
            </summary>
            <param name="type"></param>
            <param name="assignableType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.IsAssignableTo``1(System.Type)">
            <summary>
            Verifica se o tipo implementa o tipo informado.
            </summary>
            <typeparam name="TAssignable"></typeparam>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.ClearStateCache">
            <summary>
            Limpa o cache do estado.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.NotifyStatePropertyChanged(System.String)">
            <summary>
            Notifica que a propriedade foi alteada.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.ReloadTypeSettings">
            <summary>
            Recarrega as configurações do tipo.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.RaisePropertyChange(System.String)">
            <summary>
            Notifica que a propriedade foi alterada.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.GetEnumerator">
            <summary>
            Recupera o enumerador dos itens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="E:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.PropertyChanged">
            <summary>
            Evento acionado quando uma propriedade for alterada.
            </summary>
        </member>
        <member name="E:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.StateChanged">
            <summary>
            Evento acionado quando o estado for alterado.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.Type">
            <summary>
            Tipo.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.IsReadOnly">
            <summary>
            Identifica se a instancia é somente leitura.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.Parameters">
            <summary>
            Parametros.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.EntityModelMetadataProvider.MetadataStateble.Item(System.String)">
            <summary>
            Recupera o item pelo nome da propriedade.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.Extensions.DictionaryExtensions">
            <summary>
            Classe com métodos para auxiliar na manipulação de dicionários.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object,System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="replaceExisting">if set to <c>true</c> [replace existing].</param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.DictionaryExtensions.AppendInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)">
            <summary>
            Appends the in value.
            </summary>
            <param name="instance">The instance.</param>
            <param name="key">The key.</param>
            <param name="separator">The separator.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.DictionaryExtensions.PrependInValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Object)">
            <summary>
            Appends the specified value at the beginning of the existing value
            </summary>
            <param name="instance"></param>
            <param name="key"></param>
            <param name="separator"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.DictionaryExtensions.ToAttributeString(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Toes the attribute string.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="from">From.</param>
            <param name="replaceExisting">if set to <c>true</c> [replace existing].</param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="from">From.</param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object,System.Boolean)">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="values">The values.</param>
            <param name="replaceExisting">if set to <c>true</c> [replace existing].</param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.DictionaryExtensions.Merge(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
            <summary>
            Merges the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="values">The values.</param>
        </member>
        <member name="T:Colosoft.Web.Mvc.Extensions.ObjectExtensions">
            <summary>
            Classe com métodos de extensão para objetos.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.ObjectExtensions.ToDictionary(System.Object)">
            <summary>
            Converte o obketo de uma  dicionário de propriedade valor.
            </summary>
            <param name="object"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.Infrastructure.DefaultJavaScriptSerializer">
            <summary>
            Implementação padrão do serializador javascript.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.Infrastructure.IJavaScriptSerializer">
            <summary>
            Assinatura de um serializador javascript.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.IJavaScriptSerializer.Serialize(System.Object)">
            <summary>
            Serializa o objeto informado.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.Infrastructure.IJavaScriptInitializer">
            <summary>
            Assinatura de um inicializador javascript.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.IJavaScriptInitializer.CreateSerializer">
            <summary>
            Cria uma instancia do serializador.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.IJavaScriptInitializer.Initialize(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Inicializa.
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.IJavaScriptInitializer.InitializeFor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Inicializa para.
            </summary>
            <param name="selector"></param>
            <param name="name"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.IJavaScriptInitializer.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializa os valores informados.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer">
            <summary>
            Implementação do inicializador de javascript.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.Initialize(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Inicaliza os parametros.
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.InitializeFor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Inicializa os parametro para.
            </summary>
            <param name="selector"></param>
            <param name="name"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.CreateSerializer">
            <summary>
            Cria o serializador javascript.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializa os dados do objeto informado.
            </summary>
            <param name="object"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.AppendBoolean(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Anexa um valor boolean.
            </summary>
            <param name="output"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.AppendEvent(System.Text.StringBuilder,Colosoft.Web.Mvc.ClientHandlerDescriptor)">
            <summary>
            Anexa um evento.
            </summary>
            <param name="output"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.AppendDates(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Anexa datas.
            </summary>
            <param name="output"></param>
            <param name="dates"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.AppendArrayOfObjects(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}})">
            <summary>
            Anaxa um vetor de objetos.
            </summary>
            <param name="output"></param>
            <param name="array"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.AppendDate(System.Text.StringBuilder,System.DateTime)">
            <summary>
            Anexa um data.
            </summary>
            <param name="output"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Infrastructure.JavaScriptInitializer.AppendConvertible(System.Text.StringBuilder,System.Object)">
            <summary>
            Aneaxa um valor convertivel.
            </summary>
            <param name="output"></param>
            <param name="value"></param>
        </member>
        <member name="T:Colosoft.Web.Mvc.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.Properties.Resources.EntityBinder_CreatedMethodNotFound">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; not found in &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.Properties.Resources.EntityBinder_GetMethodNotFound">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; not found in &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.Properties.Resources.NameCannotBeBlank">
            <summary>
              Looks up a localized string similar to Name cannot be blank..
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.Properties.Resources.NameCannotContainSpaces">
            <summary>
              Looks up a localized string similar to Name cannot contain spaces..
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.Properties.Resources.Rtl">
            <summary>
              Looks up a localized string similar to The &quot;{0}&quot; class is no longer supported. To enable RTL support you must include telerik.rtl.css and apply the &quot;t-rtl&quot; class to a parent HTML element or the &lt;body&gt;..
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.SingleModelBinder">
            <summary>
            SingleModelBinder
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.SingleModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Vincula o valor.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Web.Mvc.SingleModelBinder.Culture">
            <summary>
            Cultura associada que será usada.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.Fluent.EnumBuilder`1">
            <summary>
            Implementação do construtor de model.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2">
            <summary>
            View component Builder base class.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2"/> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.op_Implicit(Colosoft.Web.Mvc.UI.WidgetBuilderBase{`0,`1})~`0">
            <summary>
            Sobrecarga de operação implicita.
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.ToComponent">
            <summary>
            Returns the internal view component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.Name(System.String)">
            <summary>
            Sets the name of the component.
            </summary>
            <param name="componentName">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.Deferred(System.Boolean)">
            <summary>
            Suppress initialization script rendering. Note that this options should be used in conjunction with WidgetFactory.DeferredScripts
            </summary>        
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.ModelMetadata(System.Web.Mvc.ModelMetadata)">
            <summary>
            Carrega os metadados do modelo.
            </summary>
            <param name="modelMetadata"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.HtmlAttributes(System.Object)">
            <summary>
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the HTML attributes.
            </summary>
            <param name="attributes">The HTML attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.Render">
            <summary>
            Renders the component.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.ToHtmlString">
            <summary>
            Recupera o html.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.ToClientTemplate">
            <summary>
            Recupera o template do cliente.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBuilderBase`2.Component">
            <summary>
            Gets the view component.
            </summary>
            <value>The component.</value>
        </member>
        <member name="F:Colosoft.Web.Mvc.UI.Fluent.EnumBuilder`1.viewContext">
            <summary>
            Contexto da view.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.Fluent.EnumBuilder`1.#ctor(System.Web.Mvc.ViewContext,Colosoft.Web.Mvc.Infrastructure.IJavaScriptInitializer)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="viewContext"></param>
            <param name="initializer"></param>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.EnumComponent">
            <summary>
            Representa um componente de um enum.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.WidgetBase">
            <summary>
            Implementação base se um Widget.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.IWidget">
            <summary>
            Assinatura de um widget.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.IHtmlAttributesContainer">
            <summary>
            Assinatura das classes que contm atributos HTML.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IHtmlAttributesContainer.HtmlAttributes">
            <summary>
            The HtmlAttributes applied to objects which can have child items
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IWidget.Id">
            <summary>
            Identificador.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IWidget.Name">
            <summary>
            Nome.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IWidget.ModelMetadata">
            <summary>
            Metadados da model.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IWidget.ViewContext">
            <summary>
            Contexto da view.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IWidget.ViewData">
            <summary>
            Dados da view.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.IScriptableComponent">
            <summary>
            Assinatura de um componente que contem script.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.IScriptableComponent.WriteInitializationScript(System.IO.TextWriter)">
            <summary>
            Writes the initialization script.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IScriptableComponent.IsSelfInitialized">
            <summary>
            Identifica se auto inicializa.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IScriptableComponent.IsInClientTemplate">
            <summary>
            Identiica se está um template do cliente.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.IScriptableComponent.Selector">
            <summary>
            Seletor.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Colosoft.Web.Mvc.UI.WidgetBase"/> class.
            </summary>
            <param name="viewContext">The view context.</param>
            <param name="viewData"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.#ctor(System.Web.Mvc.ViewContext,Colosoft.Web.Mvc.Infrastructure.IJavaScriptInitializer,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="viewContext"></param>
            <param name="initializer"></param>
            <param name="viewData"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.Render">
            <summary>
            Renders the component.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.WriteInitializationScript(System.IO.TextWriter)">
            <summary>
            Writes the initialization script.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.VerifySettings">
            <summary>
            Verifica as configurações.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.ToHtmlString">
            <summary>
            Converte para string com o HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.ToClientTemplate">
            <summary>
            Converte para o template do cliente.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.WriteHtml(System.Web.UI.HtmlTextWriter)">
            <summary>
            Writes the HTML.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.WriteDeferredScriptInitialization">
            <summary>
            Escreve o script de inicialização.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetBase.AppendScriptToContext(System.String)">
            <summary>
            Anexa o script para o contexto.
            </summary>
            <param name="script"></param>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.Initializer">
            <summary>
            Inicializador javascript.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.IsSelfInitialized">
            <summary>
            Identifica se está auto inicializada.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.IsInClientTemplate">
            <summary>
            Identifica se está em um template de cliente.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.HasDeferredInitialization">
            <summary>
            Identifica se a initialização foi deferida.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.Selector">
            <summary>
            Seletor.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.Events">
            <summary>
            Gets the client events of the grid.
            </summary>
            <value>The client events.</value>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.ModelMetadata">
            <summary>
            Metadados da model.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.HtmlAttributes">
            <summary>
            Gets the HTML attributes.
            </summary>
            <value>The HTML attributes.</value>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.ViewContext">
            <summary>
            Gets or sets the view context to rendering a view.
            </summary>
            <value>The view context.</value>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetBase.ViewData">
            <summary>
            Dados da view.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.EnumComponent.#ctor(System.Type,System.Web.Mvc.ViewContext,Colosoft.Web.Mvc.Infrastructure.IJavaScriptInitializer)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumType"></param>
            <param name="viewContext"></param>
            <param name="initializer"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.EnumComponent.GetEnumValues">
            <summary>
            Recupera os valores do enum.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.EnumComponent.WriteInitializationScript(System.IO.TextWriter)">
            <summary>
            Escreve a inicialização javascript.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.EnumComponent.WriteHtml(System.Web.UI.HtmlTextWriter)">
            <summary>
            Escreve o html da componente.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.EnumComponent.VerifySettings">
            <summary>
            Verifica as configurações.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.WidgetFactory">
            <summary>
            Cria uma API fluent para o colosoft Widgets.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetFactory.#ctor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="htmlHelper"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetFactory.Enum``1">
            <summary>
            Cria o builder de um enum.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetFactory.HtmlHelper">
            <summary>
            Html helper associado.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetFactory.Initializer">
            <summary>
            Inicializador Javascript.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetFactory.ViewContext">
            <summary>
            Context de visualização.
            </summary>
        </member>
        <member name="P:Colosoft.Web.Mvc.UI.WidgetFactory.ViewData">
            <summary>
            Dados da view.
            </summary>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.WidgetFactory`1">
            <summary>
            Cria uma API fluent para o colosoft Widgets.
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetFactory`1.#ctor(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="htmlHelper"></param>
        </member>
        <member name="T:Colosoft.Web.Mvc.Extensions.HtmlAttributesContainerExtensions">
            <summary>
            Classe com métodos para auxiliar na manipulação de atributos html.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.HtmlAttributesContainerExtensions.AppendCssClass(Colosoft.Web.Mvc.UI.IHtmlAttributesContainer,System.String)">
            <summary>
            Anexa uma class css no container.
            </summary>
            <param name="container"></param>
            <param name="class"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.HtmlAttributesContainerExtensions.PrependCssClass(Colosoft.Web.Mvc.UI.IHtmlAttributesContainer,System.String)">
            <summary>
            PrependCssClass
            </summary>
            <param name="container"></param>
            <param name="class"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.Extensions.HtmlAttributesContainerExtensions.ThrowIfClassIsPresent(Colosoft.Web.Mvc.UI.IHtmlAttributesContainer,System.String,System.String)">
            <summary>
            Dispara uma exception caso a classe não esteja presente.
            </summary>
            <param name="container"></param>
            <param name="class"></param>
            <param name="message"></param>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.HtmlHelperExtension">
            <summary>
            Classe com métodos de extensão para o HtmlHelper.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.HtmlHelperExtension.Colosoft(System.Web.Mvc.HtmlHelper)">
            <summary>
            Inicializa o Widget do Colosoft.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.HtmlHelperExtension.Colosoft``1(System.Web.Mvc.HtmlHelper{``0})">
            <summary>
            Inicializa o Widget do Colosoft.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Web.Mvc.UI.WidgetExtensions">
            <summary>
            Métodos de extensão do Widget.
            </summary>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetExtensions.IsValidCharacter(System.Char)">
            <summary>
            Verifica se é um caracter válido.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetExtensions.ReplaceInvalidCharacters(System.String,System.Text.StringBuilder)">
            <summary>
            Substitui caracteres inválidos.
            </summary>
            <param name="part"></param>
            <param name="builder"></param>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetExtensions.GetValue``1(Colosoft.Web.Mvc.UI.IWidget,``0)">
            <summary>
            Recupera o valor do Widget.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetExtensions.GetValue``1(Colosoft.Web.Mvc.UI.IWidget,System.String,``0,System.String)">
            <summary>
            Recupera o valor do widget.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetExtensions.IsValid(Colosoft.Web.Mvc.UI.IWidget)">
            <summary>
            Verifica se é valido.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetExtensions.GetUnobtrusiveValidationAttributes(Colosoft.Web.Mvc.UI.IWidget)">
            <summary>
            Recupera os atributos de validação.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Web.Mvc.UI.WidgetExtensions.SanitizeId(Colosoft.Web.Mvc.UI.IWidget,System.String)">
            <summary>
            SanitizeId.
            </summary>
            <param name="instance"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>

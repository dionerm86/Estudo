<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Colosoft.Business</name>
    </assembly>
    <members>
        <member name="T:Colosoft.Business.BaseEntityList`1">
            <summary>
            Implementação base de uma lista de entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityList`1">
            <summary>
            Assinatura da uma lista genérica de entidades.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityList">
            <summary>
            Assinatura de uma lista de entidades.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntity">
            <summary>
            Contrato para os objetos do sistema
            </summary>
        </member>
        <member name="T:Colosoft.Business.IClearableChangedTracking">
            <summary>
            Assinatura das classe que fazema limpeza das alterações.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IClearableChangedTracking.ClearChanges">
            <summary>
            Limpa as alteração.es
            </summary>
        </member>
        <member name="M:Colosoft.Business.IClearableChangedTracking.IgnoreChanges(System.String[])">
            <summary>
            Ignora as alterações das propriedades informadas.
            </summary>
            <param name="propertyNames"></param>
        </member>
        <member name="M:Colosoft.Business.IEntity.CreateDescriptor">
            <summary>
            Cria um <see cref="T:Colosoft.IEntityDescriptor"/> da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.CloneToEdit">
            <summary>
            Cria uma instância com a cópia da instância original para edição. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.RegisterCloneToEdit(Colosoft.Business.IEntity)">
            <summary>
            Registra na entidade que ela foi clona para edição a partir da instancia informada.
            </summary>
            <param name="cloneFrom">Instancia de origem da entidade.</param>
        </member>
        <member name="M:Colosoft.Business.IEntity.Flush">
            <summary>
            Notifica todos os observadores das mudanças ocorridas.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntity.GetOriginal">
            <summary>
            Recupera a instancia com os dados originais da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.CopyFrom(Colosoft.Business.IEntity)">
            <summary>
            Copia os dados da entidade informada para a instancia,
            inclusives os dados de alteração da nova instancia..
            </summary>
            <param name="fromEntity">Instancia com os dados que serão copiados.</param>
        </member>
        <member name="M:Colosoft.Business.IEntity.Save(Colosoft.Data.IPersistenceSession)">
            <summary>
            Salva os dados da entidade.
            </summary>
            <param name="session">Sessão onde a operação será realizada.</param>
            <returns>Retorna true se a operação foi executada com sucesso.</returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.Save">
            <summary>
            Salva os dados da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntity.Delete(Colosoft.Data.IPersistenceSession)">
            <summary>
            Registra a entidade para ser apagada.
            </summary>
            <param name="session">Sessão onde a operação será realizada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.Validate">
            <summary>
            Valida os dados da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.Validate(Colosoft.Validation.ValidationResult@)">
            <summary>
            Valida os dados da intancia.
            </summary>
            <param name="validationResult">Resultado da validação.</param>
        </member>
        <member name="M:Colosoft.Business.IEntity.Validate(System.String[])">
            <summary>
            Valida as propriedades informadas.
            </summary>
            <param name="propertyNames">Nomes das propriedades que serão validadas.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.Lock(System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Bloqueia a inatância.
            </summary>
            <param name="token">token que irá bloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.Lock">
            <summary>
            Bloqueia a inatância.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.Lock(Colosoft.Lock.LockSession)">
            <summary>
            Realiza o lock da instancia.
            </summary>
            <param name="session">Instancia da sessão que deverá ser utilizada para o lock.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.UnLock(System.String,System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <param name="groupSession">Sessão do grupo.</param>
            <param name="token">token que irá desbloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.UnLock(System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <param name="token">token que irá desbloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.UnLock(System.String)">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <param name="groupSession">Sessão do grupo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.UnLock">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntity.InitList(Colosoft.Collections.IObservableCollection)">
            <summary>
            Inicializa a lista.
            </summary>
            <param name="ownerList">Lista mãe da entidade</param>
        </member>
        <member name="M:Colosoft.Business.IEntity.RemoveStorageControl">
            <summary>
            Remove o controle de armazenamento da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntity.RemoveAllStorageControl">
            <summary>
            Remove o control de armazenamento da entidade e de seus filhos.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntity.ResetAllUids">
            <summary>
            Reseta todos os Uids da instancia e das instancias filhas.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntity.CreateReadOnlyPropertyChangingCancelHandler">
            <summary>
            Recupera o manipulador que cancela a velidação de somente leitura
            na alteração de propriedades.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Colosoft.Business.IEntity.AcceptedChanges">
            <summary>
            Evento chamado ao terminar atualizações.
            </summary>
        </member>
        <member name="E:Colosoft.Business.IEntity.Changed">
            <summary>
            Evento acionado quando a entidade sofrer alguma alteração.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.Owner">
            <summary>
            Dono da lista.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.TypeManager">
            <summary>
            Gerenciador dos tipos associado com a instncia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.Loader">
            <summary>
            Loader da instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.UIContext">
            <summary>
            Contexto de interface com o usuário
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.Observer">
            <summary>
            Objeto que controla os objetos que observam as alterações
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.Uid">
            <summary>
            Identificador unico da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.FindName">
            <summary>
            Nome que identifica a instância
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.IsEditing">
            <summary>
            Identifica se a entidade está sendo editada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.IsReadOnly">
            <summary>
            Identifica se a instancia é para somente leitura.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.IsInitializing">
            <summary>
            Identifica se a entidade está sendo inicializada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.HasUid">
            <summary>
            Identifica se a entidade possui um identificador unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.HasFindName">
            <summary>
            Identifica se a instância possui um nome unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.MyList">
            <summary>
            Instancia da lista associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.ExistsInStorage">
            <summary>
            Identifica se a instancia já existe na fonte de armazenamento.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.CanEdit">
            <summary>
            Determina se a instancia da entidade pode ser editada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.Instance">
            <summary>
            Instancia original do objeto.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.IsInstanceInicialized">
            <summary>
            Identificador se a instancia original do objeto foi inicializada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.IsLockedToMe">
            <summary>
            Indica se a instância está locada para a pessoa.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.IsLocked">
            <summary>
            Veifica se a instância está ou não locada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.CloneFrom">
            <summary>
            Instância a partir da qual q instância atual foi clonada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntity.EntityTypeName">
            <summary>
            Recupera o nome do tipo da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityList.AddNew">
            <summary>
            Adiciona um novo item para a lista.
            </summary>
            <returns>Instancia do novo item adicionado.</returns>
            <exception cref="T:System.NotSupportedException">
                System.ComponentModel.IBindingList.AllowNew is false.
            </exception>
        </member>
        <member name="M:Colosoft.Business.IEntityList.GetNotificationsLock">
            <summary>
            Cria um manipulador para bloquear as notificações da lista.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityList.CopyFrom(Colosoft.Business.IEntityList)">
            <summary>
            Copia os dados da entidade informada para a instancia,
            inclusives os dados de alteração da nova instancia..
            </summary>
            <param name="from">Instancia com os dados que serão copiados.</param>
        </member>
        <member name="M:Colosoft.Business.IEntityList.IgnoreRemovedItem(Colosoft.Business.IEntity)">
            <summary>
            Ignora o item removido da coleção.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityList.Item(System.Int32)">
            <summary>
            Recupera e define o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityList.SyncRoot">
            <summary>
            Objeto para sincronização.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityList.IsSynchronized">
            <summary>
            Identifica se a instancia é sincronizada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityList.IsLazyLoadState">
            <summary>
            Identifica se a lista está em estado de carga tardia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityList`1.RemoveAt(System.Int32)">
            <summary>
            Remove o item na posição informada.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Colosoft.Business.IEntityList`1.IgnoreRemovedItem(`0)">
            <summary>
            Ignora o item removido da coleção.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adiciona um faixa de itens para a lista.
            </summary>
            <param name="items"></param>
        </member>
        <member name="P:Colosoft.Business.IEntityList`1.Item(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityList`1.Count">
            <summary>
            Quantidade de registro na lista.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IConnectedEntity">
            <summary>
            Assinatura das classes que representam entidade conectadas.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IConnectedEntity.Connect(Colosoft.Query.ISourceContext)">
            <summary>
            Conecta a entidade com o contexto da origem dos dados.
            </summary>
            <param name="sourceContext">Insta</param>
        </member>
        <member name="M:Colosoft.Business.IConnectedEntity.Disconnect">
            <summary>
            Desconecta a entidade do contexto da origem dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IConnectedEntity.SourceContext">
            <summary>
            Contexto da origem dos dados.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ILoadableEntity">
            <summary>
            Assinatura das classes de entidade que suportam 
            a chamada de quando elas são carregadas.
            </summary>
        </member>
        <member name="M:Colosoft.Business.ILoadableEntity.NotifyLoaded">
            <summary>
            Notifica que a entidade foi carregada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.ILoadableEntity.Loaded">
            <summary>
            Evento acionado quando a entidade for carregada
            </summary>
        </member>
        <member name="P:Colosoft.Business.ILoadableEntity.IsLoaded">
            <summary>
            Identifica se a entidade já recebeu a notificação de que ela foi carregada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityPersistence">
            <summary>
            Assinatura das classes de entidade que possuem suporte para persistencia.
            </summary>
        </member>
        <member name="E:Colosoft.Business.IEntityPersistence.Saved">
            <summary>
            Evento acionado quando a entidade for salva.
            </summary>
        </member>
        <member name="E:Colosoft.Business.IEntityPersistence.Saving">
            <summary>
            Evento acionado quando a entidade estiver sendo salva.
            </summary>
        </member>
        <member name="E:Colosoft.Business.IEntityPersistence.Deleting">
            <summary>
            Evento acionado quando a entidade estiver sendo apagada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.IEntityPersistence.Deleted">
            <summary>
            Evento acionado quando a entidade for apagada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ISaveOperationsContainer">
            <summary>
            Assinatura do container que possui operações de persistencia.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IDeleteOperationsContainer">
            <summary>
            Assinatura do contaier que possui operações de exclusão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IDeleteOperationsContainer.ProcessDeleteOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de delete.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.ISaveOperationsContainer.ProcessUpdateOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Update.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.ISaveOperationsContainer.ProcessInsertOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de insert.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.IEntitySavePersistenceSessionObserver">
            <summary>
            Assinatura da classe que possui suporte para registrar
            a sessão de persistencia para a operação de save.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntitySavePersistenceSessionObserver.Register(Colosoft.Data.IPersistenceSession)">
            <summary>
            Registra a sessão de persistencia.
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityInstanceRegister">
            <summary>
            Assinatura da classe de entidade que possui o suporte para registrar o instance.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityInstanceRegister.Register(Colosoft.Business.IEntityInstanceGetter)">
            <summary>
            Registra a instancia da entidade.
            </summary>
            <param name="instanceGetter">Instancia responsável por recuperar o Instance.</param>
        </member>
        <member name="P:Colosoft.Business.IEntityInstanceRegister.InstanceGetter">
            <summary>
            Instancia do getter.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BaseEntityList`1._myList">
            <summary>
            Lista na qual o objeto está incluído.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BaseEntityList`1._loadItems">
            <summary>
            Instancia usada para carregar o itens de forma tardia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BaseEntityList`1._editingTransactionInstance">
            <summary>
            Instancia da transação de edição.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BaseEntityList`1._indexes">
            <summary>
            Armazena a relação dos indices da coleção.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BaseEntityList`1._hasUid">
            <summary>
            Identifica se a entidade possui Uid.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CreateItemInstanceGetter(Colosoft.Business.IEntity)">
            <summary>
            Instancia do recuperador do Instance para o item da coleção.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.#ctor(System.String,System.Action{`0},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="uiContext"></param>
            <param name="parentUidSetter">Método usado para definir o identificador unico do pai para as entidades filas da lista.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.String,System.Action{`0},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia já definindos os itens iniciais.
            </summary>
            <param name="items">Itens que serão usados na inicialização.</param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.#ctor(System.Lazy{System.Collections.Generic.IEnumerable{`0}},System.String,System.Action{`0},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia definindo o parametro de carga tardia dos itens.
            </summary>
            <param name="items"></param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.#ctor(System.Func{Colosoft.Business.BaseEntityList{`0},System.Collections.Generic.IEnumerable{`0}},System.String,System.Action{`0},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia a partir dos dados clonados.
            </summary>
            <param name="itemsLoader"></param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CheckIfItemIsUnique(`0)">
            <summary>
            Verifica se um item é unico na lista.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.IsCompatibleObject(System.Object)">
            <summary>
            Verifica se o valor informado é compatível com a coleção.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RegisterItem(`0)">
            <summary>
            Registra o item para a coleção.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.UnregisterItem(`0,System.Boolean)">
            <summary>
            Remove o registro do item.
            </summary>
            <param name="item"></param>
            <param name="cleanMyList">Identifica se é para limpar o mylist.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RegisterRemovedItem(`0)">
            <summary>
            Registra o item removido.
            </summary>
            <param name="i">Instancia do item que deve ser registrado como removido.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.UnregisterRemovedItem(`0)">
            <summary>
            Remove o registro do item removido.
            </summary>
            <param name="i">Instancia do item registrado.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.UnregisterList(Colosoft.Collections.IObservableCollection)">
            <summary>
            Remove o registro da lista pai.
            </summary>
            <param name="ownerList"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.MyListCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acionado quanod o coleção associada for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.MyListPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acionado quando uma propriedade da lista for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.SavePersistenceSessionExecutedCallback(System.Object,Colosoft.Data.PersistenceSessionExecutedEventArgs)">
            <summary>
            Método acionado quando a sessão de persistencia que está sendo usada para salvar a entidade
            tenha sido executada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.DeletePersistenceSessionExecutedCallback(System.Object,Colosoft.Data.PersistenceSessionExecutedEventArgs)">
            <summary>
            Método acionado quando a sessão de persistencia que está sendo usada para apagar a entidade
            tenha sido executada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnCollectionChanging(Colosoft.Business.NotifyCollectionChangingEventArgs{`0})">
            <summary>
            Evento de coleção sendo alterada.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.GetItem(System.Int32)">
            <summary>
            Recupera o item pelo indice informado.
            </summary>
            <param name="index">Indice do item que será recuperado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.SetItem(System.Int32,`0)">
            <summary>
            Define o item para o indice informado.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnLoaded">
            <summary>
            Método acionado quando a entidade for carregada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnOwnerChanged(Colosoft.Business.IEntity)">
            <summary>
            Método acionado quando o novo propriedade da coleção for alterado.
            </summary>
            <param name="newOwner"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OwnerPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acioando quando alguma propriedade do pai for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnSaving">
            <summary>
            Método acionado quando a entidade estiver sendo salva.
            </summary>
            <returns>Retorna false é a operação for cancelada.</returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnSaved(System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Método acionado quando a entidade for salva.
            </summary>
            <param name="success">Identifica se a entidade foi salva com sucesso.</param>
            <param name="message">Mensagem associada.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnDeleting">
            <summary>
            Método acionado quando a entidade estiver sendo apagada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnDeleted(System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Método acionado quando a instancia for apagada.
            </summary>
            <param name="success">Identifica se a entidade foi apagada com sucesso.</param>
            <param name="message">Mensagem associada.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CloneItem(Colosoft.Collections.IObservableCollection,`0)">
            <summary>
            Método usado para clonar um item
            </summary>
            <param name="parent"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnAcceptChanges">
            <summary>
            Evento chamado ao aceitar atualizações.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnChanged">
            <summary>
            Evento acionado quando a entidade sofre alteração.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acionado toda vez que a propriedade de um item da lista for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnItemAcceptedChanges(System.Object,System.EventArgs)">
            <summary>
            Método acionado quando as alterações de um item da coleção
            for aceita.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnItemDeleted(System.Object,Colosoft.Business.EntityDeletedEventArgs)">
            <summary>
            Método acionado quando o item for apagado do banco de dados.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RaisePropertyChanged(System.String[])">
            <summary>
            Dispara ou registra as alterações ocorridas para a propriedade
            </summary>
            <param name="propertyNames">Nome das propriedades</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RaisePropertyChanging(System.String,System.Object)">
            <summary>
            Dispara eventos ocorridas para o inicio de alteração da propriedade
            </summary>
            <param name="propertyName">Nome da propriedade</param>
            <param name="newValue">Valor da prorpiedade</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acionado quando a coleção for alterada.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Método acionado quando a lista for alterada.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CheckExists(`0)">
            <summary>
            Verifica se o item existe na lista.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ProcessNewItem(`0)">
            <summary>
            Processa o identificador unico do item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.FixItem(`0)">
            <summary>
            Fixa o item na coleção.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Convert(System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Converte a ação de alteração de uma coleção para o tipo de alteração de lista.
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Convert(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Converte os argumentos.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.OnInnerListCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acioando quando a coleção interna sofrer alguam alteração.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CreateDescriptor">
            <summary>
            Cria um <see cref="T:Colosoft.IEntityDescriptor"/> da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Equals(Colosoft.Query.RecordKey)">
            <summary>
            Compara a instancia com a chave do registro informada.
            </summary>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Equals(Colosoft.Query.RecordKey,Colosoft.Query.RecordKeyComparisonType)">
            <summary>
            Verifica se a instancia possui dados iguais a chave
            de registro informada.
            </summary>
            <param name="recordKey">Instancia da chave que será comparada.</param>
            <param name="comparisonType">Tipo de comparação que será realizada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Move(System.Int32,System.Int32)">
            <summary>
            Move o item de uma posição para outra.
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.InitList(Colosoft.Collections.IObservableCollection)">
            <summary>
            Inicializa a lista do objeto.
            </summary>
            <param name="ownerList">Lista que contém a entidade.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RemoveStorageControl">
            <summary>
            Remove o controle de armazenamento da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RemoveAllStorageControl">
            <summary>
            Remove o control de armazenamento da entidade e de seus filhos.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Reset">
            <summary>
            Reseta a coleção.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Collections#IThreadSafeObservableCollection#DisableThreadSafe">
            <summary>
            Desabilita o thread safe.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Collections#IThreadSafeObservableCollection#EnableThreadSafe">
            <summary>
            Habilita o thread safe.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.GetNotificationsLock">
            <summary>
            Recupera o lock de notificações.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CopyFrom(Colosoft.Business.IEntityList)">
            <summary>
            Copia os dados da entidade informada para a instancia,
            inclusives os dados de alteração da nova instancia..
            </summary>
            <param name="from">Instancia com os dados que serão copiados.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntityList#IgnoreRemovedItem(Colosoft.Business.IEntity)">
            <summary>
            Ignora o item removido da coleção.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.IgnoreRemovedItem(`0)">
            <summary>
            Ignora o item removido da coleção.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#Flush">
            <summary>
            Libera.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#ResetAllUids">
            <summary>
            Reseta os identificadores da instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#GetOriginal">
            <summary>
            Recupera a instancia original.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#CopyFrom(Colosoft.Business.IEntity)">
            <summary>
            Copia os dados da entidade informada para a instancia,
            inclusives os dados de alteração da nova instancia..
            </summary>
            <param name="fromEntity">Instancia com os dados que serão copiados.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Validate">
            <summary>
            Valida os dados da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Validate(Colosoft.Validation.ValidationResult@)">
            <summary>
            Valida os dados da intancia.
            </summary>
            <param name="validationResult">Resultado da validação.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#Validate(System.String[])">
            <summary>
            Valida as propriedades informadas.
            </summary>
            <param name="propertyNames">Nomes das propriedades que serão validadas.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Lock(System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Bloqueia a inatância(não aplicável a lista).
            </summary>
            <param name="token">token que irá bloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Lock">
            <summary>
            Bloqueia a inatância(não aplicável a lista).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Lock(Colosoft.Lock.LockSession)">
            <summary>
            Realiza o lock da instancia.
            </summary>
            <param name="session">Instancia da sessão que deverá ser utilizada para o lock.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.UnLock(System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Desbloqueia a inatância(não aplicável a lista).
            </summary>
            <param name="token">token que irá desbloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.UnLock">
            <summary>
            Desbloqueia a inatância(não aplicável a lista).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.UnLock(System.String,System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Desbloqueia a inatância(não aplicável a lista).
            </summary>
            <param name="groupSession"></param>
            <param name="token">token que irá desbloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.UnLock(System.String)">
            <summary>
            Desbloqueia a inatância(não aplicável a lista).
            </summary>
            <param name="groupSession"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.System#ComponentModel#IChangeTracking#AcceptChanges">
            <summary>
            Confirma as alterações da instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.AcceptChangesInternal">
            <summary>
            Confirma as alterações da instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
            <summary>
            Reseta o estado da instancia rejeitando as modificações.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IClearableChangedTracking#ClearChanges">
            <summary>
            Limpa as alterações da instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IClearableChangedTracking#IgnoreChanges(System.String[])">
            <summary>
            Ignora as alterações das propriedades informadas.
            </summary>
            <param name="propertyNames"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.BeginEdit">
            <summary>
            Inicia a edição da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CancelEdit">
            <summary>
            Discarta as alterações desde o último System.ComponentModel.IEditableObject.BeginEdit()
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.EndEdit">
            <summary>
            Empurra as modificações desde o último System.ComponentModel.IEditableObject.BeginEdit()
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.BeginInit">
            <summary>
            Sinaliza para o objeto que a initialização está començando.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.EndInit">
            <summary>
            Sinaliza que a inicialização foi completada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#ILoadable#CreateLoadHandle">
            <summary>
            Cria o manipulador para carga.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Clone">
            <summary>
            Clona a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CloneControls(Colosoft.Business.BaseEntityList{`0})">
            <summary>
            Clona os dados de controle para a instancia informada.
            </summary>
            <param name="to"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.GetNewItems">
            <summary>
            Recupera os novos items registrados na lista.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.GetRemovedItems">
            <summary>
            Recupera os itens removidos da lista.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.GetChangedItems">
            <summary>
            Recupera os itens que sofreram alterações.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.GetEnumerator">
            <summary>
            Recupera o enumerador dos itens da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RemoveAt(System.Int32)">
            <summary>
            Remove o item no indice informado.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Add(`0)">
            <summary>
            Adiciona um novo item para a lista.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adiciona um faixa de itens para a lista.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.IndexOf(`0)">
            <summary>
            Recupera o indice do item na lista.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Insert(System.Int32,`0)">
            <summary>
            Inserte o item na indice informado.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Clear">
            <summary>
            Limpa os itens da lista.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Contains(`0)">
            <summary>
            Verifica se na lista contem o item informado.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Contains(`0,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Verifica se na coleção possui o item informado.
            </summary>
            <param name="item">Instancia do item que será pesquisado.</param>
            <param name="comparer">Instancia do comparador que será utilizado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copia os itens para a lista.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Remove(`0)">
            <summary>
            Remove o item informado.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CreateReadOnlyPropertyChangingCancelHandler">
            <summary>
            Recupera o manipulador que cancela a velidação de somente leitura
            na alteração de propriedades.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ProcessDeleteOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Delete.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ProcessUpdateOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Update.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ProcessInsertOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Insert.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Save">
            <summary>
            Salva um objeto
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Save(Colosoft.Data.IPersistenceSession)">
            <summary>
            Salva os dados da entidade.
            </summary>
            <param name="session">Sessão onde a operação será realizada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Delete(Colosoft.Data.IPersistenceSession)">
            <summary>
            Apaga os dados da entidade.
            </summary>
            <param name="session">Sessão onde a operação será realizada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CloneToEdit">
            <summary>
            Cria uma instância com a cópia da instância original para edição. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RegisterCloneToEdit(Colosoft.Business.IEntity)">
            <summary>
            Registra na entidade que ela foi clona para edição a partir da instancia informada.
            </summary>
            <param name="cloneFrom">Instancia de origem da entidade.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Adiciona a propriedade para os indices usados na pesquisa.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.AddNew">
            <summary>
            Adiciona um novo item para a lista.
            </summary>
            <returns>Instancia do novo item adicionado.</returns>
            <exception cref="T:System.NotSupportedException">
                System.ComponentModel.IBindingList.AllowNew is false.
            </exception>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Ordena a lista baseado em um System.ComponentModel.PropertyDescriptor e um System.ComponentModel.ListSortDirection
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
            <exception cref="T:System.NotSupportedException">System.ComponentModel.IBindingList.SupportsSorting is false.</exception>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Recupera o indice da linha que possue a propriedade informada.
            </summary>
            <param name="property"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Remove o indice usado para a pesquisa.
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RemoveSort">
            <summary>
            Remove a ordenação aplicada pelo método System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
            </summary>
            <exception cref="T:System.NotSupportedException">System.ComponentModel.IBindingList.SupportsSorting is false.</exception>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IConnectedEntity#Connect(Colosoft.Query.ISourceContext)">
            <summary>
            Conecta a entidade com a origem de dados informada.
            </summary>
            <param name="sourceContext"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IConnectedEntity#Disconnect">
            <summary>
            Desconecta a entidade do contexto da origem dos dados.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#ILoadableEntity#NotifyLoaded">
            <summary>
            Notifica que a entidade foi carregada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntityInstanceRegister#Register(Colosoft.Business.IEntityInstanceGetter)">
            <summary>
            Registra a instancia da entidade.
            </summary>
            <param name="instanceGetter">Instancia responsável por recuperar o Instance.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Collections#INotifyCollectionChangedObserverContainer#AddObserver(Colosoft.Collections.INotifyCollectionChangedObserver,Colosoft.Collections.NotifyCollectionChangedObserverLiveScope)">
            <summary>
            Adiciona um observer para a instancia.
            </summary>
            <param name="observer"></param>
            <param name="liveScope"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Collections#INotifyCollectionChangedObserverContainer#RemoveObserver(Colosoft.Collections.INotifyCollectionChangedObserver)">
            <summary>
            Remove o observer da coleção.
            </summary>
            <param name="observer"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Collections#INotifyCollectionChangedDispatcher#AddCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler,Colosoft.Collections.NotifyCollectionChangedDispatcherPriority)">
            <summary>
            Adiciona o evento que será acionado quando a coleção for alterada.
            </summary>
            <param name="eventHandler"></param>
            <param name="priority"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Collections#INotifyCollectionChangedDispatcher#RemoveCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventHandler)">
            <summary>
            Remove o evento registrado para ser acionado quando a coleção for alterada.
            </summary>
            <param name="eventHandler"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IDeleteOperationsContainer#ProcessDeleteOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Delete.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#ISaveOperationsContainer#ProcessUpdateOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Update.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#ISaveOperationsContainer#ProcessInsertOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Insert.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntitySavePersistenceSessionObserver#Register(Colosoft.Data.IPersistenceSession)">
            <summary>
            Registra a sessão de persistencia para a instancia.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Recupera o Schema de serialização.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê os dados serializados.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados da instancia no "Writer" informado.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RemoveAllIndexes">
            <summary>
            Remove todos os indices.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.RemoveIndex(System.String,Colosoft.Collections.ObservableCollectionIndexType)">
            <summary>
            Remove o indice.
            </summary>
            <param name="propertyName"></param>
            <param name="indexType"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ResetIndex(System.String,Colosoft.Collections.ObservableCollectionIndexType)">
            <summary>
            Reseta o indice.
            </summary>
            <param name="propertyName">Nome da propriedade do indice.</param>
            <param name="indexType">Tipo do indice.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CreateIndex``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Colosoft.Collections.ObservableCollectionIndexType)">
            <summary>
            Cria o indice para a propriedade informada.
            </summary>
            <typeparam name="PropertyType"></typeparam>
            <param name="type"></param>
            <param name="property"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.CreateIndex``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Colosoft.Collections.ObservableCollectionIndexType,System.Collections.Generic.IComparer{``0})">
            <summary>
            Cria o indice para a propriedade informada.
            </summary>
            <typeparam name="PropertyType"></typeparam>
            <param name="type"></param>
            <param name="property"></param>
            <param name="comparer"></param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ContainsIndex(System.String,Colosoft.Collections.ObservableCollectionIndexType)">
            <summary>
            Verifica se contém um indice para a propriedade informada.
            </summary>
            <param name="propertyName">Nome da propriedade do indice.</param>
            <param name="indexType">Tipo de indice.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Search(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            Realiza a pesquisa usando o indice com a chave informada.
            </summary>
            <param name="property">Propriedade indexada.</param>
            <param name="key">Chave que será pesquisa.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Search(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Colosoft.Collections.ObservableCollectionIndexType,System.Object)">
            <summary>
            Realiza a pesquisa usando o indice com a chave informada.
            </summary>
            <param name="property">Propriedade indexada.</param>
            <param name="indexType"></param>
            <param name="key">Chave que será pesquisa.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Colosoft#Collections#IIndexedObservableCollection#Search(System.String,Colosoft.Collections.ObservableCollectionIndexType,System.Object)">
            <summary>
            Realiza uma pesquisa no
            </summary>
            <param name="propertyName"></param>
            <param name="indexType"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.Search2(System.String,Colosoft.Collections.ObservableCollectionIndexType,System.Object)">
            <summary>
            Realiza a pesquisa no indice associado com o nome da propriedade.
            </summary>
            <param name="propertyName"></param>
            <param name="indexType"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsOwnerDefined">
            <summary>
            Identifica se owner foi definido.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.AcceptedChanges">
            <summary>
            Evento chamado ao terminar atualizações.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.CollectionChanging">
            <summary>
            Evento acionado quando a lista está sendo alterada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.Changed">
            <summary>
            Evento acionado quando a entidade sofre alguma alteração.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.Loaded">
            <summary>
            Evento acionado quando a entidade for carregada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.CollectionChanged">
            <summary>
            Evento acionado quando a coleção for alterada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.PropertyChanging">
            <summary>
            Evento acionado quando uma propriedade estiver sendo alterada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.PropertyChanged">
            <summary>
            Evento acionado quando uma propriedade for alterada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.ItemPropertyChanged">
            <summary>
            Evento acionado quando a propriedade de um dos itens de coleção
            for alterada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.Saved">
            <summary>
            Evento acionado quando a entidade for salva.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.Saving">
            <summary>
            Evento acionado quando a entidade estiver sendo salva.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.Deleting">
            <summary>
            Evento acionado quando a entidade estiver sendo apagada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.Deleted">
            <summary>
            Evento acionado quando a entidade for apagada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.EntityTypeName">
            <summary>
            Nome que representa o tipo da entidade
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsDisposed">
            <summary>
            Identifica se a instancia foi liberada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsLoaded">
            <summary>
            Identifica se a entidade foi carregada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsThreadSafe">
            <summary>
            Identifica se a instancia está em modo de ThreadSafe.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#IsInstanceInicialized">
            <summary>
            Identifica se a instancia original foi inicializada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#Instance">
            <summary>
            Instancia original da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Instance">
            <summary>
            Instancia original da lista.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.TypeManager">
            <summary>
            Gerenciador dos tipos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.ExistsInnerList">
            <summary>
            Verifica se a lista interna existe.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.InnerList">
            <summary>
            Recupera a instancia da lista interna.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Item(System.Int32)">
            <summary>
            Recupera e define o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.UIContext">
            <summary>
            Contexto visual associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsInitializing">
            <summary>
            Identifica se a entidade está sendo inicializada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Count">
            <summary>
            Quantidade de itens na lista.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Uid">
            <summary>
            Identificador unico da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.FindName">
            <summary>
            Nome unico da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.HasUid">
            <summary>
            Identifica que a instancia não possui o identificador unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.HasFindName">
            <summary>
            Identifica que a instancia não possui o nome unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.MyList">
            <summary>
            Instancia da lista associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.RowVersion">
            <summary>
            Versão da instância.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.ModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Owner">
            <summary>
            Entidade dona da lista.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.CloneFrom">
            <summary>
            Instância a partir da qual q instância atual foi clonada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.EntityTypeOfListHasUid">
            <summary>
            Identifica se o tipo da entidade da lista possui Uid.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.LoadItems">
            <summary>
            Instancia usada para carregar o itens de forma tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.ParentUidSetter">
            <summary>
            Action usada para define o identificador do pai para o item da lista.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.ExistsInStorage">
            <summary>
            Identifica se a instancia já existe na fonte de armazenamento.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsLazyLoadState">
            <summary>
            Identifica se a lista está em estado de carga tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.SourceContext">
            <summary>
            Instancia do contexto da origem dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntityList#Item(System.Int32)">
            <summary>
            Recupera e define o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsEditing">
            <summary>
            Identifica se a entidade está sendo editada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#Loader">
            <summary>
            Loader da instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntity#Observer">
            <summary>
            Não da suporte.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsLocked">
            <summary>
            Veifica se a instância está ou não locada.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsLockedToMe">
            <summary>
            Veifica se a instância está ou não locada.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsLockedToEdit">
            <summary>
            Indica que a instância está locada para edição.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.CanEdit">
            <summary>
            Determina se a instancia da entidade pode ser editada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#INamedType#TypeName">
            <summary>
            Nome do tipo.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#INamedType#InstanceDescriptor">
            <summary>
            Identificador da instância associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsChanged">
            <summary>
            Identifica se a coleção possui alterações.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.RaisesItemChangedEvents">
            <summary>
            Identifica se pode disparar oe ventos de notificação de alteração.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.System#Collections#Generic#IList{TEntity}#Item(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.SyncRoot">
            <summary>
            Instancia do objeto de sincronização.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsSynchronized">
            <summary>
            Identifica se é uma coleção sincronizada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#Threading#IReentrancyController#IsReentrancy">
            <summary>
            Identifica se a instância está o como de entrada ativo.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsReadOnly">
            <summary>
            Identifica se a coleção é somente leitura.
            </summary>
        </member>
        <member name="E:Colosoft.Business.BaseEntityList`1.System#ComponentModel#IBindingList#ListChanged">
            <summary>
            Evento acioando quando a lista sofre alterações.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.AllowEdit">
            <summary>
            Identifica se pode editar os itens da lista.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.AllowNew">
            <summary>
            Identifica se pode adicionar novos itens na lista usando o método System.ComponentModel.IBindingList.AddNew()
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.AllowRemove">
            <summary>
            Identifica se pode remover algum item da lista usando 
            System.Collections.IList.Remove(System.Object) ou System.Collections.IList.RemoveAt(System.Int32).
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.SupportsSorting">
            <summary>
            Identifica se a lista tem suporte para ordenação.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.SortProperty">
            <summary>
            Propriedade usada na ordenação da lista.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.System#ComponentModel#IBindingList#SupportsChangeNotification">
            <summary>
            Identifica se a instancia da suporte para o evento System.ComponentModel.IBindingList.ListChanged
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.IsSorted">
            <summary>
            Identifica se a lista está ordenada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.SortDirection">
            <summary>
            Direção pela qual a lista está ordenada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.SupportsSearching">
            <summary>
            Identifica se a lista possui suporte para pesquisa.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IConnectedEntity#SourceContext">
            <summary>
            Instancia do contexto da origem dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.Colosoft#Business#IEntityInstanceRegister#InstanceGetter">
            <summary>
            Instancia do Getter.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BaseEntityList`1.ItemComparer`1">
            <summary>
            Comparador de items na lista.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ItemComparer`1.Equals(`1,`1)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ItemComparer`1.GetHashCode(`1)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.BaseEntityList`1.EntityMonitor">
            <summary>
            Representa um objeto qe controla a carga
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.EntityMonitor.#ctor(Colosoft.Business.BaseEntityList{`0})">
            <summary>
            Construtor com inicialialização da entidade
            </summary>
            <param name="list">entidade que será carregada</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.EntityMonitor.Dispose(System.Boolean)">
            <summary>
            Controle de finalização na carga da instância
            </summary>
            <param name="disposing">Informa se deve ou não atribuir o objeto instance da instancia</param>
        </member>
        <member name="T:Colosoft.Business.BaseEntityList`1.ItemEntityInstanceGetter">
            <summary>
            Implementação do recupera do instancia para um item da lista.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityInstanceGetter">
            <summary>
            Assinatura das classe usada pare recupera o Instance para uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityInstanceGetter.GetInstance">
            <summary>
            Recupera o instancia da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityInstanceGetter.IsValid">
            <summary>
            Identifica se a instância é valida.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ItemEntityInstanceGetter.#ctor(Colosoft.Business.BaseEntityList{`0},Colosoft.Business.IEntity)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="list">Instancia da lista</param>
            <param name="item">Item associado.</param>
        </member>
        <member name="M:Colosoft.Business.BaseEntityList`1.ItemEntityInstanceGetter.GetInstance">
            <summary>
            Recupera o instancia da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.ItemEntityInstanceGetter.IsValid">
            <summary>
            Identifica se a instância é valida.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BaseEntityList`1.ItemEntityInstanceGetter.Item">
            <summary>
            Instancia do item associado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BusinessEntityDescriptor">
            <summary>
            Implementação do descritor de uma entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IBindableEntityDescriptor">
            <summary>
            Assinatura de um descritor de entidade que suporte 
            anexa dados extras.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IBindableEntityDescriptor.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode)">
            <summary>
            Realiza os bind dos dados do registro informado.
            </summary>
            <param name="record">Registro contendo os dados.</param>
            <param name="mode">Modo da estratégia do Bind.</param>
            <returns>Relação das propriedades alteradas.</returns>
        </member>
        <member name="T:Colosoft.Business.IEntityRecordObserver">
            <summary>
            Assinatura da classe de entidade que da suporte para
            o observer de registro.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityRecordObserver.RegisterObserver(Colosoft.Query.RecordKey)">
            <summary>
            Registra o observer para o registro.
            </summary>
            <param name="recordKey">Chave do registro que será observado.</param>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityDescriptor._recordObserver">
            <summary>
            Instancia do observer do registro associado com a instancia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityDescriptor._entityLoader">
            <summary>
            Loader da entidade associada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.#ctor(Colosoft.Business.CreateEntityDescriptorArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.UnregisterRecordObserver">
            <summary>
            Remove o registro do observer do registro associado com a entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.OnUpdateField(System.String,System.Object)">
            <summary>
            Método acionado quando o valor do campo for atualizado.
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.CreateRecordObserver">
            <summary>
            Método usado para criar o observer do registro.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Update(System.String,System.Object)">
            <summary>
            Adiciona um campo para a instancia.
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.ConfigureStatusControl(System.Boolean,System.Boolean)">
            <summary>
            Configura o controle de status associado.
            </summary>
            <param name="isActive">Identifica se os dados estão ativos.</param>
            <param name="isExpired">Identifica se os dados foram expirados.</param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Equals(Colosoft.Query.RecordKey)">
            <summary>
            Compara a instancia com a chave do registro informada.
            </summary>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Equals(Colosoft.Query.RecordKey,Colosoft.Query.RecordKeyComparisonType)">
            <summary>
            Verifica se a instancia possui dados iguais a chave
            de registro informada.
            </summary>
            <param name="recordKey">Instancia da chave que será comparada.</param>
            <param name="comparisonType">Tipo de comparação que será realizada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Colosoft#Business#IEntityRecordObserver#RegisterObserver(Colosoft.Query.RecordKey)">
            <summary>
            Registra a instancia para ser observada.
            </summary>
            <param name="recordKey">Chave do registro que representa a instancia.</param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode)">
            <summary>
            Vincula os dados adicionais.
            </summary>
            <param name="record"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Equals(System.Object)">
            <summary>
            Verifica se as instâncias são iguais.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.GetHashCode">
            <summary>
            Recupera o código Hash da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Equals(Colosoft.IEntityDescriptor)">
            <summary>
            Verifica se as instâncias são iguais.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Colosoft#IEntityDescriptorStateble#Contains(System.String)">
            <summary>
            Verifica se na instancia existe o campo com o nome informado.
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Colosoft#IEntityDescriptorStateble#GetFields">
            <summary>
            Recupera a relação dos nomes dos campos associados.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Colosoft#IEntityDescriptorStateble#Update(System.String,System.Object)">
            <summary>
            Adiciona um campo para a instancia.
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.Colosoft#IEntityDescriptorStateble#Remove(System.String)">
            <summary>
            Remove o campo da instancia.
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.Id">
            <summary>
            Identificador da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.Name">
            <summary>
            Nome da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.Description">
            <summary>
            Descrição da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.IsActive">
            <summary>
            Identifica se a instancia está ativa.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.IsExpired">
            <summary>
            Identifica se a instancia está expirada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.RecordKey">
            <summary>
            Representa o chave da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.ModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.Colosoft#IEntityDescriptorStateble#FieldsCount">
            <summary>
            Quantidades de campos associados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.Colosoft#IEntityDescriptorStateble#Item(System.String)">
            <summary>
            Recupera o valor do campos associado com o nome informado.
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.BusinessEntityDescriptor.EntityDescriptorRecordObserver">
            <summary>
            Implementação o observer do registro associado com o descritor da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.EntityDescriptorRecordObserver.#ctor(Colosoft.Business.BusinessEntityDescriptor)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityDescriptor"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityDescriptor.EntityDescriptorRecordObserver.OnChanged(Colosoft.Query.IRecord)">
            <summary>
            Método usado para notificar que o registro foi alterado.
            </summary>
            <param name="record"></param>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityDescriptor.EntityDescriptorRecordObserver.Uid">
            <summary>
            Identificador unico do observer.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BusinessEntityPropertyState">
            <summary>
            Contrato para tipos que conterão informações das propriedades
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._validation">
            <summary>
            Lista de validações
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._otherAttributes">
            <summary>
            Outros atributos da propriedade
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._propertyName">
            <summary>
            Nome da propriedade
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._label">
            <summary>
            Label da propriedade
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._indexedValues">
            <summary>
            Sequência de valores indexados
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._checkDigits">
            <summary>
            Validação de dígitos verificadores.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._defaultValue">
            <summary>
            Validação de valor padrão.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._length">
            <summary>
            Validação de tamanho.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._mask">
            <summary>
            Máscara da propriedade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._validChars">
            <summary>
            Validação de caracteres válidos.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._values">
            <summary>
            Lista de valores.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._copyValue">
            <summary>
            Indicador de necessidade da cópia da propriedade na cópia da instância pai.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._range">
            <summary>
            Validação de faixa.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._reloadSettings">
            <summary>
            Indica a necessidade de recarga das propriedades.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._identifier">
            <summary>
            Identificador da configuração.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._options">
            <summary>
            Opções de tela da propriedade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._parser">
            <summary>
            Conversor.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._isConfigured">
            <summary>
            Indicador de configuração atualizada.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._customization">
            <summary>
            Customização do inputvalidate.
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessEntityPropertyState._owner">
            <summary>
            Dono da propriedade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.#ctor(Colosoft.Validation.IStateble,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="owner">Dono da propriedade.</param>
            <param name="propertyName">Nome da propriedade</param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.OwnerPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acionado quando uma propriedade for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.ChangeValidatorList(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Notifica uma alteração na lista de validação
            </summary>
            <param name="sender">Lista</param>
            <param name="e">Argumentos</param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.IsEmpty">
            <summary>
            Verifica se o item não tem validações.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.CopyFrom(Colosoft.Validation.IStatebleItem)">
            <summary>
            Copia as informações de outra instância.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityPropertyState.Clone">
            <summary>
            Cria uma cópia do objeto (não copia membros, apenas referências).
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.CharCase">
            <summary>
            Caso de entrada de caracteres.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.PropertyName">
            <summary>
            Nome da propriedade
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Item(System.String)">
            <summary>
            Retorna o atributo desejado
            </summary>
            <param name="attributeName">Nome do atributo</param>
            <returns>Atributo</returns>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Validation">
            <summary>
            Validações da propriedade
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Label">
            <summary>
            Label da propriedade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.IndexedValues">
            <summary>
            Coleção de valores indexados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.CheckDigits">
            <summary>
            Validação de dígitos verificadores.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.DefaultValue">
            <summary>
            Validação de valor padrão.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Length">
            <summary>
            Validação de tamanho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Mask">
            <summary>
            Máscara aplicada à propriedade
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.ValidChars">
            <summary>
            Validação de caracteres válidos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Values">
            <summary>
            Lista de valores.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.CopyValue">
            <summary>
            Se o valor será copiado ao se copiar o ítem.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Range">
            <summary>
            Validação de faixa.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.ReloadSettings">
            <summary>
            Indica que as propriedades devem ser recarregadas.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Identifier">
            <summary>
            Identificador da configuração.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Options">
            <summary>
            Opções de tela da propriedade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Parser">
            <summary>
            Conversor.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.IsConfigured">
            <summary>
            Indica se foi ou não configurado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.IsReadOnly">
            <summary>
            Identifica se o item é somente leitura.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.IsEnabled">
            <summary>
            Indica se o item está habilitado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.IsSorted">
            <summary>
            Indica se a lista de valores do item deve ser ordenada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.IsRequired">
            <summary>
            Indica se o item tem preenchimento válido obrigatório.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.IsNecessary">
            <summary>
            Indica se o item é obrigatório.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.IsHidden">
            <summary>
            Indica que o item deve estar oculto.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Customization">
            <summary>
            Customização.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Visibility">
            <summary>
            Opções de visibilidade do item.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityPropertyState.Owner">
            <summary>
            Dono da propriedade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BusinessEntityType">
            <summary>
            Representa um tipo de entidade do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityType.#ctor(System.String,Colosoft.Business.BusinessEntityTypeVersion[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="fullName"></param>
            <param name="versions"></param>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityType.FullName">
            <summary>
            Nome da entidade
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityType.Versions">
            <summary>
            Versões do tipo.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BusinessEntityTypeLoader">
            <summary>
            
            </summary>
        </member>
        <member name="T:Colosoft.Business.IBusinessEntityTypeLoader">
            <summary>
            Assinatura da classe responsável por carregar os tipos de entidades de negócio.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IBusinessEntityTypeLoader.GetEntityTypes">
            <summary>
            Recupera os tipos de entidades.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeLoader.GetEntityTypes">
            <summary>
            Recupera os tipos de entidades.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.BusinessEntityTypeManager">
            <summary>
            Implementação padrão do gerenciador dos tipos de entitidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityTypeManager">
            <summary>
            Assinatura da classe responsável por gerenciar os tipos de entidades.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityTypeManager.GetTypeVersion(Colosoft.Reflection.TypeName)">
            <summary>
            Tenta recupera os dados da versão do tipo da entidade com base
            no tipo informado.
            </summary>
            <param name="typeName">Tipo que será pesquisado.</param>
            <returns>Versão do tipo da entidade correspondente ou null.</returns>
        </member>
        <member name="M:Colosoft.Business.IEntityTypeManager.GetTypeProperties(Colosoft.Reflection.TypeName,System.String)">
            <summary>
            Tenta recupera as propriedade da versão do tipo da entidade com base no tipo informado.
            </summary>
            <param name="typeName">Tipo da versão da entidade.</param>
            <param name="uiContext">Nome do contexto visual usado para filtrar os dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityTypeManager.HasUid(System.Type)">
            <summary>
            Verifica se o tipo da entidade possui um identificador unico.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityTypeManager.HasKeys(System.Type)">
            <summary>
            Verifica se o tipo informado possui chaves.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityTypeManager.GenerateInstanceUid(System.Type)">
            <summary>
            Gera um novo identificador unico para uma instancia do tipo informado.
            </summary>
            <param name="type">Tipo da entidade de dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityTypeManager.GetLoader(System.Type)">
            <summary>
            Recupera o loader para o tipo informado.
            </summary>
            <param name="type">Tipo da entidade de dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.#ctor(Colosoft.Business.IBusinessEntityTypeLoader)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="loader">Tipos das entidades que são trabalhadas no sistema.</param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.Initialize(System.Collections.Generic.IEnumerable{Colosoft.Business.BusinessEntityType})">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.CreateTypeVersionKey(Colosoft.Business.BusinessEntityTypeVersion)">
            <summary>
            Cria uma chave para identificar a versão do tipo.
            </summary>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.CreateTypeVersionKey(Colosoft.Reflection.TypeName)">
            <summary>
            Cria uma chave para identificar a versão do tipo.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.GetTypeVersion(Colosoft.Reflection.TypeName)">
            <summary>
            Tenta recupera os dados da versão do tipo da entidade com base
            no tipo informado.
            </summary>
            <param name="typeName">Tipo que será pesquisado.</param>
            <returns>Versão do tipo da entidade correspondente ou null.</returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.GetTypeProperties(Colosoft.Reflection.TypeName,System.String)">
            <summary>
            Tenta recupera as propriedade da versão do tipo da entidade com base no tipo informado.
            </summary>
            <param name="typeName">Tipo da versão da entidade.</param>
            <param name="uiContext">Nome do contexto visual usado para filtrar os dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.HasUid(System.Type)">
            <summary>
            Verifica se o tipo da entidade possui um identificador unico.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.HasKeys(System.Type)">
            <summary>
            Verifica se o tipo informado possui chaves.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.GenerateInstanceUid(System.Type)">
            <summary>
            Gera um novo identificador unico para uma instancia do tipo informado.
            </summary>
            <param name="type">Tipo da entidade de dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.TryGetLoader(System.Type,Colosoft.Business.IEntityLoader@)">
            <summary>
            Recupera o loader para o tipo informado.
            </summary>
            <param name="type"></param>
            <param name="loader"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeManager.GetLoader(System.Type)">
            <summary>
            Recupera o loader para o tipo informado.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.BusinessEntityTypeVersion">
            <summary>
            Representa a versão do tipo da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeVersion.#ctor(System.String,System.String,System.String,System.String,System.DateTime,Colosoft.Business.BusinessEntityTypeVersionProperty[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeName"></param>
            <param name="typeNamespace"></param>
            <param name="typeAssembly"></param>
            <param name="description"></param>
            <param name="startDate"></param>
            <param name="properties"></param>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityTypeVersion.TypeName">
            <summary>
            Nome do tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityTypeVersion.TypeNamespace">
            <summary>
            Namespace do tipo
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityTypeVersion.TypeAssembly">
            <summary>
            Assembly do tipo.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityTypeVersion.Description">
            <summary>
            Descrição da versão.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityTypeVersion.StartDate">
            <summary>
            Data de inicio da versão.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityTypeVersion.Properties">
            <summary>
            Propriedades associadas com a entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BusinessEntityTypeVersionProperty">
            <summary>
            Armazena os dados da propriedade de um tipo de entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessEntityTypeVersionProperty.#ctor(System.String,Colosoft.Business.PropertyUIConfiguration[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="fullName"></param>
            <param name="uiConfigurations"></param>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityTypeVersionProperty.FullName">
            <summary>
            Nome da propriedade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessEntityTypeVersionProperty.UIConfigurations">
            <summary>
            Configurações visuais da propriedade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BusinessException">
            <summary>
            Representa um exception de uma operação de negócio.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessException.#ctor(Colosoft.IMessageFormattable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message">Instancia da mensagem formatável.</param>
        </member>
        <member name="M:Colosoft.Business.BusinessException.#ctor(Colosoft.IMessageFormattable,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message">Instancia da mensagem formatável.</param>
            <param name="innerException"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor de deserialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Colosoft.Business.SaveResultException">
            <summary>
            Representa uma exception da operação de save.
            </summary>
        </member>
        <member name="M:Colosoft.Business.SaveResultException.#ctor(Colosoft.Business.SaveResult)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Business.SaveResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor de deserialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Colosoft.Business.SaveResultException.Result">
            <summary>
            Resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.DeleteResultException">
            <summary>
            Representa uma exception da operação de delete.
            </summary>
        </member>
        <member name="M:Colosoft.Business.DeleteResultException.#ctor(Colosoft.Business.DeleteResult)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Business.DeleteResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor de deserialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Colosoft.Business.DeleteResultException.Result">
            <summary>
            Resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.OperationResultException">
            <summary>
            Repreesnta uma exceção do resultado de uma operação.
            </summary>
        </member>
        <member name="M:Colosoft.Business.OperationResultException.#ctor(Colosoft.Business.OperationResult)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Business.OperationResultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor de deserialização.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Colosoft.Business.OperationResultException.Result">
            <summary>
            Resultado.
            </summary>
        </member>
        <member name="T:Colosoft.BusinessExtentions">
            <summary>
            Classe com os métodos de extenção de negócio.
            </summary>
        </member>
        <member name="M:Colosoft.BusinessExtentions.Create``1(Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma entidade do tipo TEntity e a conecta ao contexto da origem dos dados.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="sourceContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.GetOwner``1(Colosoft.Business.IEntity)">
            <summary>
            Recupera o pai do tipo informado.
            </summary>
            <typeparam name="TOwner"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ToDeleteResult(Colosoft.Data.ExecuteActionsResult)">
            <summary>
            Recupera um resultado de exclusão para o resultado das ações.
            </summary>
            <param name="actionsResult"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ToSaveResult(Colosoft.Data.ExecuteActionsResult)">
            <summary>
            Recupera um resultado de save para o resultado das ações.
            </summary>
            <param name="actionsResult"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.Execute(Colosoft.Business.SaveResult,Colosoft.Data.IPersistenceSession)">
            <summary>
            Executa a sessão de persistencia verificando se o resultado for válido.
            </summary>
            <param name="saveResult"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.Execute(Colosoft.Business.DeleteResult,Colosoft.Data.IPersistenceSession)">
            <summary>
            Executa a sessão de persistencia verificando se o resultado for válido.
            </summary>
            <param name="deleteResult"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.GetImportTypeName(Colosoft.Business.EntityEventType)">
            <summary>
            Recupera o nome do tipo do import associado com o tipo de evento.
            </summary>
            <param name="eventType">Tipo do evento.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.DispatchNotifications(Colosoft.Business.INotificationContainer,Colosoft.Business.DispatchNotificationLevel)">
            <summary>
            Despacha as notificações associadas com a instancia.
            </summary>
            <param name="container"></param>
            <param name="level">Nível no qual as mensagens serão despachadas.</param>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ThrowInvalid(Colosoft.Business.SaveResult)">
            <summary>
            Lança uma exception caso o resultado não seja satisfatório.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ThrowInvalid(Colosoft.Business.DeleteResult)">
            <summary>
            Lança uma exception caso o resultado não seja satisfatório.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ThrowInvalid(Colosoft.Business.OperationResult)">
            <summary>
            Lança uma exception caso o resultado não seja satisfatório.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ExecuteSave``1(Colosoft.Data.IPersistenceContext,``0)">
            <summary>
            Salva os dados da entidade na linha.
            </summary>
            <remarks>Essa operação abre uma sessão de persistencia e executa o save da entidade.</remarks>
            <typeparam name="T">Tipo da entidade que será salva.</typeparam>
            <param name="context"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ExecuteSave(Colosoft.Data.IPersistenceContext,System.Func{Colosoft.Data.IPersistenceSession,Colosoft.Business.SaveResult}[])">
            <summary>
            Executa a sessão na linha.
            </summary>
            <remarks>Essa operação abre uma sessão de persistencia e executa o save da entidade.</remarks>
            <param name="context"></param>
            <param name="items">Referências dos métodos save que deverão ser acionados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ExecuteDelete``1(Colosoft.Data.IPersistenceContext,``0)">
            <summary>
            Apaga os dados da entidade na linha.
            </summary>
            <remarks>Essa operação abre uma sessão de persistencia e executa o delete da entidade.</remarks>
            <typeparam name="T">Tipo da entidade que será salva.</typeparam>
            <param name="context"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.ExecuteDelete(Colosoft.Data.IPersistenceContext,System.Func{Colosoft.Data.IPersistenceSession,Colosoft.Business.DeleteResult}[])">
            <summary>
            Executa a exclusão na linha
            </summary>
            <remarks>Essa operação abre uma sessão de persistencia e executa o save da entidade.</remarks>
            <param name="context"></param>
            <param name="items">Referências dos métodos save que deverão ser acionados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.GetSaveMethod(Colosoft.Business.IEntity)">
            <summary>
            Recupera o método para salvar a entidade. Caso a entidade seja nula retornar um método válido.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.GetDeleteMethod(Colosoft.Business.IEntity)">
            <summary>
            Recupera o método para apagar a entidade. Caso a entidade seja nula retornar um método válido.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.Save(Colosoft.Data.IPersistenceSession,System.Func{Colosoft.Data.IPersistenceSession,Colosoft.Business.SaveResult}[])">
            <summary>
            Executa o save dos itens informados.
            </summary>
            <param name="session"></param>
            <param name="items">Referências dos métodos save que deverão ser acionados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.BusinessExtentions.DeleteItems(Colosoft.Data.IPersistenceSession,System.Func{Colosoft.Data.IPersistenceSession,Colosoft.Business.DeleteResult}[])">
            <summary>
            Executa o delete dos itens informados.
            </summary>
            <param name="session"></param>
            <param name="items">Referências dos métodos save que deverão ser acionados.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.BusinessNamespace">
            <summary>
            Namespace no xml
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessNamespace.Data">
            <summary>
            Namespace definido para o XML
            </summary>
        </member>
        <member name="F:Colosoft.Business.BusinessNamespace.SchemaInstance">
            <summary>
            Namespace do arquivo de schema
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessNamespace.ResolveRolePermissionSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Resolve o esquema da consulta.
            </summary>
            <param name="xs"></param>
        </member>
        <member name="P:Colosoft.Business.BusinessNamespace.BusinessSchema">
            <summary>
            Instancia do esquema da consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BusinessQueryResultChangedObserver`1">
            <summary>
            Implementação do observer para o resultado de consultas de entities.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.BusinessQueryResultChangedObserver`1.#ctor(Colosoft.Business.IEntityLoader,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext,System.String,Colosoft.Reflection.TypeName,System.Collections.IList)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoader">Instancia do loader da entidade associada.</param>
            <param name="entityTypeManager">Instancia do gerenciador dos tipos de entidades.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="typeName">Nome do associado com o observer.</param>
            <param name="collection">Coleção que sera observada.</param>
        </member>
        <member name="M:Colosoft.Business.BusinessQueryResultChangedObserver`1.CreateCollectionItem(Colosoft.Query.IRecord)">
            <summary>
            Método usado para criar um item a partir dos dados do registro.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessQueryResultChangedObserver`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessQueryResultChangedObserver`1.Evaluate(Colosoft.Query.RecordKey)">
            <summary>
            Avalia se a chave do registro é compatível com o observer.
            </summary>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessQueryResultChangedObserver`1.Evaluate(Colosoft.Query.IRecord)">
            <summary>
            Avalia se os dados do registro são compatíveis com o observer.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.BusinessQueryResultChangedObserver`1.OnRecordDeleted(Colosoft.Query.RecordKey)">
            <summary>
            Processa o registro apagado.
            </summary>
            <param name="recordKey"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessQueryResultChangedObserver`1.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.BusinessQueryResultChangedObserver`1.EntityLoader">
            <summary>
            Instancia do loader da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessQueryResultChangedObserver`1.EntityTypeManager">
            <summary>
            Instancia do gerenciador dos tipos de entidades.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessQueryResultChangedObserver`1.SourceContext">
            <summary>
            Contexto de origem.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessQueryResultChangedObserver`1.UIContext">
            <summary>
            Contexto de interface com o usuário.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BusinessQueryResultChangedObserver`1.DataModelTypeName">
            <summary>
            Nome do tipo do modelo de dados do filho.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BusinessValidationManager">
            <summary>
            Implementação básica do gerenciador de validação.
            </summary>
        </member>
        <member name="M:Colosoft.Business.BusinessValidationManager.#ctor(Colosoft.Logging.ILogger)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Colosoft.Business.BusinessValidationManager.CreatePropertyState(Colosoft.Validation.IStateble,System.String,Colosoft.Validation.IPropertySettingsInfo,System.String,System.Globalization.CultureInfo)">
            <summary>
            Cria o estado da propriedade.
            </summary>
            <param name="owner"></param>
            <param name="propertyName"></param>
            <param name="information"></param>
            <param name="uiContext"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.ConditionalLoader">
            <summary>
            Assinatura do método usado para recuperar a condicional para carga da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.ConditionalLoader2">
            <summary>
            Assinatura do método usado para recuperar a condicional para carga da entidade.
            </summary>
            <param name="dataModel"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.ConditionalLoader2`1">
            <summary>
            Assinatura do método usado para recuperar a condicional para carga da entidade.
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="dataModel"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.CreateEntityDescriptorArgs">
            <summary>
            Armazena os argumento usado para criar um <see cref="T:Colosoft.IEntityDescriptor"/>
            </summary>
        </member>
        <member name="M:Colosoft.Business.CreateEntityDescriptorArgs.#ctor(Colosoft.Business.IEntityLoader)">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="P:Colosoft.Business.CreateEntityDescriptorArgs.Loader">
            <summary>
            Loader associado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.DeleteResult">
            <summary>
            Armazena o resultado de uma operação de Delete.
            </summary>
        </member>
        <member name="M:Colosoft.Business.DeleteResult.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.DeleteResult.#ctor(System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="success">Identifica se a operação foi realizada com sucesso.</param>
            <param name="message">Mensagem do resultado.</param>
        </member>
        <member name="M:Colosoft.Business.DeleteResult.op_Implicit(Colosoft.Business.DeleteResult)~System.Boolean">
            <summary>
            Converte implicitamente para um Boolean.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Business.DeleteResult.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema XML do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.DeleteResult.GetSchema">
            <summary>
            Recupera o esquema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.DeleteResult.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê o xml.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Business.DeleteResult.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escreve o xml.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Business.DeleteResult.Success">
            <summary>
            Identifica se a operação foi executada com sucesso.
            </summary>
        </member>
        <member name="P:Colosoft.Business.DeleteResult.Message">
            <summary>
            Mensagem do resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.Entity">
            <summary>
            Representa uma entidade de negócio do sistema
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityXmlSerializable">
            <summary>
            Assinatura das classe que serializa os dados da entidade como Xml.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityXmlSerializable.CanSerialize">
            <summary>
            Identifica se pode serializar os dados.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._myList">
            <summary>
            Lista na qual o objeto está incluído.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._instance">
            <summary>
            Instancia original do objeto
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._entityRecordKey">
            <summary>
            Chave do registro que a instancia representa.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._ignoreIsCloneFromChanged">
            <summary>
            Variável usada para ignorar a notificação
            de que a instancia de origem do clone sofreu
            alguma alteração.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._changedProperties">
            <summary>
            Lista das propriedades que foram alteradas
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._observer">
            <summary>
            Controlador de observadores
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._state">
            <summary>
            Mantém o estado do objeto
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._loader">
            <summary>
            Loader da instancia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._editingTransactionInstance">
            <summary>
            Instancia da transação de edição.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._recordObserver">
            <summary>
            Instancia do observer do registro associado com a instancia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._references">
            <summary>
            Armazena a relação da referencia da entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._isLockedToEdit">
            <summary>
            Indica se a instância está ou não locada.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._lockObject">
            <summary>
            Cache de estado de componente.
            </summary>
        </member>
        <member name="F:Colosoft.Business.Entity._singleChildRemoved">
            <summary>
            Armazena a relação dos filhos singulares que foram removidos.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.#ctor(System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor e inicializador de objetos
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.SetInstance(Colosoft.Business.IEntity,Colosoft.Business.IEntityInstanceGetter)">
            <summary>
            Define o Instance da instancia.
            </summary>
            <param name="instance"></param>
            <param name="instanceGetter"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.NotifyLock(System.Object)">
            <summary>
            Notifica lock.
            </summary>
            <param name="stateInfo"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.NotifyUnLock">
            <summary>
            Notifica remoção do lock.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.CreateState">
            <summary>
            Cria o estado para a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.InitInstance">
            <summary>
            Inicializa a instância base do objeto
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.PropertyChangedEventDispatch(System.String)">
            <summary>
            Dispara os eventos padrão do sistema
            </summary>
            <param name="propertyName">Nome da propriedade</param>
        </member>
        <member name="M:Colosoft.Business.Entity.ChildChanged(System.Object,System.EventArgs)">
            <summary>
            Método acionado toda vez que algum propriedade do filho da entidade for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.LinkChanged(System.Object,System.EventArgs)">
            <summary>
            Método acionado quando a instancia de um link sofrer alteração.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.ResetReference(Colosoft.Business.EntityLoaderReference)">
            <summary>
            Reseta o valor da reference.
            </summary>
            <param name="reference"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.UnregisterList(Colosoft.Collections.IObservableCollection)">
            <summary>
            Remove o registro da lista pai.
            </summary>
            <param name="ownerList"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.MyListCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acionado quanod o coleção associada for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.OnMyListCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acionado quando a lista onde a entidade está inserida for alterad.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.MyListPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acionado quando uma propriedade da lista for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.UnregisterRecordObserver">
            <summary>
            Remove o registro do observer do registro associado com a entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.GetSingleChildRemoved(System.String)">
            <summary>
            Recupera a instancia removida para o filho associado com o nome informado.
            </summary>
            <param name="childName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Connect(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Conecta a entidade de destino a conexão usada na entidade de origem.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.CheckDispose">
            <summary>
            Verifica se a instancia já foi liberada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.UpdateRecordKey">
            <summary>
            Atualiza os dados da chave associada com a entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.OnUidChanged">
            <summary>
            Método acionado quando o identificador único da entidade for alterado.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.OnLoaded">
            <summary>
            Método acionado quando a entidade for carregada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.InitializeReferences(Colosoft.Business.EntityLoaderReferenceContainer)">
            <summary>
            Inicializa as referências as instancia.
            </summary>
            <param name="references"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.InitializeReference(System.String,Colosoft.Business.IEntity)">
            <summary>
            Inicializa a instancia a referência.
            </summary>
            <param name="referenceName">Nome da referencia.</param>
            <param name="entity"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.GetReference``1(System.String,System.Boolean)">
            <summary>
            Recuepra o valor de uma referencia da entidade.
            </summary>
            <typeparam name="TReference"></typeparam>
            <param name="referenceName"></param>
            <param name="isLazy">Identifica se é para carregar em modo lazy.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.ResetReference(System.String)">
            <summary>
            Reseta o valor de uma referencia carregada na entidade.
            </summary>
            <param name="referenceName"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.IsReferenceInitialized(System.String)">
            <summary>
            Verifica se a referencia com o nome informado já foi inicializada.
            </summary>
            <param name="referenceName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.OwnerPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acioando quando alguma propriedade do pai for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.OnChanged">
            <summary>
            Evento acionado quando a entidade sofre alteração.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.OnAcceptChanges">
            <summary>
            Evento chamado ao aceitar atualizações.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Initialize(System.Boolean)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="notify">Identifica se é para notificar a inicialização.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.IgnoreProperty(System.String)">
            <summary>
            Verifica se é para ignorar 
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.IsBaseProperty(System.String)">
            <summary>
            Verifica se a propriedade informada é uma propriedade base da classe.
            </summary>
            <param name="propertyName">Nome da propriedade.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.RaisePropertyChanging(System.String,System.Object)">
            <summary>
            Dispara eventos ocorridas para o inicio de alteração da propriedade
            </summary>
            <param name="propertyName">Nome da propriedade</param>
            <param name="newValue">Valor da prorpiedade</param>
        </member>
        <member name="M:Colosoft.Business.Entity.RaiseStateChanged(System.String)">
            <summary>
            Dispara ou registra as alterações ocorridas para a propriedade de estado
            </summary>
            <param name="propertyName">Nome das propriedades</param>
        </member>
        <member name="M:Colosoft.Business.Entity.AddChangedProperties(System.String[])">
            <summary>
            Registra propriedades alteradas.
            </summary>
            <param name="propertyNames"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.RaisePropertyChanged2(System.Boolean,System.String[])">
            <summary>
            Dispara ou registra as alterações ocorridas para as propriedades.
            </summary>
            <param name="addChangedProperties">Identifica se é para adicionar na coleção das propriedades alteradas.</param>
            <param name="propertyNames">Nome das propriedades que foram alteradas.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.RaisePropertyChanged(System.String[])">
            <summary>
            Dispara ou registra as alterações ocorridas para a propriedade
            </summary>
            <param name="propertyNames">Nome das propriedades</param>
        </member>
        <member name="M:Colosoft.Business.Entity.CreateChild``1(System.String)">
            <summary>
            Cria a instancia do filho da entidade.
            </summary>
            <typeparam name="TChild">Tipo do filho.</typeparam>
            <param name="name">Nome do fiho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CreateLink``1(System.String)">
            <summary>
            Cria a instancia do link da entidade.
            </summary>
            <typeparam name="TLink"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.RegisterLink(Colosoft.Business.IEntity)">
            <summary>
            Registra a instancia do link.
            </summary>
            <param name="link"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.UnregisterLink(Colosoft.Business.IEntity)">
            <summary>
            Remove o registro do link da entidade.
            </summary>
            <param name="link"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.RegisterChild(Colosoft.Business.IEntity)">
            <summary>
            Registra a instancia de um filho da entidade.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.RegisterChild(Colosoft.Business.IEntity,System.String)">
            <summary>
            Registra a instancia de um filho da entidade.
            </summary>
            <param name="child">Instancia do filho</param>
            <param name="childName">Nome do filho</param>
        </member>
        <member name="M:Colosoft.Business.Entity.UnregisterChild(Colosoft.Business.IEntity)">
            <summary>
            Remove o registro de uma instancia de um filho da entidade.
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.OnInitialized">
            <summary>
            Método acionado quando a entidade for inicializada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.OnValidating(Colosoft.Validation.ValidationResult@)">
            <summary>
            Método acionado quando a entidade estiver sendo validada.
            </summary>
            <param name="validationResult"></param>
            <returns>Retorna false é a operação for cancelada.</returns>
        </member>
        <member name="M:Colosoft.Business.Entity.OnValidated(Colosoft.Validation.ValidationResult@)">
            <summary>
            Método acioando quando a entidade for validada.
            </summary>
            <param name="validationResult"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.OnSaving">
            <summary>
            Método acionado quando a entidade estiver sendo salva.
            </summary>
            <returns>Retorna false é a operação for cancelada.</returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CheckProperties">
            <summary>
            Verifica as propriedades requeridas ou necssárias.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CheckValue(System.Object)">
            <summary>
            Verifica se o valor está preenchido.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.OnSaved(System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Método acionado quando a entidade for salva.
            </summary>
            <param name="success">Identifica se a entidade foi salva com sucesso.</param>
            <param name="message">Mensagem associada.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.OnDeleting">
            <summary>
            Método acionado quando a entidade estiver sendo apagada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.OnDeleted(System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Método acionado quando a instancia for apagada.
            </summary>
            <param name="success">Identifica se a entidade foi apagada com sucesso.</param>
            <param name="message">Mensagem associada.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.UpdateMyList(System.Boolean)">
            <summary>
            Atualiza a lista vinculada com a instancia.
            </summary>
            <param name="isAcceptChanges">
            Identifica se a atualização está partindo de uma chamada
            que está aceitando as modificações da entidade.
            </param>
        </member>
        <member name="M:Colosoft.Business.Entity.CreateRecordObserver">
            <summary>
            Método usado para criar o observer do registro.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CanValidateReadOnlyOnChanging">
            <summary>
            Verifica se pode validar somente leitura na alteração de propriedades.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.op_Addition(Colosoft.Business.Entity,Colosoft.Business.IEntityObserver)">
            <summary>
            Adiciona um observador ao objeto
            </summary>
            <param name="entity">objeto</param>
            <param name="newObserver">Novo observador</param>
            <returns>objeto com o novo observador</returns>
        </member>
        <member name="M:Colosoft.Business.Entity.op_Subtraction(Colosoft.Business.Entity,Colosoft.Business.IEntityObserver)">
            <summary>
            Remove um observador do objeto
            </summary>
            <param name="entity">objeto</param>
            <param name="removeObserver">observador a ser removido</param>
            <returns>objeto sem o observador</returns>
        </member>
        <member name="M:Colosoft.Business.Entity.BeginInit">
            <summary>
            Sinaliza para o objeto que a initialização está començando.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.EndInit">
            <summary>
            Sinaliza que a inicialização foi completada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.BeginEdit">
            <summary>
            Inicia a edição da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.CancelEdit">
            <summary>
            Discarta as alterações desde o último System.ComponentModel.IEditableObject.BeginEdit()
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.EndEdit">
            <summary>
            Empurra as modificações desde o último System.ComponentModel.IEditableObject.BeginEdit()
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.CreateDescriptor">
            <summary>
            Cria um <see cref="T:Colosoft.IEntityDescriptor"/> da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Equals(Colosoft.Query.RecordKey)">
            <summary>
            Compara a instancia com a chave do registro informada.
            </summary>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Equals(Colosoft.Query.RecordKey,Colosoft.Query.RecordKeyComparisonType)">
            <summary>
            Verifica se a instancia possui dados iguais a chave
            de registro informada.
            </summary>
            <param name="recordKey">Instancia da chave que será comparada.</param>
            <param name="comparisonType">Tipo de comparação que será realizada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Equals(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Compara as duas entidades informadas.
            </summary>
            <param name="objA"></param>
            <param name="objB"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Equals(System.Object)">
            <summary>
            Verifica se um objeto é igual ao outro
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.GetHashCode">
            <summary>
            Recupera o hashcode da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.RejectChanges">
            <summary>
            Reseta o estado da instancia rejeitando as modificações.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Colosoft#Business#IClearableChangedTracking#ClearChanges">
            <summary>
            Limpa as alterações da instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Colosoft#Business#IClearableChangedTracking#IgnoreChanges(System.String[])">
            <summary>
            Ignora as alterações das propriedades informadas.
            </summary>
            <param name="propertyNames"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.AcceptChanges">
            <summary>
            Confirma as alterações da instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Flush">
            <summary>
            Notifica os clientes sobre as alterações
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.GetOriginal">
            <summary>
            Recupera a instancia com os dados originais da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CreateReadOnlyPropertyChangingCancelHandler">
            <summary>
            Recupera o manipulador que cancela a velidação de somente leitura
            na alteração de propriedades.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CreateLoadHandle">
            <summary>
            Cria o objeto que controla a carga do objeto
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CopyFrom(Colosoft.Business.IEntity)">
            <summary>
            Copia os dados da entidade informada para a instancia,
            inclusives os dados de alteração da nova instancia..
            </summary>
            <param name="fromEntity">Instancia com os dados que serão copiados.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.Clone">
            <summary>
            Cria um clone do objeto
            </summary>
            <returns>Objec clonado</returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Save">
            <summary>
            Salva a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Save(Colosoft.Data.IPersistenceSession)">
            <summary>
            Salva os dados da entidade.
            </summary>
            <param name="session">Sessão onde a operação será realizada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Delete(Colosoft.Data.IPersistenceSession)">
            <summary>
            Apaga os dados da entidade.
            </summary>
            <param name="session">Sessão onde a operação será realizada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Validate">
            <summary>
            Valida os dados da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Validate(Colosoft.Validation.ValidationResult@)">
            <summary>
            Valida os dados da intancia.
            </summary>
            <param name="validationResult">Resultado da validação.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.Validate(System.String[])">
            <summary>
            Valida as propriedades informadas.
            </summary>
            <param name="propertyNames">Nomes das propriedades que serão validadas.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Lock(System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Bloqueia a inatância.
            </summary>
            <param name="token">token que irá bloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Lock(Colosoft.Lock.LockSession,System.String,System.String,Colosoft.Lock.LockType,System.Boolean,System.String)">
            <summary>
            Bloqueia a inatância.
            </summary>
            <param name="session">Sessão do lock</param>
            <param name="token">token que irá bloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <param name="lockGroup">Grupo do lock</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CreateLockTransaction(Colosoft.Enums.LockTransactionType,System.String)">
            <summary>
            Cria uma transação de lock.
            </summary>
            <param name="token"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.RegisterLock(System.String,Colosoft.Lock.LockSession,System.String,Colosoft.Lock.LockType,System.Boolean,System.String)">
            <summary>
            Registra um bloqueio.
            </summary>
            <param name="transaction"></param>
            <param name="session"></param>
            <param name="hostName"></param>
            <param name="lockType"></param>
            <param name="mainInLock"></param>
            <param name="lockGroup"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.RegisterUnlock(System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Registra um desbloqueio.
            </summary>
            <param name="transaction"></param>
            <param name="hostName"></param>
            <param name="lockType"></param>
            <param name="mainInLock"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.ProcessLockTransaction(System.String)">
            <summary>
            Processa a transação de lock.
            </summary>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.UnLock(System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <param name="token">token que irá desbloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.UnLock(System.String,System.String,System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <param name="groupSession">sessão do grupo.</param>
            <param name="token">token que irá desbloquear</param>
            <param name="hostName">Nome do host</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Lock(Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Bloqueia a inatância.
            </summary>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.KillLockGroup(System.String)">
            <summary>
            Mata um grupo de lock.
            </summary>
            <param name="lockGroup"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.CheckLockProcess">
            <summary>
            Valida o processo de lock.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Lock">
            <summary>
            Bloqueia a inatância.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Lock(Colosoft.Lock.LockSession)">
            <summary>
            Realiza o lock da instancia.
            </summary>
            <param name="session">Instancia da sessão que deverá ser utilizada para o lock.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Lock(Colosoft.Lock.LockSession,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Realiza o lock da instancia.
            </summary>
            <param name="session">Instancia da sessão que deverá ser utilizada para o lock.</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.UnLock(System.String,Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <param name="groupSession">Sessão do grupo.</param>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.UnLock(Colosoft.Lock.LockType,System.Boolean)">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <param name="lockType">tipo do bloqueio</param>
            <param name="mainInLock">Indica que é a instância principal do lock por exemplo se for um bloqueio de venda não faz sentido eu bloquear para uso o contato do cliente, mas quando o bloqueio é sobre o cliente isso já faz sentido</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.UnLock">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.UnLock(System.String)">
            <summary>
            Desbloqueia a inatância.
            </summary>
            <param name="groupSession">Sessão do grupo.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.CloneToEdit">
            <summary>
            Cria uma instância com a cópia da instância original para edição. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.RegisterCloneToEdit(Colosoft.Business.IEntity)">
            <summary>
            Registra na entidade que ela foi clonada para edição a partir da instancia informada.
            </summary>
            <param name="cloneFrom">Instancia de origem da entidade.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.CloneFromChanged(System.Object,System.EventArgs)">
            <summary>
            Método acionado quando a instancia da origem do clone
            sofrer alguma alteração.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.CloneFromPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acionado quando alguma propriedade da instancia
            de origem do clone sofrer alguma alteração.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.CloneFromAcceptedChanges(System.Object,System.EventArgs)">
            <summary>
            Método acionado quando a instancia da origem do clone receber uma aceito de alterações.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.InitList(Colosoft.Collections.IObservableCollection)">
            <summary>
            Inicializa a lista.
            </summary>
            <param name="ownerList">Lista mãe da entidade</param>
        </member>
        <member name="M:Colosoft.Business.Entity.SetReadOnlyState(System.String,System.Boolean)">
            <summary>
            Define o <see cref="P:Colosoft.Validation.IStatebleItem.IsReadOnly"/> para o valor do parâmetro
            para a propriedade.
            </summary>
            <param name="propertyName">A propriedade a ser alterada.</param>
            <param name="value">O valor a atribuir ao campo IsReadOnly do estado.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.RegisterObserver(Colosoft.Query.RecordKey)">
            <summary>
            Registra o observer para o registro.
            </summary>
            <param name="recordKey">Chave do registro que será observado.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.RemoveStorageControl">
            <summary>
            Remove o controle de armazenamento da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.RemoveAllStorageControl">
            <summary>
            Remove o control de armazenamento da entidade e de seus filhos.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.ResetAllUids">
            <summary>
            Reseta todos os Uids da instancia e das instancias filhas.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Colosoft#Business#IEntityInstanceRegister#Register(Colosoft.Business.IEntityInstanceGetter)">
            <summary>
            Registra a instancia da entidade.
            </summary>
            <param name="instanceGetter">Instancia responsável por recuperar o Instance.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.Equals(Colosoft.Business.IEntity)">
            <summary>
            Verifica se a instancia é igual a instancia informada.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.Colosoft#IRegisterPropertyChanged#RegistrerPropertyChanged(System.String)">
            <summary>
            Registra que a propriedade foi alterada.
            </summary>
            <param name="propertyName">Nome da propriedade.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.Connect(Colosoft.Query.ISourceContext)">
            <summary>
            Conecta a entidade com a origem de dados informada.
            </summary>
            <param name="sourceContext"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.Colosoft#Business#IConnectedEntity#Connect(Colosoft.Query.ISourceContext)">
            <summary>
            Conecta a entidade com a origem de dados informada.
            </summary>
            <param name="sourceContext"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.Colosoft#Business#IConnectedEntity#Disconnect">
            <summary>
            Desconecta a entidade do contexto da origem dos dados.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.Colosoft#Business#ILoadableEntity#NotifyLoaded">
            <summary>
            Notifica que a entidade foi carregada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Recupera o esquema a entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Recupera os dados serializados da entidade.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados da instancia no "Writer" informado.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="E:Colosoft.Business.Entity.AcceptedChanges">
            <summary>
            Evento chamado ao terminar atualizações.
            </summary>
        </member>
        <member name="E:Colosoft.Business.Entity.Changed">
            <summary>
            Evento acionado quando a entidade sofre alguma alteração.
            </summary>
        </member>
        <member name="E:Colosoft.Business.Entity.Loaded">
            <summary>
            Evento acionado quando a entidade for carregada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.Entity.PropertyChanging">
            <summary>
            Evento acionado ao iniciar a alteração de uma propriedade
            </summary>
        </member>
        <member name="E:Colosoft.Business.Entity.PropertyChanged">
            <summary>
            Evento acionado após a alteração de uma propriedade
            </summary>
        </member>
        <member name="E:Colosoft.Business.Entity.Saved">
            <summary>
            Evento acionado quando a entidade for salva.
            </summary>
        </member>
        <member name="E:Colosoft.Business.Entity.Saving">
            <summary>
            Evento acionado quando a entidade estiver sendo salva.
            </summary>
        </member>
        <member name="E:Colosoft.Business.Entity.Colosoft#Business#IEntityPersistence#Deleting">
            <summary>
            Evento acionado quando a entidade estiver sendo apagada.
            </summary>
        </member>
        <member name="E:Colosoft.Business.Entity.Colosoft#Business#IEntityPersistence#Deleted">
            <summary>
            Evento acionado quando a entidade for apagada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.TypeDescriptorPropertiesFilter">
            <summary>
            Filtro usado para determinar as propriedades que serão recuperadas
            pelo TypeDescriptor.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.EntityTypeName">
            <summary>
            Recupera o nome do tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsInitInstance">
            <summary>
            Identifica se a entidade suporta inicialização da instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsDisposed">
            <summary>
            Identifica se a instancia foi liberada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.RowVersion">
            <summary>
            Versão da instância.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsCloneFromChanged">
            <summary>
            Identifica se houve alguma alteração na origem do clone em relação 
            aos dados da entidade, ou seja, se alterei os dados originais
            depois que o clone foi realizado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsChangedAfterCloneToEdit">
            <summary>
            Identifica se a instancia foi alterada após o clone para edição.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsInitializing">
            <summary>
            Identifica se a entidade está sendo inicializada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.CloneFrom">
            <summary>
            Instância a partir da qual q instância atual foi clonada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.TypeManager">
            <summary>
            Gerenciador dos tipos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.ChangedProperties">
            <summary>
            Lista de propriedades alteradas
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Observer">
            <summary>
            Objeto que controla os objetos que observam as alterações
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsChanged">
            <summary>
            Informa se houve ou não alteração na instância
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Uid">
            <summary>
            Identificador unico da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.FindName">
            <summary>
            Nome que identifica a instância
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.HasUid">
            <summary>
            Identifica se a entidade possui um identificador único.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.HasFindName">
            <summary>
            Identifica se a entidade possui um nome único.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsEditing">
            <summary>
            Identifica se a entidade está sendo editada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsReadOnly">
            <summary>
            Identifica que a instancia é somente leitura.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.CanEdit">
            <summary>
            Determina se a instancia da entidade pode ser editada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.MyList">
            <summary>
            Instancia da lista associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsLocked">
            <summary>
            Veifica se a instância está ou não locada.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.Entity.IsLockedToMe">
            <summary>
            Veifica se a instância está ou não locada.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.Entity.InstanceGetter">
            <summary>
            Instancia do recuperador do Instance.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsInstanceInicialized">
            <summary>
            Identificador se a instancia original do objeto foi inicializada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Instance">
            <summary>
            Instancia original do objeto.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.PropertyUpdates">
            <summary>
            Ações para atualização de campos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Owner">
            <summary>
            Entidade dona da entidade atual.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.ExistsInStorage">
            <summary>
            Identifica se a instancia já existe na fonte de armazenamento.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsLockedToEdit">
            <summary>
            Indica que a instância está locada para edição.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.ModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.InstanceState">
            <summary>
            Estado da instância
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.UIContext">
            <summary>
            Contexto da interface com o usuário
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Loader">
            <summary>
            Loader da instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.IsLoaded">
            <summary>
            Identifica se a instancia recebeu a notificação de que ela foi iniciada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.RaisesItemChangedEvents">
            <summary>
            Identifica se pode disparar oe ventos de notificação de alteração.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Colosoft#INamedType#TypeName">
            <summary>
            Nome do tipo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Colosoft#INamedType#InstanceDescriptor">
            <summary>
            Nome do tipo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Colosoft#Business#IEntityInstanceRegister#InstanceGetter">
            <summary>
            Instancia do Getter.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Colosoft#Business#IConnectedEntity#SourceContext">
            <summary>
            Instancia do contexto da origem dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.CanSerialize">
            <summary>
            Identifica se pode serializa a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.Colosoft#Business#IEntityXmlSerializable#CanSerialize">
            <summary>
            Identifica se pode serializa a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Business.Entity.EntityMonitor">
            <summary>
            Representa um objeto qe controla a carga
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityMonitor.#ctor(Colosoft.Business.IEntity)">
            <summary>
            Construtor com inicialialização da entidade
            </summary>
            <param name="entity">entidade que será carregada</param>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityMonitor.Dispose(System.Boolean)">
            <summary>
            Controle de finalização na carga da instância
            </summary>
            <param name="disposing">Informa se deve ou não atribuir o objeto instance da instancia</param>
        </member>
        <member name="T:Colosoft.Business.Entity.EntityRecordObserver">
            <summary>
            Implementação da classe responsável por observar o registro associado com a entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityRecordObserver.#ctor(Colosoft.Business.Entity)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity">Instancia da entidade associada.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityRecordObserver.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityRecordObserver.OnChanged(Colosoft.Query.IRecord)">
            <summary>
            Notifica que os dados do registro que está sendo observado
            foram alterados.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityRecordObserver.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityRecordObserver.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.EntityRecordObserver.Uid">
            <summary>
            Identificador unico do observer.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.EntityRecordObserver.IsAlive">
            <summary>
            Identifica se a instancia ainda está viva.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.EntityRecordObserver.Owner">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.EntityRecordObserver.DataModel">
            <summary>
            Instancia do modelo de dados associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity.EntityRecordObserver.IsDisposed">
            <summary>
            Identifica se a instancia está liberada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.Entity.EntityInstanceGetter">
            <summary>
            Classe usada pare recupera o Instance para uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityInstanceGetter.#ctor(Colosoft.Business.IEntity,Colosoft.Business.IEntityAccessor)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="owner">Instancia do pai.</param>
            <param name="accessor">Instancia do método usado para recupera o Instance.</param>
        </member>
        <member name="M:Colosoft.Business.Entity.EntityInstanceGetter.GetInstance">
            <summary>
            Recupera o instancia da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.Entity.EntityInstanceGetter.IsValid">
            <summary>
            Identifica se a instância é valida.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityChildEnumerable">
            <summary>
            Implementação do enumerable dos filhos de uma entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.QueryResultEnumerable`1">
            <summary>
            Implementação do enumerador do resultado de uma consulta.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0},Colosoft.Query.IQueryResult,Colosoft.Query.QueryInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerable">Instancia do Enumerable que será adaptada.</param>
            <param name="result">Instancia do resulta associado.</param>
            <param name="info">Informações da consulta.</param>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.GetTypeName">
            <summary>
            Recupera o nome do tipo principal associado com o resultado da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.CreateQueryResultChangedObserver(Colosoft.Reflection.TypeName,System.Collections.IList)">
            <summary>
            Cria o observer para a coleção do resultado da consulta.
            </summary>
            <param name="typeName"></param>
            <param name="collection"></param>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.Register(Colosoft.Collections.INotifyCollectionChangedObserverContainer)">
            <summary>
            Registra os observers no container.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.GetEnumerator">
            <summary>
            Recupera o enumerador associado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador associado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryResultEnumerable`1.Result">
            <summary>
            Instancia do resultado associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryResultEnumerable`1.QueryInfo">
            <summary>
            Recupera as informações da consulta associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryResultEnumerable`1.IsDisposed">
            <summary>
            Identifica se a instancia foi liberada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.QueryResultEnumerable`1.Enumerator">
            <summary>
            Implementação do Enumerator para o resultado.
            </summary>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.Enumerator.#ctor(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerator">Instancia do enumerador adaptado.</param>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.Enumerator.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.Enumerator.MoveNext">
            <summary>
            Move para o próximo item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.QueryResultEnumerable`1.Enumerator.Reset">
            <summary>
            Reseta o enumerador.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryResultEnumerable`1.Enumerator.Current">
            <summary>
            Recupera a atual instancia do enumerador.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryResultEnumerable`1.Enumerator.System#Collections#IEnumerator#Current">
            <summary>
            Recupera a atual instancia do enumerador.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityChildEnumerable.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity},Colosoft.Business.IEntityLoaderChildInfo,Colosoft.Business.IEntityLoader,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerable">Instancia do Enumerable que será adaptada.</param>
            <param name="childInfo"></param>
            <param name="childLoader">Loader da entidade do filho.</param>
            <param name="entityTypeManager">Instancia do gerenciador dos tipos de entidades.</param>
            <param name="sourceContext">Instancia do contexto de origem.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
        </member>
        <member name="M:Colosoft.Business.EntityChildEnumerable.GetTypeName">
            <summary>
            Recupera o nome do tipo.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityChildEnumerable.CreateQueryResultChangedObserver(Colosoft.Reflection.TypeName,System.Collections.IList)">
            <summary>
            Cria o observer para as alterações do resultado da consulta.
            </summary>
            <param name="typeName"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityChildEnumerable.EntityChildQueryResultChangedObserver">
            <summary>
            Implementação do observer da alteração do resultado da consulta.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityChildEnumerable.EntityChildQueryResultChangedObserver.#ctor(Colosoft.Business.IEntityLoaderChildInfo,Colosoft.Business.IEntityLoader,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext,System.String,Colosoft.Reflection.TypeName,System.Collections.IList)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="childInfo"></param>
            <param name="childLoader">Loader da entidade filha.</param>
            <param name="entityTypeManager">Instancia do gerenciador dos tipos e entidade.</param>
            <param name="sourceContext">Instancia do contexto de origem.</param>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="typeName"></param>
            <param name="collection"></param>
        </member>
        <member name="M:Colosoft.Business.EntityChildEnumerable.EntityChildQueryResultChangedObserver.Evaluate(Colosoft.Query.IRecord)">
            <summary>
            Verifica se o registor é compatível com o observer.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityChildEnumerable.EntityChildQueryResultChangedObserver.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityChildEnumerable.EntityChildQueryResultChangedObserver.ChildInfo">
            <summary>
            Informações do filho associado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityChildrenList`1">
            <summary>
            Implementação padrão da interface IEntityChildrenList.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityChildrenList`1">
            <summary>
            Assinatura da coleção genérica dos filhos de uma entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityChildrenList">
            <summary>
            Assinatura de uma coleção de filhos do tipo <see cref="T:Colosoft.Business.IEntity"/> que estão associados com uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityChildrenList.GetNewItems">
            <summary>
            Recupera os novos filhos cadastrados na lista.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityChildrenList.GetRemovedItems">
            <summary>
            Recupera os filhos que foram removidos.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityChildrenList.GetChangedItems">
            <summary>
            Recupera os itens que sofreram alterações.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Colosoft.Business.IEntityChildrenList.ItemPropertyChanged">
            <summary>
            Evento acionado quando a propriedade de um dos itens de coleção
            for alterada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityChildrenList`1.RemoveAt(System.Int32)">
            <summary>
            Remove o item na posição informada.
            </summary>
            <param name="index"></param>
        </member>
        <member name="E:Colosoft.Business.IEntityChildrenList`1.CollectionChanging">
            <summary>
            Evento acionado quando a lista está sendo alterada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityChildrenList`1.Item(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityChildrenList`1.Count">
            <summary>
            Quantidade de registro na lista.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.#ctor(System.String,System.Action{`0},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="uiContext"></param>
            <param name="parentUidSetter">Método usado para definir o identificador unico do pai para as entidades filas da lista.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.String,System.Action{`0},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia já definindos os itens iniciais.
            </summary>
            <param name="items">Itens que serão usados na inicialização.</param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.#ctor(System.Lazy{System.Collections.Generic.IEnumerable{`0}},System.String,System.Action{`0},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia definindo o parametro de carga tardia dos itens.
            </summary>
            <param name="items"></param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.#ctor(System.Func{Colosoft.Business.BaseEntityList{`0},System.Collections.Generic.IEnumerable{`0}},System.String,System.Action{`0},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia a partir dos dados clonados.
            </summary>
            <param name="itemsLoader"></param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.OnInnerListCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acioando quando a coleção interna sofrer alguam alteração.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)">
            <summary>
            Descarta o novo item pendente na coleção.
            </summary>
            <param name="itemIndex">Indice do item adicionado anteriormente na coleção.</param>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)">
            <summary>
            Confirma a inclusão do novo item na coleção.
            </summary>
            <param name="itemIndex">Indice do item adicionado.</param>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.Clone">
            <summary>
            Clona a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.CreateInstance(System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity},System.String,System.Action{Colosoft.Business.IEntity},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria um nova instancia da lista.
            Esse método é usado por reflexão.
            </summary>
            <param name="items"></param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="entityTypeManager"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityChildrenList`1.CreateLazyInstance(System.Lazy{System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity}},System.String,System.Action{Colosoft.Business.IEntity},Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria um nova instancia da lista.
            Esse método é usado por reflexão.
            </summary>
            <param name="items"></param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="entityTypeManager"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityUidComparer">
            <summary>
            Implementação do comparador de entidades pelo Uid.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityUidComparer.Compare(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Compara as instancias.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityUidComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compara as instancia informadas.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityUidComparer.Instance">
            <summary>
            Instancia unica do comparador.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDescriptorQueryResultBindStrategy">
            <summary>
            Classe responsável por fazer o bind dos dados do registro para uma instancia
            do descritor da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.#ctor(Colosoft.Business.IEntityLoader)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoader">Instancia do loader da entidade.</param>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.Merge(System.String[],Colosoft.IEntityDescriptor,Colosoft.Query.IRecord)">
            <summary>
            Recupera as informações dos valores de uma lista de propriedades.
            </summary>
            <param name="properties"></param>
            <param name="entityDescriptor"></param>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.CreateEntityDescriptor">
            <summary>
            Cria uma instancia do descritor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,Colosoft.Query.IRecordKeyFactory,System.Object@)">
            <summary>
            Realiza os bind dos dados do registro informado.
            </summary>
            <param name="record">Registro contendo os dados.</param>
            <param name="mode"></param>
            <param name="recordKeyFactory">Factory responsável pela geração da chave do registro.</param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.CreateSession(Colosoft.Query.Record.RecordDescriptor)">
            <summary>
            Cria uma sessão de estratégia de vinculação para o descritor informado.
            </summary>
            <param name="recordDescriptor">Descritor dos registros para fazer a vinculação.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.Bind(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Realiza o bind dos dados dos registro e retorna as instancia criadas.
            </summary>
            <param name="records"></param>
            <param name="mode"></param>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.Bind``1(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.BindStrategyMode,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Realiza o bind dos dados dos registro e retorna as instancia criadas.
            </summary>
            <param name="records"></param>
            <param name="mode"></param>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,System.Object@)">
            <summary>
            Realiza o bind dos dados do registro para a instancia informada.
            </summary>
            <param name="record">Registro com os dados que serão processados.</param>
            <param name="mode">Mode de vinculação.</param>
            <param name="instance">Instancia que será preenchida.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategy.Bind``1(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,``0@)">
            <summary>
            Executa a vinculação dos dados contidos no registro para o objeto informado.
            </summary>
            <typeparam name="T">Tipo que será usado na operação.</typeparam>
            <param name="record">Registro da consulta.</param>
            <param name="mode">Modo da estratégia.</param>
            <param name="instance">Instancia onde será vinculado os dados.</param>
            <returns>Relação das propriedade na qual o bind foi aplicado.</returns>
        </member>
        <member name="T:Colosoft.Business.EntityDescriptorQueryResultBindStrategySession">
            <summary>
            Implementação da sessão da estratégia de vinculação do EntityDescriptor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategySession.#ctor(Colosoft.Business.EntityDescriptorQueryResultBindStrategy)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="bindStrategy"></param>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultBindStrategySession.Bind(Colosoft.Query.IRecord,Colosoft.Query.BindStrategyMode,System.Object@)">
            <summary>
            Preenche os dados do objeto com o conteudo do registro informado.
            </summary>
            <param name="record"></param>
            <param name="mode"></param>
            <param name="instance"></param>
            <returns>Nomes das propriedade alteradas.</returns>
        </member>
        <member name="T:Colosoft.Business.EntityDescriptorQueryResultChangedObserver">
            <summary>
            Implementção do observer do resultados de consulta associados com um <see cref="T:Colosoft.IEntityDescriptor"/>.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.#ctor(Colosoft.Business.IEntityLoader,Colosoft.Query.ISourceContext,System.Collections.IList)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoader"></param>
            <param name="sourceContext"></param>
            <param name="collection"></param>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.CreateCollectionItem(Colosoft.Query.IRecord)">
            <summary>
            Cria um registro para a coleção com base no registro informado.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.Evaluate(Colosoft.Query.IRecord)">
            <summary>
            Avalia se o registro informado é compatível.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.Evaluate(Colosoft.Query.RecordKey)">
            <summary>
            Avalia se a chave do registro é compatível.
            </summary>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.OnRecordInserted(Colosoft.Query.IRecord)">
            <summary>
            Método acionado quando um registro é criado.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.OnRecordDeleted(Colosoft.Query.RecordKey)">
            <summary>
            Método acionado quando um registro for removido.
            </summary>
            <param name="recordKey"></param>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acionado quando a coleção sore alguma alteração.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.Uid">
            <summary>
            Identificador unicod do observer.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.Collection">
            <summary>
            Instancia da coleção associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.IsAlive">
            <summary>
            Identifica se o observer está vivo.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDescriptorQueryResultChangedObserver.IsDisposed">
            <summary>
            Identifica se a instancia está liberada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDynamicChild">
            <summary>
            Armazena as informações do filho dinamico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChild.Entries">
            <summary>
            Entradas da instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDynamicChildEntry">
            <summary>
            Armazena os dados da entrada de um filho dinamico.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry.#ctor(System.Action{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Func{Colosoft.Data.IModel,System.Int32},System.Reflection.PropertyInfo,Colosoft.Business.EntityLoaderConditional,Colosoft.Query.QueryExecutePredicate)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parentUidSetter">Delegate usado para define o identificador unico do pai.</param>
            <param name="parentUidGetter">Delegate usado para recupera o identificador unico do pai.</param>
            <param name="foreignProperty">Propriedade de associação.</param>
            <param name="conditional">Condicional para ser usado na carga.</param>
            <param name="executePredicate">Predicado para executar a consulta do filho.</param>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry.CreateQuery(System.Int32,Colosoft.Business.IEntityLoader,Colosoft.Data.IModel,Colosoft.Query.ISourceContext)">
            <summary>
            Cria a consulta para recuperar os itens filhos.
            </summary>
            <param name="parentUid">Identificador da entidade pai.</param>
            <param name="parentLoader">Loader do pai.</param>
            <param name="parentDataModel">Instancia com os dados do pai.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry.CreateQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityLoader,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception},Colosoft.Business.EntityLoaderExecuteQueryHandler,Colosoft.Query.SubQueryFailedCallBack)">
            <summary>
            Cria as consulta para recupera os itens filhos.
            </summary>
            <param name="queryable">Consulta do item pai.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="parentLoader">Instancia do loader do pai.</param>
            <param name="entityTypeManager">Instancia do gereciador de tipos da entidade de negócio.</param>
            <param name="exceptions">Fila do erros ocorridos.</param>
            <param name="callBack"></param>
            <param name="failedCallBack"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChildEntry.DataModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChildEntry.EntityType">
            <summary>
            Tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChildEntry.ParentUidSetter">
            <summary>
            Instancia responsável por define para o filho o identificador do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChildEntry.ParentUidGetter">
            <summary>
            Delegate usado para recuperar a chave unica do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChildEntry.Conditional">
            <summary>
            Func usado para carregar a condicional de carga.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChildEntry.ExecutePredicate">
            <summary>
            Predicado que será utilizado para filtrar a execução da consulta do filho.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDynamicChildEntry`4">
            <summary>
            Armazena os dados da entrada do filho dinamico.
            </summary>
            <typeparam name="TParentEntity"></typeparam>
            <typeparam name="TParentModel"></typeparam>
            <typeparam name="TChild"></typeparam>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry`4.#ctor(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{`3,System.Int32}},Colosoft.Business.EntityLoaderConditional,Colosoft.Query.QueryExecutePredicate)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parentPropertyUid"></param>
            <param name="foreignProperty"></param>
            <param name="conditional"></param>
            <param name="executePredicate">Predicado para executar a consulta do filho.</param>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry`4.#ctor(System.String,System.String,Colosoft.Business.EntityLoaderConditional,Colosoft.Query.QueryExecutePredicate)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parentPropertyUidName"></param>
            <param name="foreignPropertyName"></param>
            <param name="conditional"></param>
            <param name="executePredicate">Predicado para executar a consulta do filho.</param>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry`4.GetProperty``1(System.String)">
            <summary>
            Recupera a propriedade do tipo informado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry`4.GetParentUidSetter(System.String)">
            <summary>
            Recupera o método que define o UID do pai para o filho.
            </summary>
            <param name="foreignPropertyName">Nome da propriedade que representa a chave estrangeira.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry`4.GetParentUidSetter(System.Linq.Expressions.Expression{System.Func{`3,System.Int32}})">
            <summary>
            Recupera o método que define a UID do pai para o filho
            </summary>
            <param name="foreignProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry`4.GetParentUidSetter(System.Reflection.PropertyInfo)">
            <summary>
            Recupera o método que define o UID do pai para o filho.
            </summary>
            <param name="foreignProperty">Instancia da propriedade que representa a chave estrangeira.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry`4.GetParentUidGetter(System.String)">
            <summary>
            Recupera o delegate usado para recupera o identificador unico do pai.
            </summary>
            <param name="parentPropertyUidName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildEntry`4.GetParentUidGetter(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}})">
            <summary>
            Recupera o delegate usado para recupera o identificador unico do pai.
            </summary>
            <param name="parentPropertyUid"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChildEntry`4.DataModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDynamicChildEntry`4.EntityType">
            <summary>
            Tipo da entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDynamicChild`2">
            <summary>
            Implementação da configuração do filho dinâmico.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChild`2.Configure">
            <summary>
            Recupera a instancia de configuração.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChild`2.Register(System.Type,System.String,System.String,Colosoft.Business.EntityLoaderConditional,Colosoft.Query.QueryExecutePredicate)">
            <summary>
            Registra uma entrada.
            </summary>
            <param name="entityType">Tipo da entidade associada com a entrada.</param>
            <param name="parentPropertyUidName">Nome da propriedade do pai que faz associação.</param>
            <param name="foreignPropertyName">Nome da propriedade que representa a chave estrangeira.</param>
            <param name="conditional">Condicional usado na carga.</param>
            <param name="executePredicate">Predicado para executar a consulta do filho.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityDynamicChild`2.FluentEntityDynamicChild">
            <summary>
            Classe usada para a configuração do filho dinâmico.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChild`2.FluentEntityDynamicChild.#ctor(Colosoft.Business.EntityDynamicChild{`0,`1})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChild`2.FluentEntityDynamicChild.Register``2(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.EntityLoaderConditional,Colosoft.Query.QueryExecutePredicate)">
            <summary>
            Registra uma entrada.
            </summary>
            <typeparam name="TEntity1">Tipo da entidade associada com a entrada.</typeparam>
            <typeparam name="TModel1">Tipo do modelo de dados da entidade da entrada.</typeparam>
            <param name="parentPropertyUid">Propriedade que representa o Uid do pai.</param>
            <param name="foreignProperty">Propriedade que representa a chave estrangeira.</param>
            <param name="conditional">Condicional usado na carga.</param>
            <param name="executePredicate">Predicado para executar a consulta do filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChild`2.FluentEntityDynamicChild.Register(System.Type,System.String,System.String,Colosoft.Business.EntityLoaderConditional,Colosoft.Query.QueryExecutePredicate)">
            <summary>
            Registra uma entrada.
            </summary>
            <param name="entityType">Tipo da entidade associada com a entrada.</param>
            <param name="parentPropertyUidName">Nome da propriedade do pai que faz associação.</param>
            <param name="foreignPropertyName">Nome da propriedade que representa a chave estrangeira.</param>
            <param name="conditional">Condicional usado na carga.</param>
            <param name="executePredicate">Predicado para executar a consulta do filho.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityEqualityComparer`1">
            <summary>
            Implementaçao de um comparador de igualdade.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Colosoft.Business.EntityEqualityComparer`1.Instance">
            <summary>
            Instancia geral do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityEqualityComparer`1.Equals(`0,`0)">
            <summary>
            Compara duas entidades.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityEqualityComparer`1.GetHashCode(`0)">
            <summary>
            Recupera o hash code da entidade.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityEqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
            <summary>
            Compara as instancias informadas.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityEqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
            <summary>
            Recupera o código Hash.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityFromLinkCreatorArgs">
            <summary>
            Argumentos para o método que cria uma entidade do filho com base na entidade do link.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityFromLinkCreatorArgs.#ctor(Colosoft.Business.IEntity,Colosoft.Business.EntityFromModelCreatorHandler,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="linkEntity"></param>
            <param name="entityCreator"></param>
            <param name="uiContext"></param>
            <param name="entityTypeManager"></param>
            <param name="sourceContext"></param>
        </member>
        <member name="P:Colosoft.Business.EntityFromLinkCreatorArgs.LinkEntity">
            <summary>
            Instancia da entidade do link.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityFromLinkCreatorArgs.EntityCreator">
            <summary>
            Instancia do método para criar a entidade do filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityFromLinkCreatorArgs.UIContext">
            <summary>
            Contexto de interface do usuário.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityFromLinkCreatorArgs.EntityTypeManager">
            <summary>
            Instancia do gerenciador de tipo de entidades.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityFromLinkCreatorArgs.SourceContext">
            <summary>
            Instancia da origem do contexto de dados.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityFromLinkCreatorHandler">
            <summary>
            Assinatura do método usado para criar uma entidade do filho com base na entidade do link.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityInfoQuery">
            <summary>
            Armazena a consulta das informações de uma entidade..
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityInfoQuery.#ctor(System.Type,System.Type,Colosoft.Query.Queryable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="dataModelType">Tipo do modelo de dados.</param>
            <param name="entityType">Tipo da entidade do resultado.</param>
            <param name="query">Consulta.</param>
        </member>
        <member name="P:Colosoft.Business.EntityInfoQuery.EntityType">
            <summary>
            Tipo da entidade associada com o resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityInfoQuery.DataModelType">
            <summary>
            Tipo do modelo de dados associado com o resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityInfoQuery.Query">
            <summary>
            Consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLinksList`1">
            <summary>
            Implementação da lista de entidades de link.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityLinksList`1">
            <summary>
            Assinatura da lista de links da entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityLinksList">
            <summary>
            Assinatuda da lista links de uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityLinksList`1.RemoveAt(System.Int32)">
            <summary>
            Remove o item na posição informada.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Colosoft.Business.IEntityLinksList`1.Item(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityLinksList`1.Count">
            <summary>
            Quantidade de registro na lista.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityLink">
            <summary>
            Assinatura de uma entidade link.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityLink.Clone(Colosoft.Business.IEntity)">
            <summary>
            Clona a instancia da entidade link.
            </summary>
            <param name="child">Instancia do filho associado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLink.GetCopyFromStateControl">
            <summary>
            Recupera um controle de estado para gerenciar a operação de CopyFrom
            que a instancia está passando.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Colosoft.Business.EntityLinksList`1._ignoreChildItems">
            <summary>
            Lista onde são adicionados os itens dos filho para serem ignorados no evento 
            de alteração da coleção de filhos.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLinksList`1._hasUid">
            <summary>
            Identifica se a entidade possui Uid.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.#ctor(Colosoft.Business.IEntityList,Colosoft.Business.EntityLoaderLinkInfo,Colosoft.Business.EntityFromModelCreatorHandler,System.String,System.Action{`0},Colosoft.Query.ISourceContext,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="child">Instancia do filho associado com o link.</param>
            <param name="linkInfo">Informações do link.</param>
            <param name="childFromModelCreator">Instancia do método usado para criar a entidade do filho associado com o link.</param>
            <param name="uiContext"></param>
            <param name="parentUidSetter">Método usado para definir o identificador unico do pai para as entidades filas da lista.</param>
            <param name="sourceContext">Contexto de origem de consultas.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.#ctor(System.Collections.Generic.IEnumerable{`0},Colosoft.Business.EntityLoaderLinkInfo,Colosoft.Business.EntityFromModelCreatorHandler,Colosoft.Business.IEntityList,System.String,System.Action{`0},Colosoft.Query.ISourceContext,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia já definindos os itens iniciais.
            </summary>
            <param name="items">Itens que serão usados na inicialização.</param>
            <param name="linkInfo">Informações do link.</param>
            <param name="childFromModelCreator"></param>
            <param name="child">Instancia do filho associado com o link.</param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="sourceContext">Contexto de origem de consultas.</param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.#ctor(System.Lazy{System.Collections.Generic.IEnumerable{`0}},Colosoft.Business.EntityLoaderLinkInfo,Colosoft.Business.EntityFromModelCreatorHandler,Colosoft.Business.IEntityList,System.String,System.Action{`0},Colosoft.Query.ISourceContext,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia definindo o parametro de carga tardia dos itens.
            </summary>
            <param name="items"></param>
            <param name="linkInfo">Informações do link.</param>
            <param name="childFromModelCreator"></param>
            <param name="child">Instancia do filho associado com o link.</param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="sourceContext">Contexto de origem de consultas.</param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Initialize(Colosoft.Business.IEntityList,Colosoft.Business.EntityLoaderLinkInfo,Colosoft.Business.EntityFromModelCreatorHandler,Colosoft.Query.ISourceContext)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="child">Instancia do filho associado.</param>
            <param name="linkInfo">Informações do link.</param>
            <param name="childFromModelCreator"></param>
            <param name="sourceContext">Contexto de origem de consultas.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.ChildCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método acioando quando a coleção adaptada sofrer alguma alteração.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.AddChildItemFromLinkEntity(`0)">
            <summary>
            Adiciona um item do filho com base na entidade do link.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.RemoveChildItem(`0)">
            <summary>
            Remove o item do filho associado com a entidade do link.
            </summary>
            <param name="linkEntity">Instancia da entidade do link</param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Clone">
            <summary>
            Clona a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Clone(Colosoft.Business.IEntity)">
            <summary>
            Clona a instancia da entidade link.
            </summary>
            <param name="child">Instancia do filho associado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Clone(Colosoft.Business.IEntity,System.Boolean)">
            <summary>
            Clona a instancia da entidade link.
            </summary>
            <param name="child">Instancia do filho associado.</param>
            <param name="forceCloneLazyChildren">Identifica se é para força os clone dos filhos com carga tardia.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Colosoft#Business#IEntityLink#GetCopyFromStateControl">
            <summary>
            Recupera um controle de estado para gerenciar a operação de CopyFrom
            que a instancia está passando.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.CheckExists(`0)">
            <summary>
            Verifica se o item já existe na coleção.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.FixItem(`0)">
            <summary>
            Fixa o item na coleção.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Add(`0)">
            <summary>
            Adiciona um novo item na coleção.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Insert(System.Int32,`0)">
            <summary>
            Insere um novo item na coleção.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Remove(`0)">
            <summary>
            Remove o item da coleção.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.RemoveAt(System.Int32)">
            <summary>
            Remove o item na posição informada.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.ProcessUpdateOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Update.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.ProcessInsertOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de Insert.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.ProcessDeleteOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de delete.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.Save(Colosoft.Data.IPersistenceSession)">
            <summary>
            Salva os dados da entidade na sessão informada.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.CreateInstance(System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity},Colosoft.Business.EntityLoaderLinkInfo,Colosoft.Business.EntityFromModelCreatorHandler,Colosoft.Business.IEntityList,System.String,System.Action{Colosoft.Business.IEntity},Colosoft.Query.ISourceContext,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria um nova instancia da lista.
            Esse método é usado por reflexão.
            </summary>
            <param name="items"></param>
            <param name="child">Instancia do filho associado com o link.</param>
            <param name="linkInfo"></param>
            <param name="childFromModelCreator"></param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="sourceContext"></param>
            <param name="entityTypeManager"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.CreateLazyInstance(System.Lazy{System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity}},Colosoft.Business.EntityLoaderLinkInfo,Colosoft.Business.EntityFromModelCreatorHandler,Colosoft.Business.IEntityList,System.String,System.Action{Colosoft.Business.IEntity},Colosoft.Query.ISourceContext,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria um nova instancia da lista.
            Esse método é usado por reflexão.
            </summary>
            <param name="items"></param>
            <param name="child">Instancia do filho associado com o link.</param>
            <param name="linkInfo"></param>
            <param name="childFromModelCreator"></param>
            <param name="uiContext"></param>
            <param name="parentUidSetter"></param>
            <param name="sourceContext"></param>
            <param name="entityTypeManager"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLinksList`1.IsLockedToEdit">
            <summary>
            Indica que a instância está locada para edição.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLinksList`1.CopyFromControl">
            <summary>
            Classe usada para confirmar a liberação da operação de CopyFrom da lista de links.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.CopyFromControl.#ctor(Colosoft.Business.EntityLinksList{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="linkList"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLinksList`1.CopyFromControl.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityListDebugView`1">
            <summary>
            Classe usada para servir como auxiliar na exibição do debug.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityListDebugView`1.#ctor(Colosoft.Business.IEntityLinksList{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:Colosoft.Business.EntityListDebugView`1.Items">
            <summary>
            Itens da coleção.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoader">
            <summary>
            Implementação base da carga da entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityLoader">
            <summary>
            Assinatura de uma interface responsável por carregar os dados de uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.TryGetSingleChildFromProperty(Colosoft.Business.IEntity,System.String,System.String@,Colosoft.Business.IEntity@)">
            <summary>
            Tenta recupera a instancia do single child com base no nome da propriedade.
            </summary>
            <param name="entity">Instancia onde o filho está.</param>
            <param name="propertyName"></param>
            <param name="childName">Nome do filho.</param>
            <param name="child">Instancia do filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.CreateEntityDescriptor">
            <summary>
            Cria uma descritor de entidade.
            </summary>
            <returns>Nova instancia do descritor de entidade.</returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.CreateEntityDescriptor(Colosoft.Business.IEntity)">
            <summary>
            Cria um descritor com base na entidade informada.
            </summary>
            <param name="entity">Instancia da entidade com os valores que serão usados na criação do descritor.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetBindStrategy">
            <summary>
            Recupera a instancia da estratégia de vinculação.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetObjectCreator">
            <summary>
            Recupera a instancia do responsável por criar os objetos da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetEntityDescriptorBindStrategy">
            <summary>
            Recupera a estratégia de vinculação para o EntityDescriptor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetEntityDescriptorCreator">
            <summary>
            Recupera a instancia do resposável por criar os descritores de entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetRecordKeyFactory">
            <summary>
            Recupera a instancia da factory da chave dos registros.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetInstanceUid(Colosoft.Data.IModel)">
            <summary>
            Recupera o identificador unico associadom com a instancia do modelo informado.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.SetInstanceUid(Colosoft.Data.IModel,System.Int32)">
            <summary>
            Define o identificador único para o modelo informado.
            </summary>
            <param name="model"></param>
            <param name="uid"></param>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetInstanceUid(Colosoft.Business.IEntity)">
            <summary>
            Recupera o identificador unico da instancia da entidade informada.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.SetInstanceUid(Colosoft.Business.IEntity,System.Int32)">
            <summary>
            Define o identificador unico da instanciada entidade.
            </summary>
            <param name="entity"></param>
            <param name="uid"></param>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetInstanceFindName(Colosoft.Business.IEntity)">
            <summary>
            Recupera o nome unico da instancia da entidade informada.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetInstanceFindName(System.Object[])">
            <summary>
            Recupera o nome unico da instancia da entidade a partir dos valores que compôem o nome.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.NotifyUidChanged(Colosoft.Business.IEntity)">
            <summary>
            Notifica que o Uid a entidade foi alterado.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.ResetAllUids(Colosoft.Business.IEntity,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Reseta todos os identificadores associados com a entidade e seus filhos.
            </summary>
            <param name="entity"></param>
            <param name="typeManager"></param>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetInstanceKeysValues(Colosoft.Business.IEntity)">
            <summary>
            Recupera os valores das chaves da instancia.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.FullLoad(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="query">Instancia da consulta para recuperar a entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Gerenciador de tipos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetFullEntities(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa das entidades contidas nos registros informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetFullEntities(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Recupera a entidade completas com base na consulta informada.
            </summary>
            <param name="queryable">Consulta que será realizado.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetFullEntities(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext)">
            <summary>
            Recupera as entidades completas com bas na preparação da consulta.
            </summary>
            <param name="prepareResult">Resultado da preparação da consulta.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetFullEntities(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext,Colosoft.Query.IQueryResult)">
            <summary>
            Recupera as entidades completas com bas na preparação da consulta.
            </summary>
            <param name="prepareResult">Resultado da preparação da consulta.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="queryResult">Resultado da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetEntityDescriptors``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera os descritores das entidades associadas com o consulta informada.
            </summary>
            <param name="queryable">Consulta que será realizada.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetEntityDescriptors(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera os descritores das entidades associados com os registros informados.
            </summary>
            <param name="records">Relação dos registros com os dados que serão processados.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.CreateNestedQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.IList{Colosoft.Business.EntityLoaderCreatorArgs},System.Collections.Generic.Queue{System.Exception})">
            <summary>
            Cria as consultas aninhadas para recupera as referencia da entidade pai.
            </summary>
            <param name="queryable">Consulta usada para recuperar a entidade.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="parentResult">Resultados dos itens pai.</param>
            <param name="exceptions">Fila dos erros ocorridos.</param>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.PrepareNestedQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Prepara as consultas aninhadas para a consulta informada.
            </summary>
            <param name="queryable">Consulta que será usada para recuperar a entidade.</param>
            <param name="uiContext">Contexto visual;</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns>Dados da preparação.</returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetLazyData(Colosoft.Business.EntityLoaderCreatorArgs,Colosoft.Business.LazyDataState,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception})">
            <summary>
            Recupera os dados de carga tardia .
            </summary>
            <param name="creatorArgs">Argumentos para a criação da entidade.</param>
            <param name="state">Estado dos dados de carga tardia.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidades.</param>
            <param name="exceptions">Fila dos erros ocorridos.</param>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.FullLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave que representa o registro.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Gerenciador de tipos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.FullLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.IQueryResultBindStrategySession,Colosoft.Query.IQueryResultObjectCreator,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave que representa o registro.</param>
            <param name="bindStrategySession">Estratégia de vinculação dos dados do resultado.</param>
            <param name="objectCreator">Instancia responsável pela criação de objetos.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Gerenciador de tipos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.LazyLoad(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="query">Instancia da consulta para recuperar a entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="args">Argumentos que serão usados</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.LazyLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave do registro.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args">Argumentos que serão usados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.LazyLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave do registro.</param>
            <param name="bindStrategy">Estratégia de vinculação dos dados do resultado.</param>
            <param name="objectCreator">Instancia responsável pela criação de objetos.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args">Argumentos que serão usados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetLazyEntities(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga completa das entidades contidas nos registros informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.Clone(Colosoft.Business.IEntity)">
            <summary>
            Clona os dados da entidade informada.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.Copy(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Copia os dados da entidade de origem para entidade de destino.
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetRecordOfKey(System.Func{System.String,System.Object})">
            <summary>
            Recupera o registro que representa a chave da entidade.
            </summary>
            <param name="propertyGetter">Getter para recuperar o valor da propriedade.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetRecordKey(System.Func{System.String,System.Object})">
            <summary>
            Recupera a chave de registro associada com a entidade.
            </summary>
            <param name="propertyGetter">Getter para recuperar o valor da propriedade</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetRecordKey(Colosoft.Business.IEntity)">
            <summary>
            Recupera a chave de registro associada com a entidade.
            </summary>
            <param name="entity">Instancia da entidade de onde os dados serão recuperados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetChildrenAccessors(System.Nullable{Colosoft.Business.EntityChildSavePriority})">
            <summary>
            Recupera os getters dos filhos da entidade.
            </summary>
            <param name="savePriority">Prioridade dos filhos que serão recuperados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetLinksAccessors(System.Nullable{Colosoft.Business.EntityChildSavePriority})">
            <summary>
            Recupera os getters dos links da entidade.
            </summary>
            <param name="savePriority">Prioridade dos filhos que serão recuperados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.CreateChild``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma instancia de uma filho
            </summary>
            <typeparam name="TChild">Tipo da entidade filho.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome do filho.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Contexto da origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.RegisterChild(Colosoft.Business.IEntity,Colosoft.Business.IEntity,System.String)">
            <summary>
            Registra o filho da entidade.
            </summary>
            <param name="parent">Instancia do pai.</param>
            <param name="child">Instancia do filho.</param>
            <param name="childName">Nome do filho.</param>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.CreateLink``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma instancia de um link.
            </summary>
            <typeparam name="TLink">Tipo da entidade do link.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome do link.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Contexto da origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Data.IModel,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="dataModel">Modelo de dados que será usado com base.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderCreatorArgs,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="creatorArgs">Argumentos que serão usadaos na crição da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.CreateReference``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma instancia de uma referencia.
            </summary>
            <typeparam name="TReference">Tipo da referencia.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome da referencia.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Origem do contexto dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetEntityReference(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext,System.Boolean)">
            <summary>
            Recupera a referencia da entidade.
            </summary>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="referenceName">Nome da referencia.</param>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador dos tipos das entidade.s</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="isLazy">Identifica se é para fazer a carga em modo Lazy.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetReferences">
            <summary>
            Recupera as referencias da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.TryGetReference(System.String,Colosoft.Business.EntityLoaderReference@)">
            <summary>
            Tenta recupera a referencia pelo nome.
            </summary>
            <param name="referenceName"></param>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader.GetReferenceByWatchedProperties(System.String[])">
            <summary>
            Tenta recupera as referencias pelo nome da propriedade monitorada.
            </summary>
            <param name="propertyNames">Nome da propriedade monitorada.</param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.UidPropertyName">
            <summary>
            Nome da propriedade do identificador unico da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.FindNameProperties">
            <summary>
            Propriedades que compôem o nome único.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.FindNameConverter">
            <summary>
            Conversor que gera o nome unico da instância.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.DescriptionPropertyName">
            <summary>
            Nome da propriedade da descrição da entidade. 
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.HasUid">
            <summary>
            Identifica se a entidade possui identificador unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.HasFindName">
            <summary>
            Identifica se a entidade possui nome unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.HasDescription">
            <summary>
            Identifica se a entidade possui descrição.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.DataModelType">
            <summary>
            Tipo do modelo de dados associado com a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.DataModelTypeName">
            <summary>
            Nome do tipo do modelo de dados associado com a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.KeysPropertyNames">
            <summary>
            Nome s das propriedades chave.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.KeyRecordDescriptor">
            <summary>
            Descritor da chave de registro da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.HasKeys">
            <summary>
            Identifica se a entidade associada possui chaves.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.InnerInstanceSupport">
            <summary>
            Identifica se a entidade associada possui 
            suporte para instancia interna.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.HasChildren">
            <summary>
            Identifica se a entidade possui filhos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoader.CustomParameters">
            <summary>
            Parametros customizados associados ao Loader.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader._customParameters">
            <summary>
            Parametros customizados associados ao Loader.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.TryGetSingleChildFromProperty(Colosoft.Business.IEntity,System.String,System.String@,Colosoft.Business.IEntity@)">
            <summary>
            Tenta recupera a instancia do single child com base no nome da propriedade.
            </summary>
            <param name="entity">Instancia onde o filho está.</param>
            <param name="propertyName"></param>
            <param name="childName">Nome do filho.</param>
            <param name="child">Instancia do filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.CreateEntityDescriptor">
            <summary>
            Cria uma descritor de entidade.
            </summary>
            <returns>Nova instancia do descritor de entidade.</returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.CreateEntityDescriptor(Colosoft.Business.IEntity)">
            <summary>
            Cria um descritor com base na entidade informada.
            </summary>
            <param name="entity">Instancia da entidade com os valores que serão usados na criação do descritor.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetRecordKeyFactory">
            <summary>
            Recupera a instancia da factory da chave dos registros.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetBindStrategy">
            <summary>
            Recupera a instancia da estratégia de vinculação.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetObjectCreator">
            <summary>
            Recupera a instancia do responsável por criar os objetos da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetEntityDescriptorBindStrategy">
            <summary>
            Recupera a estratégia de vinculação para o EntityDescriptor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetEntityDescriptorCreator">
            <summary>
            Recupera a instancia do resposável por criar os descritores de entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetInstanceUid(Colosoft.Data.IModel)">
            <summary>
            Recupera o identificador unico associadom com a instancia do modelo informado.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.SetInstanceUid(Colosoft.Data.IModel,System.Int32)">
            <summary>
            Define o identificador único para o modelo informado.
            </summary>
            <param name="model"></param>
            <param name="uid"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetInstanceUid(Colosoft.Business.IEntity)">
            <summary>
            Recupera o identificador unico da entidade informada.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetInstanceFindName(Colosoft.Business.IEntity)">
            <summary>
            Recupera o nome unico da entidade informada.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetInstanceFindName(System.Object[])">
            <summary>
            Recupera o nome unico da instancia da entidade a partir dos valores que compôem o nome.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.SetInstanceUid(Colosoft.Business.IEntity,System.Int32)">
            <summary>
            Define o identificador unico da instanciada entidade.
            </summary>
            <param name="entity">Instancia da entidade.</param>
            <param name="uid">Valor do novo identificador.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.NotifyUidChanged(Colosoft.Business.IEntity)">
            <summary>
            Notifica que o Uid a entidade foi alterado.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.ResetAllUids(Colosoft.Business.IEntity,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Reseta todos os identificadores associados com a entidade e seus filhos.
            </summary>
            <param name="entity"></param>
            <param name="typeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetInstanceKeysValues(Colosoft.Business.IEntity)">
            <summary>
            Recupera os valores das chaves da instancia.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.FullLoad(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="query">Instancia da consulta para recuperar a entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Gerenciador de tipos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetFullEntities(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa das entidades contidas nos registros informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetFullEntities(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Recupera a entidade completas com base na consulta informada.
            </summary>
            <param name="queryable">Consulta que será realizado.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidas.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetFullEntities(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext)">
            <summary>
            Recupera as entidades completas com bas na preparação da consulta.
            </summary>
            <param name="prepareResult">Resultado da preparação da consulta.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetFullEntities(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext,Colosoft.Query.IQueryResult)">
            <summary>
            Recupera as entidades completas com bas na preparação da consulta.
            </summary>
            <param name="prepareResult">Resultado da preparação da consulta.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="queryResult">Resultado da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetEntityDescriptors``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera os descritores das entidades associadas com o consulta informada.
            </summary>
            <param name="queryable">Consulta que será realizada.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetEntityDescriptors(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera os descritores das entidades associados com os registros informados.
            </summary>
            <param name="records">Relação dos registros com os dados que serão processados.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.FullLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave que representa o registro.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Gerenciador de tipos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.FullLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.IQueryResultBindStrategySession,Colosoft.Query.IQueryResultObjectCreator,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave do registro.</param>
            <param name="bindStrategy">Estratégia de vinculação dos dados do resultado.</param>
            <param name="objectCreator">Instancia responsável por criar objetos.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Gerenciador de tipos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.LazyLoad(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="query">Instancia da consulta para recuperar a entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="args">Argumentos que serão usados</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.LazyLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave do registro.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args">Argumentos que serão usados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.LazyLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carda da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave do registro.</param>
            <param name="bindStrategy">Estratégia de vinculação dos dados do resultado.</param>
            <param name="objectCreator">Instancia responsável por criar objetos.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args">Argumentos que serão usados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetLazyEntities(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga completa das entidades contidas nos registros informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.Clone(Colosoft.Business.IEntity)">
            <summary>
            Clona os dados da entidade informada.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.Copy(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Copia os dados da entidade de origem para entidade de destino.
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetRecordOfKey(System.Func{System.String,System.Object})">
            <summary>
            Recupera o registro que representa a chave da entidade.
            </summary>
            <param name="propertyGetter">Getter para recuperar o valor da propriedade.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetRecordKey(System.Func{System.String,System.Object})">
            <summary>
            Recupera a chave de registro associada com a entidade.
            </summary>
            <param name="propertyGetter">Getter para recuperar o valor da propriedade</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetRecordKey(Colosoft.Business.IEntity)">
            <summary>
            Recupera a chave de registro associada com a entidade.
            </summary>
            <param name="entity">Instancia da entidade de onde os dados serão recuperados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetChildrenAccessors(System.Nullable{Colosoft.Business.EntityChildSavePriority})">
            <summary>
            Recupera os getters dos filhos da entidade.
            </summary>
            <param name="savePriority"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetLinksAccessors(System.Nullable{Colosoft.Business.EntityChildSavePriority})">
            <summary>
            Recupera os getters dos links da entidade.
            </summary>
            <param name="savePriority">Prioridade dos filhos que serão recuperados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.CreateChild``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma a instancia de uma filho
            </summary>
            <typeparam name="TChild">Tipo da entidade filho.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome do filho.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Contexto da origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.RegisterChild(Colosoft.Business.IEntity,Colosoft.Business.IEntity,System.String)">
            <summary>
            Registra o filho da entidade.
            </summary>
            <param name="parent">Instancia do pai.</param>
            <param name="child">Instancia do filho.</param>
            <param name="childName">Nome do filho.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.CreateLink``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma instancia de um link.
            </summary>
            <typeparam name="TLink">Tipo da entidade do link.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome do link.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Origem do contexto dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.CreateReference``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma instancia de uma referencia.
            </summary>
            <typeparam name="TReference">Tipo da referencia.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome da referencia.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Origem do contexto dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Data.IModel,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="dataModel">Modelo de dados que será usado com base.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetEntityReference(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext,System.Boolean)">
            <summary>
            Recupera a referencia da entidade.
            </summary>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="referenceName">Nome da referencia.</param>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador dos tipos das entidade.s</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="isLazy">Identifica se é para fazer a carga em modo Lazy.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.TryGetReference(System.String,Colosoft.Business.EntityLoaderReference@)">
            <summary>
            Tenta recupera a referencia pelo nome.
            </summary>
            <param name="referenceName"></param>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetReferenceByWatchedProperties(System.String[])">
            <summary>
            Tenta recupera a referencia pelo nome da propriedade monitorada.
            </summary>
            <param name="propertyNames">Nome da propriedade monitorada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetReferences">
            <summary>
            Recupera as referencias da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.CreateNestedQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.IList{Colosoft.Business.EntityLoaderCreatorArgs},System.Collections.Generic.Queue{System.Exception})">
            <summary>
            Cria as consultas aninhadas para recupera as referencia da entidade pai.
            </summary>
            <param name="queryable">Consulta usada para recueprar a entidade.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="parentResult">Resultados dos itens pai.</param>
            <param name="exceptions">Fila dos erros ocorridos.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.PrepareNestedQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Prepara as consultas aninhadas para a consulta informada.
            </summary>
            <param name="queryable">Consulta que será usada para recuperar a entidade.</param>
            <param name="uiContext">Contexto visual;</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns>Dados da preparação.</returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.GetLazyData(Colosoft.Business.EntityLoaderCreatorArgs,Colosoft.Business.LazyDataState,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception})">
            <summary>
            Recupera os dados de carga tardia .
            </summary>
            <param name="creatorArgs">Argumentos para a criação da entidade.</param>
            <param name="state">Estado dos dados de carga tardia.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidades.</param>
            <param name="exceptions">Fila dos erros ocorridos.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderCreatorArgs,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="creatorArgs">Argumentos que serão usadaos na crição da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.FindNameConverter">
            <summary>
            Conversor que gera o nome unico da instância.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.FindNameProperties">
            <summary>
            Propriedades que compôem o nome único.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.UidPropertyName">
            <summary>
            Nome da propriedade do identificador unico da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.DescriptionPropertyName">
            <summary>
            Nome da propriedade da descrição da entidade. 
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.HasUid">
            <summary>
            Identifica se a entidade possui identificador unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.HasFindName">
            <summary>
            Identifica se a entidade possui nome unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.HasDescription">
            <summary>
            Identifica se a entidade possui descrição.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.DataModelType">
            <summary>
            Tipo do modelo de dados associado com a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.DataModelTypeName">
            <summary>
            Nome do tipo do modelo de dados associado com a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.KeysPropertyNames">
            <summary>
            Nomes das propriedades chave.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.KeyRecordDescriptor">
            <summary>
            Descritor da chave de registro da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.HasKeys">
            <summary>
            Identifica se a entidade associada possui chaves.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.InnerInstanceSupport">
            <summary>
            Identifica se a entidade associada possui 
            suporte para instancia interna.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.HasChildren">
            <summary>
            Identifica se a entidade possui filhos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader.CustomParameters">
            <summary>
            Parametros customizados associados ao Loader.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderAttribute">
            <summary>
            Atributo usado para identificar a classe responsável pela carga de uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderAttribute.#ctor(System.Type)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoaderType">Tipo do loader da entidade.</param>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderAttribute.EntityLoaderType">
            <summary>
            Tipo do loader da entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityChildSavePriority">
            <summary>
            Possíveis prioridades de para salvar os filhos de uma entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityChildSavePriority.AfterEntity">
            <summary>
            Salva depois da entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityChildSavePriority.BeforeEntity">
            <summary>
            Salva antes da entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderChildContainer">
            <summary>
            Representa o container dos filhos carregados.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderChildContainer._itemsLoaded">
            <summary>
            Armazena a relação dos items que foram carregados
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{System.String,Colosoft.Business.IEntity}})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.GetSingle``1(System.String)">
            <summary>
            Recupera a instancia do filho pelo nome informado.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.Get``1(System.String)">
            <summary>
            Recupera a instancia do filho pelo nome informado.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.Add(System.String,Colosoft.Business.IEntity)">
            <summary>
            Adiciona um novo filho para o container.
            </summary>
            <param name="childName">Nome do filho.</param>
            <param name="entity">Instancia da entidade filha.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildContainer.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildContainer.Item(System.String)">
            <summary>
            Recupera a instancia do filho pelo nome informado.
            </summary>
            <param name="name">Nome do filho.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderChildInfo">
            <summary>
            Armazena as informações de um filho da entidade de dados.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityLoaderChildInfo">
            <summary>
            Assinatura das informações de um filho.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityAccessor">
            <summary>
            Assinatura da classe que permite acesso a um filho da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityAccessor.Get(Colosoft.Business.IEntity)">
            <summary>
            Recupera a instancia do filho associado com o pai informado.
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityAccessor.Name">
            <summary>
            Nome do "Accessor".
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityLoaderChildInfo.CreateQueries(System.Int32,Colosoft.Data.IModel,Colosoft.Query.ISourceContext)">
            <summary>
            Cria as consultas para recuperar os itens filhos.
            </summary>
            <param name="parentUid">Identificador da entidade pai.</param>
            <param name="parentDataModel">Instancia com os dados do pai.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoaderChildInfo.CreateQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception},Colosoft.Business.EntityLoaderExecuteQueryHandler,Colosoft.Query.SubQueryFailedCallBack)">
            <summary>
            Cria as consulta para recupera os itens filhos.
            </summary>
            <param name="queryable">Consulta do item pai.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="exceptions">Fila do erros ocorridos.</param>
            <param name="entityTypeManager">Instancia do gereciador de tipos da entidade de negócio.</param>
            <param name="callBack"></param>
            <param name="failedCallBack"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoaderChildInfo.Evaluate(Colosoft.Query.IRecord,Colosoft.Business.IEntity)">
            <summary>
            Avalia se o registro contém dados associados
            com a lista dos filhos..
            </summary>
            <param name="record"></param>
            <param name="parent">Instancia do pai.</param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.ForeignPropertyName">
            <summary>
            Nome da propriedade estrangueira da entidade na qual o filho está associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.PropertyName">
            <summary>
            Nome da propriedade onde a instancia do filho está armazenada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.DataModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.EntityType">
            <summary>
            Tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.IsSingle">
            <summary>
            Identifica se é apena um filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.Options">
            <summary>
            Opções de carga.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.SavePriority">
            <summary>
            Prioridade para salvar o filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.ParentUidSetter">
            <summary>
            Instancia responsável por define para o filho o identificador do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.ParentValueGetter">
            <summary>
            Instancia responsável por recupera o valor pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.ParentValueSetter">
            <summary>
            Delegate usado para recuperar o valor da instancia do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.ParentUidGetter">
            <summary>
            Delegate usado para recuperar a chave unica do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderChildInfo.Conditional">
            <summary>
            Func usado para carregar a condicional de carga.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderChildInfo._parentLoader">
            <summary>
            Instancia do loader do pai.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderChildInfo._entityLoader">
            <summary>
            Instancia do loader da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo.#ctor(System.String,System.String,System.Action{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Func{Colosoft.Data.IModel,System.Int32},System.Func{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Action{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Reflection.PropertyInfo,Colosoft.Business.ConditionalLoader,Colosoft.Business.IEntityLoader,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do filho.</param>
            <param name="propertyName">Nome da propriedade do filho na entidade.</param>
            <param name="parentUidSetter">Delegate usado para define o identificador unico do pai.</param>
            <param name="parentUidGetter">Delegate usado para recupera o identificador unico do pai.</param>
            <param name="parentValueGetter">Delegate usado para recuperar o valor do pai.</param>
            <param name="parentValueSetter">Delegate usado para definir o valor do pai.</param>
            <param name="foreignProperty">Propriedade de associação.</param>
            <param name="parentLoader">Instancia do loader associado.</param>
            <param name="conditional">Condicional para ser usado na carga.</param>
            <param name="isSingle">Identifica que é um filho unico.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo.CreateQueries(System.Int32,Colosoft.Data.IModel,Colosoft.Query.ISourceContext)">
            <summary>
            Cria a consulta para recuperar os itens filhos.
            </summary>
            <param name="parentUid">Identificador da entidade pai.</param>
            <param name="parentDataModel">Instancia com os dados do pai.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo.CreateQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception},Colosoft.Business.EntityLoaderExecuteQueryHandler,Colosoft.Query.SubQueryFailedCallBack)">
            <summary>
            Cria as consulta para recupera os itens filhos.
            </summary>
            <param name="queryable">Consulta do item pai.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="exceptions">Fila do erros ocorridos.</param>
            <param name="entityTypeManager">Instancia do gereciador de tipos da entidade de negócio.</param>
            <param name="callBack"></param>
            <param name="failedCallBack"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo.Evaluate(Colosoft.Query.IRecord,Colosoft.Business.IEntity)">
            <summary>
            Avalia se o registro contém dados associados
            com a lista dos filhos..
            </summary>
            <param name="record"></param>
            <param name="parent">Instancia do pai.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo.Colosoft#Business#IEntityAccessor#Get(Colosoft.Business.IEntity)">
            <summary>
            Recupera a instancia do filho associado com a entidade pai informada.
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.ForeignPropertyName">
            <summary>
            Nome da propriedade de associação.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.Name">
            <summary>
            Nome do filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.PropertyName">
            <summary>
            Nome da propriedade do filho na entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.DataModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.EntityType">
            <summary>
            Tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.IsSingle">
            <summary>
            Identifica se é apena um filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.Options">
            <summary>
            Opções de carga.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.SavePriority">
            <summary>
            Prioridade para salvar o filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.ParentUidSetter">
            <summary>
            Instancia responsável por define para o filho o identificador do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.ParentUidSetter2">
            <summary>
            Delegate responsáveç por definir para o filho o identificador do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.ParentValueGetter">
            <summary>
            Instancia responsável por recupera o valor pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.ParentValueSetter">
            <summary>
            Delegate usado para recuperar o valor da instancia do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.ParentUidGetter">
            <summary>
            Delegate usado para recuperar a chave unica do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo.Conditional">
            <summary>
            Func usado para carregar a condicional de carga.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderChildInfo`4">
            <summary>
            Armazena as informa
            </summary>
            <typeparam name="TParentEntity"></typeparam>
            <typeparam name="TParentModel"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`3,System.Int32}},Colosoft.Business.ConditionalLoader,Colosoft.Business.IEntityLoader,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade que será definida para o pai.</param>
            <param name="foreignProperty">Propriedade que será usada como chave estrangeira.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="parentLoader">Instancia do loader da entidade.</param>
            <param name="isSingle">Identifica se é um filho unico.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`3,System.Nullable{System.Int32}}},Colosoft.Business.ConditionalLoader,Colosoft.Business.IEntityLoader,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão com suporte para foreign key Nullable.
            </summary>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade que será definida para o pai.</param>
            <param name="foreignProperty">Propriedade que será usada como chave estrangeira.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="parentLoader">Instancia do loader associado.</param>
            <param name="isSingle">Identifica se é um filho unico.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{`3,System.Int32}},Colosoft.Business.ConditionalLoader,Colosoft.Business.IEntityLoader,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade que será definida para o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">Propriedade que será usada como chave estrangeira.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="parentLoader">Instancia do loader associado.</param>
            <param name="isSingle">Identifica se é um filho unico.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{`3,System.Nullable{System.Int32}}},Colosoft.Business.ConditionalLoader,Colosoft.Business.IEntityLoader,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão com suporte para foreign key Nullable.
            </summary>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade que será definida para o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">Propriedade que será usada como chave estrangeira.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="parentLoader">Instancia do loader associado.</param>
            <param name="isSingle">Identifica se é um filho unico.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.GetParentUidGetter(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}})">
            <summary>
            Recupera o delegate usado para recupera o identificador unico do pai.
            </summary>
            <param name="parentPropertyUid"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.GetParentUidSetter(System.Linq.Expressions.Expression{System.Func{`3,System.Int32}})">
            <summary>
            Recupera o método que define a UID do pai para o filho
            </summary>
            <param name="foreignProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.GetParentUidSetterNullable(System.Linq.Expressions.Expression{System.Func{`3,System.Nullable{System.Int32}}})">
            <summary>
            Recupera o método que define a UID do pai para o filho
            </summary>
            <param name="foreignProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.GetParentUidSetter2(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{`3,System.Int32}})">
            <summary>
            Recupera o método que define o UID do para para o filho.
            </summary>
            <param name="parentPropertyUid">Expressão que será usada pare recupera o UID do pai.</param>
            <param name="foreignProperty">Expressão da propriedade que recupera o valor da chave estrangeira.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.GetParentUidSetter2Nullable(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{`3,System.Nullable{System.Int32}}})">
            <summary>
            Recupera o método que define o UID do para para o filho. (Suporte a ForeignKey Nullable)
            </summary>
            <param name="parentPropertyUid">Expressão que será usada pare recupera o UID do pai.</param>
            <param name="foreignProperty">Expressão da propriedade que recupera o valor da chave estrangeira.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.GetParentValueSetter(System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}})">
            <summary>
            Recupera o método usado para define o valor do filho para o pai.
            </summary>
            <param name="parentProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderChildInfo`4.Evaluate(Colosoft.Query.IRecord,Colosoft.Business.IEntity)">
            <summary>
            Avalia se o registro contém dados associados
            com a lista dos filhos..
            </summary>
            <param name="record"></param>
            <param name="parent">Instancia do pai.</param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo`4.DataModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderChildInfo`4.EntityType">
            <summary>
            Tipo da entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderConditional">
            <summary>
            Condicional usado no loader.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderConditional.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="expression">Expressão condicional.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderConditional.Add(System.String,System.Object)">
            <summary>
            Adiciona um parametro para o condicional.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderConditional.ToString">
            <summary>
            Recupera o texto da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderConditional.Expression">
            <summary>
            Expressão condicional.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderConditional.Parameters">
            <summary>
            Parametros do condicional.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderConditional.Parameter">
            <summary>
            Armaze o parametro
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderConditional.Parameter.#ctor(System.String,System.Object)">
            <summary>
            COnstrutor padrão.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderConditional.Parameter.ToString">
            <summary>
            Texto que representa o parametro.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderConditional.Parameter.Name">
            <summary>
            Nome do parametro.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderConditional.Parameter.Value">
            <summary>
            Valor do parametro.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderCreatorArgs">
            <summary>
            Armazena os argumentos usado pelo criador da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderCreatorArgs.#ctor(Colosoft.Data.IModel,Colosoft.Query.RecordKey,Colosoft.Business.EntityLoaderChildContainer,Colosoft.Business.IEntityLoaderLinksContainer,Colosoft.Business.EntityLoaderReferenceContainer,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="dataModel"></param>
            <param name="recordKey"></param>
            <param name="children"></param>
            <param name="linkContainer"></param>
            <param name="references">Container das referências.</param>
            <param name="uiContext"></param>
            <param name="typeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderCreatorArgs.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderCreatorArgs.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderCreatorArgs.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs.DataModel">
            <summary>
            Instancia do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs.RecordKey">
            <summary>
            Chave que representa o registro associado com os dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs.Children">
            <summary>
            Container dos filhos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs.Links">
            <summary>
            Container dos links.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs.References">
            <summary>
            Container das referências.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs.UIContext">
            <summary>
            Contexto visual.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs.TypeManager">
            <summary>
            Gerenciador de tipos.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderDynamicChildInfo`1">
            <summary>
            Implementação base as informações dos filhos dinâmicos.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`1.#ctor(System.String,System.String,Colosoft.Business.EntityDynamicChild,System.Func{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Action{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Action{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Boolean,Colosoft.Business.IEntityLoader,Colosoft.Business.LoadOptions)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do filho.</param>
            <param name="propertyName">Nome da propriedade do filho na entidade.</param>
            <param name="dynamicChild">Dados do filho dinamico.</param>
            <param name="parentUidSetter"></param>
            <param name="parentValueGetter"></param>
            <param name="parentValueSetter"></param>
            <param name="isSingle"></param>
            <param name="parentLoader">Instancia do loader do pai.</param>
            <param name="options">Opções de carga.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`1.SetParentUid(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Define o identificado pai para o filho.
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`1.CreateQueries(System.Int32,Colosoft.Data.IModel,Colosoft.Query.ISourceContext)">
            <summary>
            Cria a consulta para recuperar os itens filhos.
            </summary>
            <param name="parentUid">Identificador da entidade pai.</param>
            <param name="parentDataModel">Instancia com os dados do pai.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`1.CreateQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception},Colosoft.Business.EntityLoaderExecuteQueryHandler,Colosoft.Query.SubQueryFailedCallBack)">
            <summary>
            Cria as consulta para recupera os itens filhos.
            </summary>
            <param name="queryable">Consulta do item pai.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="exceptions">Fila do erros ocorridos.</param>
            <param name="entityTypeManager">Instancia do gereciador de tipos da entidade de negócio.</param>
            <param name="callBack"></param>
            <param name="failedCallBack"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`1.Evaluate(Colosoft.Query.IRecord,Colosoft.Business.IEntity)">
            <summary>
            Avalia se o registro contém dados associados
            com a lista dos filhos..
            </summary>
            <param name="record"></param>
            <param name="parent">Instancia do pai.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`1.Colosoft#Business#IEntityAccessor#Get(Colosoft.Business.IEntity)">
            <summary>
            Recupera a instancia do filho associado com a entidade pai informada.
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.ForeignPropertyName">
            <summary>
            Nome da propriedade estrangueira da entidade na qual o filho está associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.Name">
            <summary>
            Nome do filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.PropertyName">
            <summary>
            Nome da propriedade onde a instancia do filho
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.DataModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.EntityType">
            <summary>
            Tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.IsSingle">
            <summary>
            Identifica se é apena um filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.Options">
            <summary>
            Opções de carga.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.SavePriority">
            <summary>
            Prioridade para salvar o filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.ParentUidSetter">
            <summary>
            Instancia responsável por define para o filho o identificador do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.ParentValueGetter">
            <summary>
            Instancia responsável por recupera o valor pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.ParentValueSetter">
            <summary>
            Delegate usado para recuperar o valor da instancia do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.ParentUidGetter">
            <summary>
            Delegate usado para recuperar a chave unica do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderDynamicChildInfo`1.Conditional">
            <summary>
            Func usado para carregar a condicional de carga.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderDynamicChildInfo`2">
            <summary>
            Armazena as informações de um filho dinamico.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TParentEntity"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityPropertyAccessor">
            <summary>
            Assinatura das classes de acesso a entidade mas que possuam 
            a informação da propriedade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityPropertyAccessor.PropertyName">
            <summary>
            Nome da propriedade do acessador.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`2.#ctor(System.String,Colosoft.Business.EntityDynamicChild,System.Linq.Expressions.Expression{System.Func{`1,Colosoft.Business.IEntity}},System.Action{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Boolean,Colosoft.Business.IEntityLoader,Colosoft.Business.LoadOptions)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do filho.</param>
            <param name="dynamicChild">Dados do filho dinamico.</param>
            <param name="parentProperty">Lambda da propriedade da entidade pai.</param>
            <param name="parentUidSetter"></param>
            <param name="isSingle"></param>
            <param name="parentLoader">Instancia do loader do pai.</param>
            <param name="options">Opções de carga.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`2.GetParentValueSetter(System.Linq.Expressions.Expression{System.Func{`1,Colosoft.Business.IEntity}})">
            <summary>
            Recupera o método usado para define o valor do filho para o pai.
            </summary>
            <param name="parentProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderDynamicChildInfo`2.Evaluate(Colosoft.Query.IRecord,Colosoft.Business.IEntity)">
            <summary>
            Avalia se o registro contém dados associados
            com a lista dos filhos..
            </summary>
            <param name="record"></param>
            <param name="parent">Instancia do pai.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderException">
            <summary>
            Representa os erros ocorridos no Loader das entidades.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderException.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderException.#ctor(System.String)">
            <summary>
            Cria um nova instancia com a mensagem do erro.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderException.#ctor(System.String,System.Exception)">
            <summary>
            Cria uma nova instancia com os dados iniciais.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderLazyArgs">
            <summary>
            Armazena os argumento que serão usados na carga tardia da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLazyArgs.#ctor(System.String[])">
            <summary>
            Cria o argumento com os nomes que serão inclusos na carga tardia.
            </summary>
            <param name="names"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLazyArgs.#ctor(Colosoft.Business.EntityLoaderLazyArgs.Direction,System.String[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="direction"></param>
            <param name="names"></param>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderLazyArgs.Direction">
            <summary>
            Direção de inclusão dos nomes.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderLazyArgs.Direction.Include">
            <summary>
            É para incluir os nomes para a carga tardia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderLazyArgs.Direction.Exclude">
            <summary>
            É para excluir os nomes da cargar tardia.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderLinkInfo">
            <summary>
            Armazena as informações de um link da entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderLinkInfo._foreignPropertyName">
            <summary>
            Nome da propriedade estrangeira que se liga com o filho associado.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderLinkInfo._childPropertyName">
            <summary>
            Nome da propriedade do filho associado com o link.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.Initialize(System.String,System.String,System.Action{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Func{Colosoft.Data.IModel,System.Int32},System.Func{Colosoft.Data.IModel,System.Int32},System.Func{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Action{Colosoft.Business.IEntity,Colosoft.Business.IEntity},System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,Colosoft.Business.LinkCreatorHandler,Colosoft.Business.EntityFromLinkCreatorHandler,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do filho associado com o link.</param>
            <param name="linkParentForeignKeySetter"></param>
            <param name="linkParentForeignKeyGetter">Instancia usada para recuperar o valor da chave do pai do link.</param>
            <param name="childKeyGetter">Instancia usada para recuperar o valor da chave do filho que está no link.</param>
            <param name="parentValueGetter"></param>
            <param name="parentValueSetter"></param>
            <param name="foreignProperty"></param>
            <param name="childProperty">Dados da propriedade do link usada para associa-lo com filho.</param>
            <param name="linkCreator">Func usada para criar uma instancia do link associado com entidade do filho associado.</param>
            <param name="entityFromLinkCreator">Func usada para criar uma instancia do filho baseado na entidade do link.</param>
            <param name="isSingle"></param>
            <param name="options">Opções de carga do link.</param>
            <param name="savePriority"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.Equals(Colosoft.Data.IModel,Colosoft.Data.IModel)">
            <summary>
            Compara a instancia de dados do link com a instancia de dados do filho.
            </summary>
            <param name="link">Instancia dos dados do link.</param>
            <param name="child">Instancia dos dados do filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.CreateQuery(System.Int32,System.String,Colosoft.Query.ISourceContext)">
            <summary>
            Cria a consulta para recuperar os itens filhos.
            </summary>
            <param name="parentUid">Identificador da entidade pai.</param>
            <param name="parentUidProperty"></param>
            <param name="sourceContext">Contexto de origem.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.CreateQueries(Colosoft.Query.Queryable,System.String,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception},Colosoft.Business.EntityLoaderExecuteQueryHandler,Colosoft.Query.SubQueryFailedCallBack)">
            <summary>
            Cria as consulta para recupera os itens.
            </summary>
            <param name="queryable">Consulta do item pai.</param>
            <param name="parentUidProperty">Nome da propriedade Uid do pai.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="exceptions">Fila do erros ocorridos.</param>
            <param name="entityTypeManager">Instancia do gereciador de tipos da entidade de negócio.</param>
            <param name="callBack"></param>
            <param name="failedCallBack"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.Colosoft#Business#IEntityAccessor#Get(Colosoft.Business.IEntity)">
            <summary>
            Recupera a instancia do filho associado com a entidade pai informada.
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.Name">
            <summary>
            Nome do link.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.ChildName">
            <summary>
            Nome do filho no qual o link está associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.Options">
            <summary>
            Opções de carga para o link.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.ForeignPropertyName">
            <summary>
            Nome da propriedade estrangeira que se liga com o filho associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.ChildPropertyName">
            <summary>
            Nome da propriedade do filho associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.LinkDataModelType">
            <summary>
            Tipo do modelo de dados do link.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.LinkEntityType">
            <summary>
            Tipo da entidade do link.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.ChildDataModelType">
            <summary>
            Tipo do modelo da dados do filho associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.IsSingle">
            <summary>
            Identifica se é o link para uma entidade simples.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.SavePriority">
            <summary>
            Prioridade para salvar o filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.LinkParentForeignKeySetter">
            <summary>
            Instancia responsável por define para o filho o identificador do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.ParentValueGetter">
            <summary>
            Instancia responsável por recupera o valor pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.ParentValueSetter">
            <summary>
            Delegate usado para definir o valor da instancia do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.LinkParentForeignKeyGetter">
            <summary>
            Delegate usado para recuperar a chave unica do pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.LinkCreator">
            <summary>
            Instancia da func usada para criar o link com base no modelo de dados 
            usando uma consulta sobre o SourceContext.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo.EntityFromLinkCreator">
            <summary>
            Instancia da func usada para criar o entity com base no link.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderLinkInfo.EntityLinkEnumerable">
            <summary>
            TODO: Implementar
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.EntityLinkEnumerable.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity},Colosoft.Business.EntityLoaderLinkInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerable">Instancia do Enumerable que será adaptada.</param>
            <param name="linkInfo"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.EntityLinkEnumerable.CreateQueryResultChangedObserver(Colosoft.Reflection.TypeName,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="typeName"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo.EntityLinkEnumerable.GetTypeName">
            <summary>
            Recupera o nome do tipo.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderLinkInfo`5">
            <summary>
            Implementação genérica para as informações do link da entidade.
            </summary>
            <typeparam name="TParentEntity">Tipo da entidade pai.</typeparam>
            <typeparam name="TParentDataModel">Tipo dos dados da entidade pai.</typeparam>
            <typeparam name="TLinkDataModel">Tipo dos dados do link.</typeparam>
            <typeparam name="TLinkEntity">Tipo da entidade do link.</typeparam>
            <typeparam name="TLinkParentDataModel">Tipo dos dados do pai do link,</typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.#ctor(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`4,System.Int32}},System.Linq.Expressions.Expression{System.Func{`3,System.Int32}},System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do pai associado.</param>
            <param name="parentProperty">Propriedade da entidade pai na qual o link será definido.</param>
            <param name="childForeignProperty">Propriedade do filho da entidade na qual o link está associado.</param>
            <param name="childProperty">Propriedade do link que faz associação com o filho.</param>
            <param name="isSingle">Identifica se é um filho simples.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.#ctor(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`4,System.Int32}},System.Linq.Expressions.Expression{System.Func{`3,System.Nullable{System.Int32}}},System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do pai associado.</param>
            <param name="parentProperty">Propriedade da entidade pai na qual o link será definido.</param>
            <param name="childForeignProperty">Propriedade do filho da entidade na qual o link está associado.</param>
            <param name="childProperty">Propriedade do link que faz associação com o filho.</param>
            <param name="isSingle">Identifica se é um filho simples.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.#ctor(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`4,System.Nullable{System.Int32}}},System.Linq.Expressions.Expression{System.Func{`3,System.Nullable{System.Int32}}},System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do pai associado.</param>
            <param name="parentProperty">Propriedade da entidade pai na qual o link será definido.</param>
            <param name="childForeignProperty">Propriedade do filho da entidade na qual o link está associado.</param>
            <param name="childProperty">Propriedade do link que faz associação com o filho.</param>
            <param name="isSingle">Identifica se é um filho simples.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.#ctor(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`4,System.Nullable{System.Int32}}},System.Linq.Expressions.Expression{System.Func{`3,System.Int32}},System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do pai associado.</param>
            <param name="parentProperty">Propriedade da entidade pai na qual o link será definido.</param>
            <param name="childForeignProperty">Propriedade do filho da entidade na qual o link está associado.</param>
            <param name="childProperty">Propriedade do link que faz associação com o filho.</param>
            <param name="isSingle">Identifica se é um filho simples.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetParentValueSetter(System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}})">
            <summary>
            Recupera o método usado para define o valor do filho para o pai.
            </summary>
            <param name="parentProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetChildPropertyCompiled">
            <summary>
            Recupera a propriedade do filho compilada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetChildPropertyNullableCompiled">
            <summary>
            Recupera a propriedade do filho compilada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetChildPropertyInfo">
            <summary>
            Recupera as informações da propriedade do filho.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetForeignPropertyCompiled">
            <summary>
            Recupera a propriedade estrangeira compilada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetForeignPropertyNullableCompiled">
            <summary>
            Recupera a propriedade estrangeira compilada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetForeignPropertyInfo">
            <summary>
            Recupera as informações da propriedade estrangeira.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetParentPropertyCompiled">
            <summary>
            Recupera o método compilado para recuperar o pai do link.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.CreateEntityFromLink(Colosoft.Business.EntityFromLinkCreatorArgs)">
            <summary>
            Cria um entidade do pai com base na entidade do link.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.CreateLink(Colosoft.Business.LinkCreatorArgs)">
            <summary>
            Cria uma instancia da entidade do link.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.SetLinkParentForeignKey(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Recupera o método que define a UID do pai para o link
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.SetLinkParentForeignKeyNullable(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Recupera o método que define a UID do pai para o filho
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetLinkParentForeignKey(Colosoft.Data.IModel)">
            <summary>
            Recupera o método que recupera o identificador da chave estrangeira do modelo de dados informado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetLinkParentForeignKeyNullable(Colosoft.Data.IModel)">
            <summary>
            Recupera o método que recupera o identificador da chave estrangeira do modelo de dados informado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetChildKey(Colosoft.Data.IModel)">
            <summary>
            Recupera o identificador do filho que está no modelo de dados do link.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetChildKeyNullable(Colosoft.Data.IModel)">
            <summary>
            Recupera o identificador do filho que está no modelo de dados do link.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.GetParentValue(Colosoft.Business.IEntity)">
            <summary>
            Recupera o instancia do link a partir da entidade pai.
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinkInfo`5.SetParentValue(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Associa a instancia do filho para o pai.
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo`5.LinkDataModelType">
            <summary>
            Tipo do modelo de dados do link.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo`5.LinkEntityType">
            <summary>
            Tipo da entidade do link.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo`5.ChildDataModelType">
            <summary>
            Tipo do modelo da dados do filho associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinkInfo`5.Colosoft#Business#IEntityPropertyAccessor#PropertyName">
            <summary>
            Propriedade que representa o valor o link.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoader`2">
            <summary>
            Implementação base da carga da entidade.
            </summary>
            <typeparam name="TEntity1"></typeparam>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityLoader`1">
            <summary>
            Assinatura de uma interface responsável por carregar os dados de uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader`1.FullLoad(Colosoft.Business.DataModelRecordKey{`0},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="dataModelRecordKey">Instancia com o modelo de dados da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader`1.GetFullEntities(System.Collections.Generic.IEnumerable{Colosoft.Business.DataModelRecordKey{`0}},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa das entidades contidas nos dados informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader`1.GetLazyFullEntities(System.Collections.Generic.IEnumerable{Colosoft.Business.DataModelRecordKey{`0}},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa em modo lazy das entidades contidas nos dados informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader`1.LazyLoad(Colosoft.Business.DataModelRecordKey{`0},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="dataModelRecordKey">Instancia do modelo de dados da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="args">Argumentos que serão usados</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoader`1.GetLazyEntities(System.Collections.Generic.IEnumerable{Colosoft.Business.DataModelRecordKey{`0}},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga tardia dos dados filhos da entidades contidas nos dados informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args">Argumentos que serão usados</param>
            <returns></returns>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._children">
            <summary>
            Armazena os filhos da entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._singleChildProperties">
            <summary>
            Armazena a relação das propriedades onde está o filhos singulares.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._links">
            <summary>
            Armazena os links da entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._references">
            <summary>
            Armazena as referencias da entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._referencesWatchedProperties">
            <summary>
            Dicionário que armazena a relação das propriedades assistidas com a referencias.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._entityCreator">
            <summary>
            Instancia responsável por criar uma nova instancia da entidade de dados.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._uidGetter">
            <summary>
            Instancia responsável por recupera o identificador unico da instancia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._findNameGetters">
            <summary>
            Instancia responsável por recupera o nome unico da instancia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._descriptionGetter">
            <summary>
            Instância responsável por recuperar a descrição da instância.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._descriptionPropertyName">
            <summary>
            Nome da proriedade de descrição.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._uidSetter">
            <summary>
            Instancia responsável por definir o valor do identificador da instancia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._keysGettersAndSetters">
            <summary>
            Instancia do dicionário com a relação das chaves da entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._uidPropertyName">
            <summary>
            Nome da propriedade do identificador unico da instancia.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoader`2._entityDescriptorGetter">
            <summary>
            Método usado para recuperar uma instancia do descritor da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Configure">
            <summary>
            Recupera a instancia de configuração.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateLinksList(System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity},Colosoft.Business.EntityLoaderLinkInfo,Colosoft.Business.EntityFromModelCreatorHandler,Colosoft.Business.IEntityList,System.String,Colosoft.Query.ISourceContext,Colosoft.Business.IEntityTypeManager,System.Action{Colosoft.Business.IEntity})">
            <summary>
            Cria a instanca da lista de links.
            </summary>
            <param name="items">Items que serão adicionaods na lista.</param>
            <param name="child">Instancia do filho associado com o link.</param>
            <param name="linkInfo"></param>
            <param name="childFromModelCreator"></param>
            <param name="uiContext"></param>
            <param name="sourceContext"></param>
            <param name="entityTypeManager"></param>
            <param name="parentUidSetter"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateLinksList(System.Lazy{System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity}},Colosoft.Business.EntityLoaderLinkInfo,Colosoft.Business.EntityFromModelCreatorHandler,Colosoft.Business.IEntityList,System.String,Colosoft.Query.ISourceContext,Colosoft.Business.IEntityTypeManager,System.Action{Colosoft.Business.IEntity})">
            <summary>
            Cria a lista de filhos.
            </summary>
            <param name="items">Items que serão adicionados na lista.</param>
            <param name="child">Instancia do filho associado com o link.</param>
            <param name="linkInfo"></param>
            <param name="childFromModelCreator"></param>
            <param name="uiContext"></param>
            <param name="sourceContext"></param>
            <param name="entityTypeManager"></param>
            <param name="parentUidSetter"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateChildrenList(System.Type,System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity},System.String,Colosoft.Business.IEntityTypeManager,System.Action{Colosoft.Business.IEntity})">
            <summary>
            Cria a lista de filhos.
            </summary>
            <param name="entityType">Tipo da entidade de dados.</param>
            <param name="items">Items que serão adicionados na lista.</param>
            <param name="uiContext"></param>
            <param name="entityTypeManager"></param>
            <param name="parentUidSetter"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateChildrenList(System.Type,System.Lazy{System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity}},System.String,Colosoft.Business.IEntityTypeManager,System.Action{Colosoft.Business.IEntity})">
            <summary>
            Cria a lista de filhos.
            </summary>
            <param name="entityType">Tipo da entidade de dados.</param>
            <param name="items">Items que serão adicionados na lista.</param>
            <param name="uiContext"></param>
            <param name="entityTypeManager"></param>
            <param name="parentUidSetter"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.ParentUidSetterWrapper``1(System.Action{Colosoft.Business.IEntity})">
            <summary>
            Método usado apenas como uma adaptação.
            </summary>
            <typeparam name="TChild"></typeparam>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.TryGetSingleChildFromProperty(Colosoft.Business.IEntity,System.String,System.String@,Colosoft.Business.IEntity@)">
            <summary>
            Tenta recupera a instancia do single child com base no nome da propriedade.
            </summary>
            <param name="entity">Instancia onde o filho está.</param>
            <param name="propertyName"></param>
            <param name="childName">Nome do filho.</param>
            <param name="child">Instancia do filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateEntityDescriptor">
            <summary>
            Cria uma descritor de entidade.
            </summary>
            <returns>Nova instancia do descritor de entidade.</returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateEntityDescriptor(Colosoft.Business.IEntity)">
            <summary>
            Cria um descritor com base na entidade informada.
            </summary>
            <param name="entity">Instancia da entidade com os valores que serão usados na criação do descritor.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetBindStrategy">
            <summary>
            Recupera a instancia da estratégia de vinculação.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetObjectCreator">
            <summary>
            Recupera a instancia do responsável por criar os objetos da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntityDescriptorBindStrategy">
            <summary>
            Recupera a estratégia de vinculação para o EntityDescriptor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntityDescriptorCreator">
            <summary>
            Recupera a instancia do resposável por criar os descritores de entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetRecordKeyFactory">
            <summary>
            Recupera a instancia da factory da chave dos registros.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.NotifyUidChanged(Colosoft.Business.IEntity)">
            <summary>
            Notifica que o Uid a entidade foi alterado.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.ResetAllUids(Colosoft.Business.IEntity,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Reseta todos os identificadores associados com a entidade e seus filhos.
            </summary>
            <param name="entity"></param>
            <param name="typeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetInstanceUid(Colosoft.Data.IModel)">
            <summary>
            Recupera o identificador unico associadom com a instancia do modelo informado.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.SetInstanceUid(Colosoft.Data.IModel,System.Int32)">
            <summary>
            Define o identificador único para o modelo informado.
            </summary>
            <param name="model"></param>
            <param name="uid"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetInstanceUid(Colosoft.Business.IEntity)">
            <summary>
            Recupera o valor do identificador unico da instancia.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetInstanceFindName(Colosoft.Business.IEntity)">
            <summary>
            Recupera o valor do nome unico da instancia.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetInstanceFindName(System.Object[])">
            <summary>
            Recupera o nome unico da instancia da entidade a partir dos valores que compôem o nome.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.SetInstanceUid(Colosoft.Business.IEntity,System.Int32)">
            <summary>
            Define o identificador unico da instanciada entidade.
            </summary>
            <param name="entity">Instancia da entidade.</param>
            <param name="uid">Valor do novo identificador.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetInstanceKeysValues(Colosoft.Business.IEntity)">
            <summary>
            Recupera os valores das chaves da instancia.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FullLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.IQueryResultBindStrategySession,Colosoft.Query.IQueryResultObjectCreator,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave que representa o registro.</param>
            <param name="bindStrategySession">Estratégia de vinculação dos dados do resultado.</param>
            <param name="objectCreator">Instancia responsável por criar objetos.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Gerenciador de tipos.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateNestedQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.IList{Colosoft.Business.EntityLoaderCreatorArgs},System.Collections.Generic.Queue{System.Exception})">
            <summary>
            Cria as consultas aninhadas para recupera as referencia da entidade pai.
            </summary>
            <param name="queryable">Consulta usada para recueprar a entidade.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="parentResult">Resultados dos itens pai.</param>
            <param name="exceptions">Fila dos erros ocorridos.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyData(Colosoft.Business.EntityLoaderCreatorArgs,Colosoft.Business.LazyDataState,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception})">
            <summary>
            Recupera os dados de carga tardia .
            </summary>
            <param name="creatorArgs">Argumentos para a criação da entidade.</param>
            <param name="state">Estado dos dados de carga tardia.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidades.</param>
            <param name="exceptions">Fila dos erros ocorridos.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyEntities(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga completa das entidades contidas nos registros informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntities(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Recupera a entidade completas com base na consulta informada.
            </summary>
            <param name="queryable">Consulta que será realizado.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidas.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntities(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext)">
            <summary>
            Recupera as entidades completas com bas na preparação da consulta.
            </summary>
            <param name="prepareResult">Resultado da preparação da consulta.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntities(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext,Colosoft.Query.IQueryResult)">
            <summary>
            Recupera as entidades completas com bas na preparação da consulta.
            </summary>
            <param name="prepareResult">Resultado da preparação da consulta.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="queryResult">Resultado da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntityDescriptors``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera os descritores das entidades associadas com o consulta informada.
            </summary>
            <param name="queryable">Consulta que será realizada.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntities(System.Collections.Generic.IEnumerable{Colosoft.Business.DataModelRecordKey{`1}},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa das entidades contidas nos dados informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyFullEntities(System.Collections.Generic.IEnumerable{Colosoft.Business.DataModelRecordKey{`1}},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa em modo lazy das entidades contidas nos dados informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FullLoad(Colosoft.Business.DataModelRecordKey{`1},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Realiza a carga completa da entidade.
            </summary>
            <param name="dataModelRecordKey">Instancia com o modelo de dados da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.LazyLoad(Colosoft.Query.IRecord,Colosoft.Query.RecordKey,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carda da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="record">Registro dos dados da entidade.</param>
            <param name="recordKey">Chave do registro.</param>
            <param name="bindStrategy">Estratégia de vinculação dos dados do resultado.</param>
            <param name="objectCreator">Instancia responsável por criar objetos.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args">Argumentos que serão usados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyEntities(System.Collections.Generic.IEnumerable{Colosoft.Business.DataModelRecordKey{`1}},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga tardia dos dados filhos da entidades contidas nos dados informados.
            </summary>
            <param name="result">Registros com os dados da entidades que serão carregadas.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Converto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <param name="args">Argumentos que serão usados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.LazyLoad(Colosoft.Business.DataModelRecordKey{`1},Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Realiza a carga da entidade com carga tardia dos dados filhos.
            </summary>
            <param name="dataModelRecordKey">Instancia do modelo de dados da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="args">Argumentos que serão usados</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos de entidades.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntityReference(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext,System.Boolean)">
            <summary>
            Recupera a referencia da entidade.
            </summary>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="referenceName">Nome da referencia.</param>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador dos tipos das entidade.s</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="isLazy">Identifica se é para fazer a carga em modo Lazy.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetReferenceByWatchedProperties(System.String[])">
            <summary>
            Tenta recupera a referencia pelo nome da propriedade monitorada.
            </summary>
            <param name="propertyNames">Nome da propriedade monitorada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.TryGetReference(System.String,Colosoft.Business.EntityLoaderReference@)">
            <summary>
            Tenta recupera a referencia pelo nome.
            </summary>
            <param name="referenceName"></param>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetReferences">
            <summary>
            Recupera as referencias da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Clone(Colosoft.Business.IEntity)">
            <summary>
            Clona os dados da entidade informada.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Copy(Colosoft.Business.IEntity,Colosoft.Business.IEntity)">
            <summary>
            Copia os dados da entidade de origem para entidade de destino.
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetRecordOfKey(System.Func{System.String,System.Object})">
            <summary>
            Recupera o registro que representa a chave da entidade.
            </summary>
            <param name="propertyGetter">Getter para recuperar o valor da propriedade.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetRecordKey(System.Func{System.String,System.Object})">
            <summary>
            Recupera a chave de registro associada com a entidade.
            </summary>
            <param name="propertyGetter">Getter para recuperar o valor da propriedade</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetRecordKey(Colosoft.Business.IEntity)">
            <summary>
            Recupera a chave de registro associada com a entidade.
            </summary>
            <param name="entity">Instancia da entidade de onde os dados serão recuperados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetChildrenAccessors(System.Nullable{Colosoft.Business.EntityChildSavePriority})">
            <summary>
            Recupera os getters dos filhos da entidade.
            </summary>
            <param name="savePriority">Prioridade dos filhos</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLinksAccessors(System.Nullable{Colosoft.Business.EntityChildSavePriority})">
            <summary>
            Recupera os getters dos links da entidade.
            </summary>
            <param name="savePriority">Prioridade dos filhos que serão recuperados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.RegisterChild(Colosoft.Business.IEntity,Colosoft.Business.IEntity,System.String)">
            <summary>
            Registra o filho da entidade.
            </summary>
            <param name="parent">Instancia do pai.</param>
            <param name="child">Instancia do filho.</param>
            <param name="childName">Nome do filho.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateChild``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma a instancia de uma filho
            </summary>
            <typeparam name="TChild">Tipo da entidade filho.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome do filho.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Contexto da origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateLink``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma instancia de um link.
            </summary>
            <typeparam name="TLink">Tipo da entidade do link.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome do link.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Contexto da origem dos dados</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.CreateReference``1(Colosoft.Business.IEntity,System.String,System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma instancia de uma referencia.
            </summary>
            <typeparam name="TReference">Tipo da referencia.</typeparam>
            <param name="parent">Instancia da entidade pai.</param>
            <param name="name">Nome da referencia.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Instancia do gerenciador de tipos das entidades.</param>
            <param name="sourceContext">Origem do contexto dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Data.IModel,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="dataModel">Modelo de dados que será usado com base.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Create(System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderCreatorArgs,Colosoft.Query.ISourceContext)">
            <summary>
            Cria uma nova instancia da entidade associada.
            </summary>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="creatorArgs">Argumentos que serão usadaos na crição da entidade.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.EntityCreator">
            <summary>
            Instancia responsável por criar uma nova instancia da entidade de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.ModelTypeName">
            <summary>
            Nome do tipo do Model.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.KeyRecordDescriptor">
            <summary>
            Recupera o descritor do registro que contém os valores chave do tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.FindNameConverter">
            <summary>
            Conversor que gera o nome unico da instância.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.FindNameProperties">
            <summary>
            Propriedades que compôem o nome único.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.DescriptionPropertyName">
            <summary>
            Nome da propriedade de descrição.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.HasFindName">
            <summary>
            Identifica se a entidade possui nome unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.UidPropertyName">
            <summary>
            Nome da propriedade do identificador unico da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.HasUid">
            <summary>
            Identifica se a entidade possui identificador unico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.HasDescription">
            <summary>
            Identifica se a entidade possui descrição.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.DataModelType">
            <summary>
            Tipo do modelo de dados associado com a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.DataModelTypeName">
            <summary>
            Nome do tipo do modelo de dados associado com a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.KeysPropertyNames">
            <summary>
            Nomes das propriedades chave.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.HasKeys">
            <summary>
            Identifica se a entidade associada possui chaves.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.InnerInstanceSupport">
            <summary>
            Identifica se a entidade associada tem suporte para instancia interna.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.HasChildren">
            <summary>
            Identifica se a entidade possui filhos.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoader`2.FluentEntityLoader">
            <summary>
            Classe que auxilia na configuração.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.#ctor(Colosoft.Business.EntityLoader{`0,`1})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoader"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.AddReference``2(Colosoft.Business.EntityLoaderReference)">
            <summary>
            Adiciona uma referencia para o loader.
            </summary>
            <param name="reference"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Uid(System.Linq.Expressions.Expression{System.Func{`1,System.Int32}})">
            <summary>
            Define a propriedade que define o identificador unico da entidade.
            </summary>
            <param name="uidProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Description(System.Linq.Expressions.Expression{System.Func{`1,System.String}})">
            <summary>
            Registra a propriedade que define a descrição da entidade.
            </summary>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Descriptor(System.Func{Colosoft.Business.CreateEntityDescriptorArgs,Colosoft.IEntityDescriptor})">
            <summary>
            Registra a forma de criação o descritor para a entidade.
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.FindName(Colosoft.IFindNameConverter,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            Registra as propriedades que compõem o nome único da instância.
            </summary>
            <param name="converter">conversor</param>
            <param name="findNameProperties">nome das propriedades</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.FindName(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})">
            <summary>
            Define a propriedade que define o nome unico da entidade.
            </summary>
            <param name="findNameProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Keys(System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            Define as propriedades que representa a chave da entidade.
            </summary>
            <param name="properties">Propriedades que representa a chave.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Reference``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}})">
            <summary>
            Registra um referencia da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade da referencia.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade de referencia.</typeparam>
            <param name="name">Nome da referencia.</param>
            <param name="parentProperty">Propriedade da referencia no pai.</param>
            <param name="foreignProperty">Propridade na qual a referencia está ligada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Reference``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um referencia da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade da referencia.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade de referencia.</typeparam>
            <param name="name">Nome da referencia.</param>
            <param name="parentProperty">Propriedade da referencia no pai.</param>
            <param name="foreignProperty">Propridade na qual a referencia está ligada.</param>
            <param name="isLoadLazy">Identifica se a referência terá carga tardia.</param>
            <param name="options">Opções de carga da referência.</param>
            <param name="savePriority"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Reference``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},Colosoft.Business.ConditionalLoader,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            Registra um referencia da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade da referencia.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade de referencia.</typeparam>
            <param name="name">Nome da referencia.</param>
            <param name="parentProperty">Propriedade da referencia no pai.</param>
            <param name="conditional">Condicional para carga da referencia.</param>
            <param name="watchedProperties">Propriedade que serão monitoradas para realiza a recarga da referência.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Reference``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},Colosoft.Business.ConditionalLoader,System.Boolean,Colosoft.Business.LoadOptions,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            Registra um referencia da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade da referencia.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade de referencia.</typeparam>
            <param name="name">Nome da referencia.</param>
            <param name="parentProperty">Propriedade da referencia no pai.</param>
            <param name="conditional">Condicional para carga da referencia.</param>
            <param name="isLoadLazy">Identifica se a referência terá carga tardia.</param>
            <param name="options">Opções da carga da referência.</param>
            <param name="watchedProperties">Propriedade que serão monitoradas para realiza a recarga da referência.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Reference``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},Colosoft.Business.ConditionalLoader,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            Registra um referencia da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade da referencia.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade de referencia.</typeparam>
            <param name="name">Nome da referencia.</param>
            <param name="parentProperty">Propriedade da referencia no pai.</param>
            <param name="conditional">Condicional para carga da referencia.</param>
            <param name="isLoadLazy">Identifica se a referência terá carga tardia.</param>
            <param name="options">Opções da carga da referência.</param>
            <param name="savePriority"></param>
            <param name="watchedProperties">Propriedade que serão monitoradas para realiza a recarga da referência.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho simples da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.ConditionalLoader,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho simples da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="conditional">Condicional que será usada na carga.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho simples da entidade. Com suporte para foreign key Nullable.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="options"></param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.ConditionalLoader,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho simples da entidade. Com suporte para foreign key Nullable.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho simples da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.ConditionalLoader,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho simples da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho simples da entidade. Com suporte para foreign key Nullable.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.ConditionalLoader,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho simples da entidade. Com suporte para foreign key Nullable.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Child``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">>Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Child``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.ConditionalLoader,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">>Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Child``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho da entidade. Com suporte para foreign key Nullable.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Child``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.ConditionalLoader,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho da entidade. Com suporte para foreign key Nullable.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="parentPropertyUid">Propriedade que será usada para recuepra o identificador unico do pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Child``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Child``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.ConditionalLoader,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho da entidade.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Child``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho da entidade. Com suporte para foreign key Nullable.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Child``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.ConditionalLoader,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um filho da entidade. Com suporte para foreign key Nullable.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filha.</typeparam>
            <typeparam name="TModel">Tipo do modelo de dados da entidade filha.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade para recupera o pai.</param>
            <param name="foreignProperty">Expressão da chave estrangeira do o filho com a entidade.</param>
            <param name="conditional">Condicional que será usado na carga.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o filho.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.DynamicChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},Colosoft.Business.LoadOptions)">
            <summary>
            Registra um filho dinamico.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filho dinâmico.</typeparam>
            <typeparam name="TDynamic">Tipo com a configuração de carga do filho dinamico.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade do pai no qual o filho é vinculado.</param>
            <param name="options">Opções de carga.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.DynamicSingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},Colosoft.Business.LoadOptions)">
            <summary>
            Registra um filho dinamico simples.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filho dinâmico.</typeparam>
            <typeparam name="TDynamic">Tipo com a configuração de carga do filho dinamico.</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade do pai no qual o filho é vinculado.</param>
            <param name="options">Opções de carga.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.DynamicChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},Colosoft.Business.LoadOptions)">
            <summary>
            Registra um filho dinâmico.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filho dinâmico.</typeparam>
            <typeparam name="TTypesProviderModel">Tipo do provedore de tipos para os filhos</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade do pai no qual o filho é vinculado.</param>
            <param name="foreignProperty">Propriedade que será usada com relacionamento.</param>
            <param name="options">Opções de carga.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.DynamicSingleChild``2(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{`1,System.Int32}},Colosoft.Business.LoadOptions)">
            <summary>
            Registra um filho dinâmico simples.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do filho dinâmico.</typeparam>
            <typeparam name="TTypesProviderModel">Tipo do provedore de tipos para os filhos</typeparam>
            <param name="name">Nome do filho.</param>
            <param name="parentProperty">Propriedade do pai no qual o filho é vinculado.</param>
            <param name="foreignProperty">Propriedade que será usada com relacionamento.</param>
            <param name="options">Opções de carga.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleLink``3(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``2,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um link da entidade.
            </summary>
            <typeparam name="TLink">Tipo da entidade do link.</typeparam>
            <typeparam name="TLinkModel">Tipo do modelo de dados do entidade link.</typeparam>
            <typeparam name="TParentModel">Tipo do modelo de dados do filho para onde será feito o link.</typeparam>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do filho no qual o link está associado.</param>
            <param name="parentProperty">Propriedade pai da entidade para onde o link será atribuído.</param>
            <param name="childForeignProperty">Propriedade do filho da entidade na qual o link foi feito.</param>
            <param name="childProperty">Propriedade do filho no qual se associa com o link.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o link.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.SingleLink``3(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``2,System.Nullable{System.Int32}}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um link da entidade.
            </summary>
            <typeparam name="TLink">Tipo da entidade do link.</typeparam>
            <typeparam name="TLinkModel">Tipo do modelo de dados do entidade link.</typeparam>
            <typeparam name="TParentModel">Tipo do modelo de dados do filho para onde será feito o link.</typeparam>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do filho no qual o link está associado.</param>
            <param name="parentProperty">Propriedade pai da entidade para onde o link será atribuído.</param>
            <param name="childForeignProperty">Propriedade do filho da entidade na qual o link foi feito.</param>
            <param name="childProperty">Propriedade do filho no qual se associa com o link.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o link.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Link``3(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``2,System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Int32}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um link da entidade.
            </summary>
            <typeparam name="TLink">Tipo da entidade do link.</typeparam>
            <typeparam name="TLinkModel">Tipo do modelo de dados do entidade link.</typeparam>
            <typeparam name="TParentModel">Tipo do modelo de dados do filho para onde será feito o link.</typeparam>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do filho no qual o link está associado.</param>
            <param name="parentProperty">Propriedade pai da entidade para onde o link será atribuído.</param>
            <param name="childForeignProperty">Propriedade do filho da entidade na qual o link foi feito.</param>
            <param name="childProperty">Propriedade do filho no qual se associa com o link.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o link.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Link``3(System.String,System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},System.Linq.Expressions.Expression{System.Func{``2,System.Nullable{System.Int32}}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{System.Int32}}},Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority)">
            <summary>
            Registra um link da entidade.
            </summary>
            <typeparam name="TLink">Tipo da entidade do link.</typeparam>
            <typeparam name="TLinkModel">Tipo do modelo de dados do entidade link.</typeparam>
            <typeparam name="TParentModel">Tipo do modelo de dados do filho para onde será feito o link.</typeparam>
            <param name="name">Nome do link.</param>
            <param name="childName">Nome do filho no qual o link está associado.</param>
            <param name="parentProperty">Propriedade pai da entidade para onde o link será atribuído.</param>
            <param name="childForeignProperty">Propriedade do filho da entidade na qual o link foi feito.</param>
            <param name="childProperty">Propriedade do filho no qual se associa com o link.</param>
            <param name="options">Opções de carga.</param>
            <param name="savePriority">Prioridade para salvar o link.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.DisableInnerInstance">
            <summary>
            Desabilita o suporte para instancia interna.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Creator(System.Func{Colosoft.Business.EntityLoaderCreatorArgs{`1},Colosoft.Business.IEntity{`1}})">
            <summary>
            Define o criador da instancia.
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.FluentEntityLoader.Loader">
            <summary>
            Loader associado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable">
            <summary>
            Classe usa para pecorre o resultado de uma consulta
            e recuperar as entidades equivalentes.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.#ctor(Colosoft.Business.EntityLoader{`0,`1},Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoader">Loader.</param>
            <param name="queryable">Consulta que será realizado.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidas.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.GetTypeName">
            <summary>
            Recupera o nome do tipo principal associado com o resultado da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.Register(Colosoft.Collections.INotifyCollectionChangedObserverContainer)">
            <summary>
            Registra os observers no container.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.GetEnumerator">
            <summary>
            Recupera o enumerador do resultad.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador associado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.EntityLoader">
            <summary>
            Loader associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.Queryable">
            <summary>
            Consulta associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.SourceContext">
            <summary>
            Contexto de origem associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.UiContext">
            <summary>
            Contexto de interface com o usuário.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.EntityTypeManager">
            <summary>
            Gerenciador dos tipos de entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.IsDisposed">
            <summary>
            Identifica se a instancia foi liberada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.Colosoft#Collections#ISearchParameterDescriptionContainer#SearchParameterDescriptions">
            <summary>
            Recupera as descrições dos parametros de pesquisa.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetEntitiesEnumerable.Colosoft#Query#IQueryableContainer#Queryable">
            <summary>
            Consulta associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable">
            <summary>
            Classe usa para pecorre o resultado de uma consulta
            e recuperar as entidades equivalentes.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.#ctor(Colosoft.Business.EntityLoader{`0,`1},Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoader">Loader.</param>
            <param name="queryable">Consulta que será realizado.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidas.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.#ctor(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext)">
            <summary>
            Construtor usado para carregar as entidade com base no resultado preparado.
            </summary>
            <param name="prepareResult"></param>
            <param name="sourceContext"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.#ctor(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext,Colosoft.Query.IQueryResult)">
            <summary>
            Construtor usado para carregar as entidades com base no resulta da consulta.
            </summary>
            <param name="prepareResult"></param>
            <param name="sourceContext"></param>
            <param name="queryResult"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.GetTypeName">
            <summary>
            Recupera o nome do tipo principal associado com o resultado da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.ExecuteQuery(Colosoft.Business.PrepareNestedQueriesResult)">
            <summary>
            Executa a consulta.
            </summary>
            <param name="prepareResult"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.ProcessQueryResult(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.IQueryResult)">
            <summary>
            Processo o resultado da consulta.
            </summary>
            <param name="prepareResult"></param>
            <param name="queryableResult"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.GetEnumerator(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext)">
            <summary>
            Recupera o enumerador das entidade com base no resultado preparado.
            </summary>
            <param name="prepareResult"></param>
            <param name="sourceContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.GetEnumerator">
            <summary>
            Recupera o enumerador do resultad.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.PrepareResult">
            <summary>
            Preparação do resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoader`2.GetFullEntitiesEnumerable.QueryResult">
            <summary>
            Resultado da consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoader`2.GetLazyEntitiesEnumerable">
            <summary>
            Implementação do Enumerable que recuperea as entidades
            para serem carregadas de forma tardia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyEntitiesEnumerable.#ctor(Colosoft.Business.EntityLoader{`0,`1},Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord},System.String,Colosoft.Business.IEntityTypeManager,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Construtor usado para carregar as entidade com base no resultado preparado.
            </summary>
            <param name="entityLoader">Loader associado.</param>
            <param name="queryable"></param>
            <param name="sourceContext"></param>
            <param name="result"></param>
            <param name="uiContext"></param>
            <param name="entityTypeManager"></param>
            <param name="entityLazyArgs"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyEntitiesEnumerable.GetTypeName">
            <summary>
            Recupera o nome do tipo principal associado com o resultado da consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyEntitiesEnumerable.GetEnumerator(System.Collections.Generic.IEnumerable{Colosoft.Query.IRecord})">
            <summary>
            Recupera o enumerador das entidade com base no resultado preparado.
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyEntitiesEnumerable.GetEnumerator">
            <summary>
            Recupera o enumerador das entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoader`2.GetLazyEntitiesEnumerable.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderCreatorArgs`1">
            <summary>
            Classe que armazena os argumentos para a criação de uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderCreatorArgs`1.#ctor(`0,Colosoft.Query.RecordKey,Colosoft.Business.EntityLoaderChildContainer,Colosoft.Business.IEntityLoaderLinksContainer,Colosoft.Business.EntityLoaderReferenceContainer,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="dataModel"></param>
            <param name="recordKey">Chave do registro associado.</param>
            <param name="children"></param>
            <param name="linkContainer"></param>
            <param name="references"></param>
            <param name="uiContext"></param>
            <param name="typeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderCreatorArgs`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderCreatorArgs`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderCreatorArgs`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs`1.DataModel">
            <summary>
            Instancia do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs`1.RecordKey">
            <summary>
            Chave que representa o registro associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs`1.Children">
            <summary>
            Container dos filhos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs`1.Links">
            <summary>
            Container dos links.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs`1.References">
            <summary>
            Container das referencias.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs`1.UIContext">
            <summary>
            Contexto visual.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderCreatorArgs`1.TypeManager">
            <summary>
            Gerenciador de tipos.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderReference">
            <summary>
            Armazena as informações da referencia da entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderReference._entityLoader">
            <summary>
            Instancia do loader da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReference.#ctor(System.String,System.String,Colosoft.Business.ConditionalLoader,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority,System.String[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name"></param>
            <param name="parentPropertyName"></param>
            <param name="conditional"></param>
            <param name="isLoadLazy">Identifica se a referência terá carga tardia.</param>
            <param name="options">Opções de carga da referência.</param>
            <param name="savePriority">Prioridade para salvar a referência.</param>
            <param name="watchedProperties"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReference.GetConditional">
            <summary>
            Recupera a condicional para a consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReference.CreateQueries(Colosoft.Data.IModel,Colosoft.Query.ISourceContext)">
            <summary>
            Cria a consulta para recuperar os itens filhos.
            </summary>
            <param name="parentDataModel">Instancia com os dados do pai.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReference.CreateQueries(Colosoft.Query.Queryable,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.Queue{System.Exception},Colosoft.Business.EntityLoaderExecuteQueryHandler,Colosoft.Query.SubQueryFailedCallBack)">
            <summary>
            Cria as consulta para recupera a referência.
            </summary>
            <param name="queryable">Consulta do item pai.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="exceptions">Fila do erros ocorridos.</param>
            <param name="entityTypeManager">Instancia do gereciador de tipos da entidade de negócio.</param>
            <param name="callBack"></param>
            <param name="failedCallBack"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.Name">
            <summary>
            Nome da referencia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.ParentPropertyName">
            <summary>
            Nome da propriedade do pai na qual a referencia está vinculada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.WatchedPropertyNames">
            <summary>
            Propriedades que serão monitoradas.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.Conditional">
            <summary>
            Condicional usada para a carga da referencia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.DataModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.EntityType">
            <summary>
            Tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.Options">
            <summary>
            Opções de carga da referência.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.IsLoadLazy">
            <summary>
            Identifica se é para carregar a referncia de forma tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.ParentValueGetter">
            <summary>
            Instancia responsável por recupera o valor pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference.SavePriority">
            <summary>
            Prioridade para salvar o filho.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderReferenceContainer">
            <summary>
            Representa o container de referencias carregadas.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderReferenceContainer._itemsLoaded">
            <summary>
            Armazena a relação dos itens que foram carregados
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{System.String,Colosoft.Business.IEntity}})">
            <summary>
            Constrói a instancia com os itens das referencias.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.Add(System.String,Colosoft.Business.IEntity)">
            <summary>
            Adiciona uma nova referência para o container.
            </summary>
            <param name="referenceName">Nome da refer.</param>
            <param name="entity">Instancia da entidade filha.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.Get``1(System.String)">
            <summary>
            Recupera a instancia da referência.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="name">Nome da referência.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.NotifyLoaded(System.String)">
            <summary>
            Notifica que a referência associada com o novo foi carregada.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReferenceContainer.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderReference`4">
            <summary>
            Implementação genérica para as informações da referencia da entidade.
            </summary>
            <typeparam name="TParentEntity"></typeparam>
            <typeparam name="TParentModel"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReference`4.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}},Colosoft.Business.ConditionalLoader,System.Boolean,Colosoft.Business.LoadOptions,Colosoft.Business.EntityChildSavePriority,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome da referencia.</param>
            <param name="parentProperty">Propriedade do pai onde a referencia está.</param>
            <param name="conditional">Condicional para carregar a referencia.</param>
            <param name="isLoadLazy">Identifica se a referência terá carga tardia.</param>
            <param name="options">Opções de carga da referência.</param>
            <param name="savePriority"></param>
            <param name="watchedProperties">Propriedade que serão monitoradas.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReference`4.GetParentPropertyName(System.Linq.Expressions.Expression{System.Func{`0,Colosoft.Business.IEntity}})">
            <summary>
            Recupera o nome da propriedade da referencia no pai.
            </summary>
            <param name="parentProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReference`4.GetwatchedPropertyNames(System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            Recupera os nomes das propriedades informadas.
            </summary>
            <param name="watchedProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderReference`4.Get(Colosoft.Business.IEntity)">
            <summary>
            Recupera o valor do item do pai.
            </summary>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference`4.DataModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference`4.EntityType">
            <summary>
            Tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference`4.ParentValueGetter">
            <summary>
            Instancia responsável por recupera o valor pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderReference`4.Colosoft#Business#IEntityPropertyAccessor#PropertyName">
            <summary>
            Propriedade onde o valor da referencia é armazenado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityManager">
            <summary>
            Implementação do gerenciador de entidades.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityManager">
            <summary>
            Assinatura o gerenciador de entidade de negócio.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.ProcessResult``1(Colosoft.Query.IQueryResult,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa o resultado da consulta e carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryResult">Resultado da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.ProcessLazyResult``1(Colosoft.Query.IQueryResult,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryResult">Resultado da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.Prepare``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Prepara a consulta para recupera todos os dados das entidades que serão recuperadas.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="query">Consulta sobre a qual será aplicada as sub-consultas.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <returns>Resultado da preparação da consulta.</returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.ProcessResult``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa o resultado da consulta e carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="query">Consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.ProcessResult``1(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext,Colosoft.Query.IQueryResult)">
            <summary>
            Processa o resultada da consulta e carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prepareResult"></param>
            <param name="sourceContext"></param>
            <param name="queryResult"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.ProcessLazyResult``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="query">Consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.GetByUid``1(System.Int32,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera a instancia da entidade pelo identificador informado.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="uid">Identificador unico da instancia.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.GetDescriptorByUid``1(System.Int32,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera a instancia do descritor da entidade pelo uid informador.
            </summary>
            <param name="uid">Identificador unico da instancia.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.ProcessResultDescriptor``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa a consulta e recupera o resultado como IEntityDescriptors.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="query"></param>
            <param name="sourceContext"></param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.ProcessResultDescriptor``2(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa a consulta e recupera o resultado como IEntityDescriptors.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEntityDescriptor"></typeparam>
            <param name="query"></param>
            <param name="sourceContext"></param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityManager.GetEntityVirtualListLoader``1(Colosoft.Query.Queryable,System.String,System.Boolean,System.String,System.Func{System.Object,``0})">
            <summary>
            Recuper o Loader da lista virtual para a entidade do tipo informado.
            </summary>
            <param name="queryable">Consulta.</param>
            <param name="countExpression">Expressão para a consulta Count.</param>
            <param name="isLazy">Identifica se é para carregar com lazy.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="castHandler">Instancia do manipulador que vai realizar o cast do item do resultado.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.#ctor(Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityManager.SetEntityManager(System.Lazy{Colosoft.Business.IEntityManager})">
            <summary>
            Define a instancia que será usada no sistema.
            </summary>
            <param name="entityManager"></param>
        </member>
        <member name="M:Colosoft.Business.EntityManager.ProcessResult``1(Colosoft.Query.IQueryResult,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa o resultado da consulta e carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryResult">Resultado da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.ProcessResult``1(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.ISourceContext,Colosoft.Query.IQueryResult)">
            <summary>
            Processa o resultado da consulta e carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="prepareResult">Resultado da prepraração da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="queryResult">Resultado da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.Prepare``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Prepara a consulta para recupera todos os dados das entidades que serão recuperadas.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="query">Consulta sobre a qual será aplicada as sub-consultas.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <returns>Resultado da preparação da consulta.</returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.ProcessResult``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="query">Consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.ProcessResultDescriptor``2(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa os descritores para o resultado.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEntityDescritor"></typeparam>
            <param name="query"></param>
            <param name="sourceContext"></param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.ProcessResultDescriptor``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa os descritores para o resultado.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="query"></param>
            <param name="sourceContext"></param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.ProcessLazyResult``1(Colosoft.Query.IQueryResult,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryResult">Resultado da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.ProcessLazyResult``1(Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String,Colosoft.Business.EntityLoaderLazyArgs)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="query">Consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.GetByUid``1(System.Int32,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera a instancia da entidade pelo identificador informado.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="uid">Identificador unico da instancia.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.GetDescriptorByUid``1(System.Int32,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Recupera a instancia do descritor da entidade pelo uid informador.
            </summary>
            <param name="uid">Identificador unico da instancia.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.GetEntityVirtualListLoader``1(Colosoft.Query.Queryable,System.String,System.Boolean,System.String,System.Func{System.Object,``0})">
            <summary>
            Recuper o Loader da lista virtual para a entidade do tipo informado.
            </summary>
            <param name="queryable">Consulta.</param>
            <param name="countExpression">Expressão para a consulta Count.</param>
            <param name="isLazy">Identifica se é para carregar com lazy.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="castHandler">Instancia do manipulador que vai realizar o cast do item do resultado.</param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityManager.Instance">
            <summary>
            Instancia do gerenciador do sistema.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerable`1">
            <summary>
            Implementação do enumerable dos descritores de entidade.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{Colosoft.IEntityDescriptor})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerable`1.Register(Colosoft.Collections.INotifyCollectionChangedObserverContainer)">
            <summary>
            Método usado para registrar os observers.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerable`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerable`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerable`1.GetEnumerator">
            <summary>
            Recupera o enumerador.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityManager.EntitiesEnumerable`1">
            <summary>
            Implementação do enumerador das entidades.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerable`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerable`1.Register(Colosoft.Collections.INotifyCollectionChangedObserverContainer)">
            <summary>
            Método usado para registrar os observers.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerable`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerable`1.GetEnumerator">
            <summary>
            Recupera o enumerador.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerator`1">
            <summary>
            Implementação do enumerador dos descritores de entidades.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerator`1.#ctor(System.IDisposable,System.Collections.Generic.IEnumerator{Colosoft.IEntityDescriptor})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="owner"></param>
            <param name="enumerator"></param>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesDescriptorEnumerator`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityManager.EntitiesEnumerator`1">
            <summary>
            Implementação do enumerador das entidades.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerator`1.#ctor(System.IDisposable,System.Collections.Generic.IEnumerator{Colosoft.Business.IEntity})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="owner"></param>
            <param name="enumerator"></param>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerator`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerator`1.MoveNext">
            <summary>
            Move para a próxima entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityManager.EntitiesEnumerator`1.Reset">
            <summary>
            Reseta o enumerador.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityManager.EntitiesEnumerator`1.Current">
            <summary>
            Instancia da atual entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityManager.EntitiesEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Instancia da atual entidade.
            </summary>
        </member>
        <member name="T:Colosoft.EntityManagerExtentions">
            <summary>
            Armazena os método extensíveis usados pelo gerenciador de entidades.
            </summary>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ExecuteSelectProcessResult``1(Colosoft.Query.Queryable,System.String,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Processa os resultado da consulta.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <param name="uiContext"></param>
            <param name="bindStrategy"></param>
            <param name="objectCreator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ExecuteSelectProcessLazyResult``1(Colosoft.Query.Queryable,System.String,Colosoft.Business.EntityLoaderLazyArgs,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Processa os resultado da consulta.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable"></param>
            <param name="uiContext"></param>
            <param name="args"></param>
            <param name="bindStrategy"></param>
            <param name="objectCreator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessResult``1(Colosoft.Query.IQueryResult,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa o resultado da consulta e carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryResult">Resultado da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessResult``1(Colosoft.Query.IQueryResultContainer,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa o resultado da consulta e carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryResultContainer">Container do resultado da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto visual.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessResult``1(Colosoft.Query.Queryable,System.String)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryable">Consulta.</param>
            <param name="uiContext">Contexto da interface com o usuário.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessResult``1(Colosoft.Business.PrepareNestedQueriesResult,Colosoft.Query.IQueryResult)">
            <summary>
            Processa o resultado para a preparação da consulta.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prepareResult"></param>
            <param name="queryResult"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.Prepare``1(Colosoft.Query.Queryable,System.String)">
            <summary>
            Prepara a consulta para carregar os dados completos das entidades do resultado.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryable">Consulta.</param>
            <param name="uiContext">Contexto da interface com o usuário</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessLazyResult``1(Colosoft.Query.IQueryResult,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryResult">Resultado da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessLazyResult``1(Colosoft.Query.IQueryResultContainer,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryResultContainer">Container d resultado da consulta.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessLazyResult``1(Colosoft.Query.Queryable,System.String)">
            <summary>
            Processa o resultado da consulta a carrega as entidades de negócio.
            </summary>
            <typeparam name="TEntity">Tipo da entidade de negócio.</typeparam>
            <param name="queryable">Consulta.</param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessResultDescriptor``1(Colosoft.Query.Queryable,System.String)">
            <summary>
            Processa a consulta e recupera o resultado como IEntityDescriptors.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="query">Consulta que será utilizada no processamento.</param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ProcessResultDescriptor``2(Colosoft.Query.Queryable,System.String)">
            <summary>
            Processa a consulta e recupera o resultado como IEntityDescriptors.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEntityDescriptor"></typeparam>
            <param name="query">Consulta que será utilizada no processamento.</param>
            <param name="uiContext"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.GetDescriptor``1(Colosoft.Query.ISourceContext,System.Int32,System.String)">
            <summary>
            Recupera o descritor da instancia pelo identificador informado.
            </summary>
            <typeparam name="TEntity">Tipo da entidade</typeparam>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uid">Identificador unico da instancia.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ToVirtualResult``1(Colosoft.Query.Queryable,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Retorna um resultado assíncrono.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator">Criador do objeto.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ToVirtualResult``1(Colosoft.Query.Queryable,System.Int32,System.String,System.String,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Retorna um resultado assíncrono.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="pageSize"></param>
            <param name="countExpression"></param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="bindStrategy">Estratégia de vinculação.</param>
            <param name="objectCreator">Criador do objeto.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ToVirtualResult``1(Colosoft.Query.Queryable,System.Int32,Colosoft.Collections.VirtualListLoader{``0},Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Retorna um resultado assíncrono.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="pageSize"></param>
            <param name="listLoader">Carregador da lista.</param>
            <param name="bindStrategy"></param>
            <param name="objectCreator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ToProxyVirtualResult``2(Colosoft.Query.Queryable,System.Int32,System.String,System.Func{``0,``1})">
            <summary>
            Cria um resultado virtual para a consulta informada.
            </summary>
            <typeparam name="TEntity">Tipo da entidade do resultado</typeparam>
            <typeparam name="TProxy">Tipo do proxy do resultado.</typeparam>
            <param name="queryable"></param>
            <param name="pageSize"></param>
            <param name="countExpression"></param>
            <param name="proxyCreator">Referencia do método usado para cria o proxy do itens da coleção.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ToVirtualResultLazy``1(Colosoft.Query.Queryable,System.Int32,System.String,System.String,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Retorna um resultado assíncrono.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable">Consulta que será utilizada pela lista virtual.</param>
            <param name="pageSize">Tamanho da páginda de dados da lista virtual.</param>
            <param name="countExpression">Expressão que será repassada para o método Count.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="bindStrategy"></param>
            <param name="objectCreator"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.EntityManagerExtentions.ToVirtualResultLazy``1(Colosoft.Query.Queryable,System.Int32,Colosoft.Collections.VirtualListLoader{``0},Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Retorna um resultado assíncrono.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable">Consulta que será utilizada pela lista virtual.</param>
            <param name="pageSize">Tamanho da páginda de dados da lista virtual.</param>
            <param name="listLoader">Loader da lista.</param>
            <param name="bindStrategy"></param>
            <param name="objectCreator"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.Entity`1">
            <summary>
            Representa a implementação de uma entidade para um modelo de dados.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntity`1">
            <summary>
            Assinatura das classes de entidade que estão associadas diretamente com um modelo de dados.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="T:Colosoft.Business.IEntityOfModel">
            <summary>
            Assinatura da entidade de um modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityOfModel.DataModel">
            <summary>
            Instancia do modelo de dados associado.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntity`1.CopyFromDataModel(`0)">
            <summary>
            Altera o valor da instancia do modelo dados.
            </summary>
            <param name="dataModel"></param>
        </member>
        <member name="P:Colosoft.Business.IEntity`1.DataModel">
            <summary>
            Instancia do modelo de dados associado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IPersistence">
            <summary>
            Assinatura das classes de persistencia.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IPersistence.Persist(Colosoft.Data.IPersistenceSession)">
            <summary>
            Persiste os dados da entidade.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.#ctor(`0,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria uma instancia com base no contexto visual.
            </summary>
            <param name="dataModel"></param>
            <param name="uiContext"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.#ctor(`0,System.String,System.Boolean,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor interno
            </summary>
            <param name="dataModel"></param>
            <param name="uiContext"></param>
            <param name="initialize">Identifica se é para inicializar.</param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.InitializeModel(`0)">
            <summary>
            Inicializa o modelo para a entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.GetLink``1(Colosoft.Business.IEntityLoaderLinksContainer,System.String)">
            <summary>
            Recupera a instancia do link da entidade.
            </summary>
            <typeparam name="TLink"></typeparam>
            <param name="linkContainer"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.GetSingleLink``1(Colosoft.Business.IEntityLoaderLinksContainer,System.String)">
            <summary>
            Recupera a instancia do filho da entidade.
            </summary>
            <typeparam name="TLink"></typeparam>
            <param name="linkContainer"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.GetChild``1(Colosoft.Business.EntityLoaderChildContainer,System.String)">
            <summary>
            Recupera a instancia do filho da entidade.
            </summary>
            <typeparam name="TChild"></typeparam>
            <param name="childContainer"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.GetSingleChild``1(Colosoft.Business.EntityLoaderChildContainer,System.String)">
            <summary>
            Recupera a instancia do filho da entidade.
            </summary>
            <typeparam name="TChild"></typeparam>
            <param name="childContainer"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.CreateRecordObserver">
            <summary>
            Cria o observer para a entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.OnPersisted(Colosoft.Data.PersistenceActionResult)">
            <summary>
            Método acionado quando a persistencia for executada.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.SetDataModel(`0)">
            <summary>
            Define o modelo de dados da entidade.
            </summary>
            <param name="dataModel"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.CopyBasicData(Colosoft.Business.IEntity{`0})">
            <summary>
            Realiza uma cópia dos dados básicos da entidade.
            </summary>
            <param name="to"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.RemoveStorageControl">
            <summary>
            Remove o controle de armazenamento da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity`1.Equals(Colosoft.Business.IEntity)">
            <summary>
            Verifica se a instancia é igual a instancia informada.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.CopyFromDataModel(`0)">
            <summary>
            Altera o valor da instancia do modelo dados.
            </summary>
            <param name="dataModel"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.CopyFromDataModel(`0,System.Boolean)">
            <summary>
            Altera o valor da instancia do modelo dados.
            </summary>
            <param name="dataModel">Instancia com os novos dados.</param>
            <param name="notifyPropertyChanged">Identifica se é para notificar que as propriedades foram alteradas.</param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.SaveActionCallback(Colosoft.Data.PersistenceAction,Colosoft.Data.PersistenceActionResult)">
            <summary>
            Método acionado quando o modelo de dados for salvo.
            </summary>
            <param name="action"></param>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.Save(Colosoft.Data.IPersistenceSession)">
            <summary>
            Salva os dados da entidade.
            </summary>
            <param name="session">Sessão onde a operação será realizada.</param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.GetEntities(Colosoft.Business.IEntity,System.Collections.Generic.IEnumerable{Colosoft.Business.IEntityAccessor})">
            <summary>
             Recupera as entidade pelos getters informados.
            </summary>
            <param name="parent"></param>
            <param name="accessors"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.ProcessDeleteOperations(Colosoft.Data.IPersistenceSession)">
            <summary>
            Processa as operações de delete.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.Entity`1.Persist(Colosoft.Data.IPersistenceSession)">
            <summary>
            Persiste a entidade no banco de dados.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.Delete(Colosoft.Data.IPersistenceSession)">
            <summary>
            Registra a entidade para ser apagada.
            </summary>
            <param name="session">Sessão onde a operação será realizada.</param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.DeleteActionCallback(Colosoft.Data.PersistenceAction,Colosoft.Data.PersistenceActionResult)">
            <summary>
            Método acionado quando retorna da operação de exclusão dos dados da entidade.
            </summary>
            <param name="action"></param>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.Entity`1.Equals(Colosoft.Business.IEntity{`0})">
            <summary>
            Verifica se a instancia é igual a instancia informada.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.Entity`1.LastActionId">
            <summary>
            Identificador da última ação da sessão de persistencia vinculada a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity`1.DataModel">
            <summary>
            Instancia do modelo de dados associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity`1.RowVersion">
            <summary>
            Versão da instância.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity`1.ModelType">
            <summary>
            Tipo do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity`1.ExistsInStorage">
            <summary>
            Verifica se a entidade existe na fonte de armazenamento.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Entity`1.Colosoft#Business#IEntityOfModel#DataModel">
            <summary>
            Instancia do modelo da dados associado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.Entity`1.PropertyInfoNameTypeIEqualityComparer">
            <summary>
            Classe usada para compara <see cref="T:System.Reflection.PropertyInfo"/> pelo nome e tipo.
            </summary>
        </member>
        <member name="T:Colosoft.Business.Entity`1.EntityOfModelRecordObserver">
            <summary>
            Implementação do observer da entidade de um modelo de dados.
            </summary>
        </member>
        <member name="M:Colosoft.Business.Entity`1.EntityOfModelRecordObserver.#ctor(Colosoft.Business.Entity{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Colosoft.Business.Entity`1.EntityOfModelRecordObserver.DataModel">
            <summary>
            Instancia do modelo de dados associado com a entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPointerSelectionList`3">
            <summary>
            Coleção genérica para a seleção de itens de um grupo. Exibe os elementos
            através de Wrappers que possuem a propriedade IsSelected, indicando o estado de seleção do item.
            A seleção de um item adiciona uma entidade relacionando o item selecionado com o item pai.
            </summary>
            <typeparam name="TBusiness">Tipo dos itens filhos.</typeparam>
            <typeparam name="TPointer">Tipo da entidade de relacionamento.</typeparam>
            <typeparam name="TItem">Tipo do item da coleção.</typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityPointerSelectionList`3.#ctor(Colosoft.Collections.IObservableCollection{`0},Colosoft.Collections.IObservableCollection{`1},System.Func{`0,`1},System.Func{`0,`1,System.Boolean},System.Func{`0,`2})">
            <summary>
            Contrutor parameterizado.
            </summary>
            <param name="items">Os itens filhos.</param>
            <param name="selected">A lista dos relacionamentos entre pais e filhos.</param>
            <param name="createCall">Chamada de criação de relacionamento entre pai e um filho.</param>
            <param name="compareCall">Comparação que indica se um relacionamento se refere ao filho passado como parâmetro.</param>
            <param name="itemCreate">Chamada de criação de wrapper da coleção.</param>
        </member>
        <member name="M:Colosoft.Business.EntityPointerSelectionList`3.Dispose(System.Boolean)">
            <summary>
            Liberação de recursos alocados pela coleção.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Colosoft.Business.EntityPointerSelectionList`3.Selected">
            <summary>
            Lista de relacionamentos entre pai e filhos.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySelectionList`1">
            <summary>
            Coleção genérica para a seleção de itens de um grupo. Exibe os elementos
            através de Wrappers que possuem a propriedade IsSelected, indicando o estado de seleção do item.
            A seleção de um item adiciona o mesmo em uma lista de seleção.
            </summary>
            <typeparam name="TBusiness"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntitySelectionList`1.#ctor(Colosoft.Business.IEntity,Colosoft.Collections.IObservableCollection{`0},Colosoft.Collections.IObservableCollection{`0})">
            <summary>
            Contrutor parameterizado.
            </summary>
            <param name="controller">A entidade que controla o estado dos items da lista.</param>
            <param name="items">A lista de itens.</param>
            <param name="selected">A lista dos selecionados.</param>
        </member>
        <member name="M:Colosoft.Business.EntitySelectionList`1.#ctor(Colosoft.Business.IEntity,Colosoft.Collections.IObservableCollection{`0},Colosoft.Collections.IObservableCollection{`0},System.Func{Colosoft.Business.IEntity,`0,Colosoft.Collections.IObservableCollection{`0},Colosoft.Business.EntitySelectionList{`0}.Item})">
            <summary>
            Construtor para lista com items personalizados.
            </summary>
            <param name="controller"></param>
            <param name="items"></param>
            <param name="selected"></param>
            <param name="itemCreator"></param>
        </member>
        <member name="M:Colosoft.Business.EntitySelectionList`1.Dispose(System.Boolean)">
            <summary>
            Liberação de recursos alocados pela coleção.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Colosoft.Business.EntitySelectionList`1.Selected">
            <summary>
            Lista de relacionamentos entre pai e filhos.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySelectionList`1.Item">
            <summary>
            Wrapper de manutenção do estado de seleção do item.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntitySelectionList`1.Item.#ctor(Colosoft.Business.IEntity,`0,Colosoft.Collections.IObservableCollection{`0})">
            <summary>
            Consrutor parametrizado.
            </summary>
            <param name="controller"></param>
            <param name="data"></param>
            <param name="selected"></param>
        </member>
        <member name="M:Colosoft.Business.EntitySelectionList`1.Item.SelectedChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Tratamento de alterações na lista de seleção.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.EntitySelectionList`1.Item.Dispose(System.Boolean)">
            <summary>
            Método para liberar recursos alocados pelo item.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntitySelectionList`1.Item.Dispose">
            <summary>
            Método para liberar recursos alocados pelo item.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySelectionList`1.Item.Data">
            <summary>
            O item encapsulado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySelectionList`1.Item.IsSelected">
            <summary>
            O estado de seleção do item
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySelectionList`1.Item.IsReadOnly">
            <summary>
            Indica se o estado dos itens da coleção pode ser alterado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityTypeManager">
            <summary>
            Classe de acesso ao gerenciador dps tipos de entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityTypeManager.Instance">
            <summary>
            Instancia do gerenciador dos tipos de entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityXmlSerializer">
            <summary>
            Implementação do serializador xml para as entidades do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityXmlSerializer.IsDerivedFrom(System.Type,System.Type[])">
            <summary>
            Verifica se o tipo deriva do tipo base.
            </summary>
            <param name="derivedType"></param>
            <param name="baseTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityXmlSerializer.Support(System.Type)">
            <summary>
            Verifica se o tipo possui suporte para serialização.
            </summary>
            <param name="derivedType"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityXmlSerializer.GetSerializeData(Colosoft.Business.IEntityTypeManager,Colosoft.Business.IEntity)">
            <summary>
            Recupera os dados que precisam ser serializados.
            </summary>
            <param name="entityTypeManager"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityXmlSerializer.Serialize(System.Xml.XmlWriter,Colosoft.Business.IEntityTypeManager,Colosoft.Business.IEntity)">
            <summary>
            Serializa os dados da entidade.
            </summary>
            <param name="writer">Writer onde serão registrados os dados serializados.</param>
            <param name="entityTypeManager"></param>
            <param name="entity">Entidade que será serializada.</param>
        </member>
        <member name="T:Colosoft.Business.EntityDeletedEventArgs">
            <summary>
            Armazena os argumentos do evento acionado quando a entidade for apagada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityEventArgs">
            <summary>
            Assinatura das classes de argumentos de evento que armazena a instancia da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDeletedEventArgs.#ctor(Colosoft.Business.IEntity,System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity"></param>
            <param name="success">Identifica se a entidade foi apagada com sucesso.</param>
            <param name="message">Mensagem associada.</param>
        </member>
        <member name="P:Colosoft.Business.EntityDeletedEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletedEventArgs.Success">
            <summary>
            Identifica se a entidade foi apagada com sucesso.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletedEventArgs.Message">
            <summary>
            Mensagem associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletedEventArgs`1">
            <summary>
            Armazena os argumentos do evento acionado quando a entidade for apagada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityEventArgs`1">
            <summary>
            Armazena os argumento dos eventos associados com a entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityEventArgs`1.#ctor(Colosoft.Business.IEntityEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntityEventArgs`1.EventArgs">
            <summary>
            Argumentos base do evento.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityEventArgs`1.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDeletedEventArgs`1.#ctor(Colosoft.Business.EntityDeletedEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntityDeletedEventArgs`1.Success">
            <summary>
            Identifica se a entidade foi apagada com sucesso.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletedEventArgs`1.Message">
            <summary>
            Mensagem associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletedEvent">
            <summary>
            Evento acionado quando a entidade for salva.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletingEventArgs">
            <summary>
            Representa os argumentos do evento acionado quando a entidade
            estiver sendo apagada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDeletingEventArgs.#ctor(Colosoft.Business.IEntity)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingEventArgs.Cancel">
            <summary>
            Identifica se é para cancelar a operação.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingEventArgs.Message">
            <summary>
            Mensagem.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletingEventArgs`1">
            <summary>
            Representa os argumentos do evento acionado quando a entidade
            estiver sendo apagada.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityDeletingEventArgs`1.#ctor(Colosoft.Business.EntityDeletingEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingEventArgs`1.Cancel">
            <summary>
            Identifica se é para cancelar a operação.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingEventArgs`1.Message">
            <summary>
            Mensagem.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletingEvent">
            <summary>
            Evento acionado quando a entidade estiver sendo apagada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletingWithPersistenceSessionEventArgs">
            <summary>
            Representa os argumentos do evento acionado quando a entidade estive sendo apagada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDeletingWithPersistenceSessionEventArgs.#ctor(Colosoft.Business.IEntity,Colosoft.Data.IPersistenceSession,Colosoft.Data.IPersistenceSession,Colosoft.Data.IPersistenceSession)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity"></param>
            <param name="session"></param>
            <param name="beforeSession"></param>
            <param name="afterSession"></param>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingWithPersistenceSessionEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingWithPersistenceSessionEventArgs.Session">
            <summary>
            Sessão de persistencia associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingWithPersistenceSessionEventArgs.BeforeSession">
            <summary>
            Sessão de persistencia que será processada anteriormente.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityDeletingWithPersistenceSessionEventArgs.AfterSession">
            <summary>
            Sessão de persistencia que será processada posteriormente.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletingWithPersistenceSessionEvent">
            <summary>
            Repreesnta o evento acionado quando a entidade estiver 
            sendo execluída com a sessão de persistencia.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityEventInfo">
            <summary>
            Armanze as informações do evento da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityEventInfo.EventType">
            <summary>
            Tipo de evento.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityEventInfo.ExportId">
            <summary>
            Identificador da exportão da classe do evento.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityEventManager">
            <summary>
            Implementação padrão do gerenciador de eventos das entidades.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityEventManager">
            <summary>
            Assinatura do gerenciador de eventos da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityEventManager.Register(System.Type)">
            <summary>
            Registra o tipo da entidade que será geranciada.
            </summary>
            <param name="entityType"></param>
        </member>
        <member name="E:Colosoft.Business.IEntityEventManager.RegisterEventInfoError">
            <summary>
            Evento acionado quando ocorre um erro ao registra as informações do 
            evento de uma entidade.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventManager._tryGetInstanceByServiceLocatorError">
            <summary>
            Identifica se houve algum erro ao recuperar a instancia pelo ServiceLocator.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventManager._eventSubscribers">
            <summary>
            Armazena a relação dos evento escritos.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventManager._registeredTypes">
            <summary>
            Relação mdos tipos registrados.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.OnRegisterEventInfoError(Colosoft.Reflection.TypeName,Colosoft.Business.EntityEventInfo,System.Exception)">
            <summary>
            Método acionado quando ocorre um erro no registro do EntityEventInfo.
            </summary>
            <param name="typeName"></param>
            <param name="eventInfo"></param>
            <param name="error"></param>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.Register(Colosoft.Reflection.TypeName,Colosoft.Business.EntityEventInfo)">
            <summary>
            Registra o evento para a entidade.
            </summary>
            <param name="entityType">Nome da entidade.</param>
            <param name="info">Informações do evento.</param>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.RegisterEvent``3(Colosoft.Reflection.TypeName,Colosoft.Business.EntityEventInfo)">
            <summary>
            Registra o evento para a entidade.
            </summary>
            <typeparam name="TEvent">Tipo da classe do evento.</typeparam>
            <typeparam name="TExecuteSubscription">Tipo da inscrição de execução.</typeparam>
            <typeparam name="TArgs">Tipo dos argumentos do evento.</typeparam>
            <param name="entityType">Nome da entidade associada.</param>
            <param name="info"></param>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.GetEventInfo(Colosoft.Reflection.TypeName)">
            <summary>
            Recupera as informações do evento com base no nome do tipo
            da entidade de negócio.
            </summary>
            <param name="entityType">Nome do tipo da entidade de negócio.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.IsRegistered(Colosoft.Reflection.TypeName)">
            <summary>
            Verifica se a o tipo da entidade já foi registrado.
            </summary>
            <param name="entityType">Nome do tipo da entidade de negócio.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.Registered(Colosoft.Reflection.TypeName)">
            <summary>
            Define que a o tipo da entidade de negócio foi registrado.
            </summary>
            <param name="entityType">Nome do tipo da entidade de negócio.</param>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.Register(System.Type)">
            <summary>
            Registra o tipo da entidade que será geranciada.
            </summary>
            <param name="entityType"></param>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="E:Colosoft.Business.EntityEventManager.RegisterEventInfoError">
            <summary>
            Evento acionado quando ocorre um erro ao registra as informações do 
            evento de uma entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityEventManager.Instance">
            <summary>
            Recupera a instancia do gerenciador e evento das entidades
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.EventSubscriptionInfo`1.#ctor(Colosoft.Business.EntityEventInfo,Colosoft.Reflection.TypeName,Colosoft.Domain.IExecuteSubscription{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="info">Informações do evento da entidade.</param>
            <param name="entityType">Nome completo do tipo da entidade.</param>
            <param name="subscription"></param>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.EventSubscriptionInfo`1.Execute(`0)">
            <summary>
            Executa a inscrição do evento.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.EventSubscriptionInfo`1.CanExecute(`0)">
            <summary>
            Verifica se pode executar a inscrição.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityEventManager.EventSubscriptionInfo`1.ToString">
            <summary>
            Recupera o texto que representqa a instancia
            </summary>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.EntityEventManager.EventSubscriptionInfo`1.Subscription">
            <summary>
            Inscrição.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityEventManager.EventSubscriptionInfo`1.Info">
            <summary>
            Informações da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityEventManager.EventSubscriptionInfo`1.EntityType">
            <summary>
            Nome completo do tipo da entidade do evento.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityEventSubscriptionMetadataAttribute">
            <summary>
            Atributo usado para recuperar os metadados a assinatura de um evento de entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityEventSubscriptionMetadataAttribute.GetMetadata(System.Type)">
            <summary>
            Recupera os metadados 
            </summary>
            <param name="exportType"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityEventType">
            <summary>
            Possíveis tipos de eventos das entidades.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.Initialized">
            <summary>
            Representa o evento acionado quando a entidade for inicializada.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.PropertyChanging">
            <summary>
            Representa o evento acionado quando uma propriedade da entidade
            estiver sendo alterada.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.PropertyChanged">
            <summary>
            Representa o evento acionado quando uma propriedade da entidade
            for alterada.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.Validating">
            <summary>
            Representa o evento acionado quando a entidade estiver sendo validada.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.Validated">
            <summary>
            Representa o evento acionado quando a entidade for validada.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.Saving">
            <summary>
            Representa o evento acionado quando a entidade estiver sendo salva.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.Saved">
            <summary>
            Representa o evento acionado quando a entidade for salva.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.Deleting">
            <summary>
            Representa o evento acionado quando a entidade estiver sendo apagada.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityEventType.Deleted">
            <summary>
            Representa o evento acionado quando a entidade for salva.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityInitializedEventArgs">
            <summary>
            Armazena os argumentos do evento acionado quando a entidade for inicializada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityInitializedEventArgs.#ctor(Colosoft.Business.IEntity)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Colosoft.Business.EntityInitializedEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityInicializedEventArgs`1">
            <summary>
            Armazena os argumentos dos evento Iniciaalized.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityInicializedEventArgs`1.#ctor(Colosoft.Business.IEntityEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="T:Colosoft.Business.EntityInitializedEvent">
            <summary>
            Representa o evento acionado qaundo a entidade for inicializada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPersistingEventArgs">
            <summary>
            Argumentos do evento acionado quando a entidade estiver sendo persistida.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityPersistingEventArgs.#ctor(Colosoft.Business.IEntity,Colosoft.Data.IPersistenceSession,Colosoft.Data.IPersistenceSession,Colosoft.Data.IPersistenceSession)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity"></param>
            <param name="session"></param>
            <param name="afterSession"></param>
            <param name="beforeSession"></param>
        </member>
        <member name="P:Colosoft.Business.EntityPersistingEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPersistingEventArgs.Session">
            <summary>
            Sessão de persistencia principal.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPersistingEventArgs.BeforeSession">
            <summary>
            Sessão de persistencia anterior.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPersistingEventArgs.AfterSession">
            <summary>
            Sessão de persistencia posterior.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPersistingEventArgs`1">
            <summary>
            Armazena os argumentos do evento acionado quando a entidade for apagada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityPersistingEventArgs`1.#ctor(Colosoft.Business.EntityPersistingEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPersistingEventArgs`1.Session">
            <summary>
            Sessão de persistencia principal.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPersistingEventArgs`1.BeforeSession">
            <summary>
            Sessão de persistencia anterior.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPersistingEventArgs`1.AfterSession">
            <summary>
            Sessão de persistencia posterior.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPersistingEvent">
            <summary>
            Representa o evento acionado quando a entidade estiver sendo persistida.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPropertyChangedEventArgs">
            <summary>
            Representa os parâmetros passados aos eventos de conclusão alteração de propriedade
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityPropertyChangedEventArgs.#ctor(Colosoft.Business.IEntity,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity">Instancia da entidade.</param>
            <param name="propertyName">Nome da propriedade.</param>
        </member>
        <member name="P:Colosoft.Business.EntityPropertyChangedEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPropertyChangedEventArgs.PropertyName">
            <summary>
            Nome da propriedade
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPropertyChangedEventArgs`1">
            <summary>
            Representa os parâmetros passados aos eventos de conclusão alteração de propriedade
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityPropertyChangedEventArgs`1.#ctor(Colosoft.Business.EntityPropertyChangedEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntityPropertyChangedEventArgs`1.PropertyName">
            <summary>
            Nome da propriedade
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPropertyChangedEvent">
            <summary>
            Representa o evento acionado quando uma propriedade da entidade for alterada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPropertyChangingEventArgs">
            <summary>
            Armazena os argumento do evento acionado quando
            uma propriedade da entidade estiver sendo alterada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityPropertyChangingEventArgs.#ctor(Colosoft.Business.IEntity,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity">Instancia da entidade.</param>
            <param name="propertyName">Nome da propriedade que está sendo alterada.</param>
        </member>
        <member name="P:Colosoft.Business.EntityPropertyChangingEventArgs.Entity">
            <summary>
            Instancia da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPropertyChangingEventArgs.Cancel">
            <summary>
            Identifica se é cancelar o evento.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPropertyChangingEventArgs.Message">
            <summary>
            Mensagem.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPropertyChangingEventArgs`1">
            <summary>
            Armazena os argumento do evento acionado quando
            uma propriedade da entidade estiver sendo alterada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityPropertyChangingEventArgs`1.#ctor(Colosoft.Business.EntityPropertyChangingEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntityPropertyChangingEventArgs`1.Cancel">
            <summary>
            Identifica se é cancelar o evento.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityPropertyChangingEventArgs`1.Message">
            <summary>
            Mensagem.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPropertyChangingEvent">
            <summary>
            Represnta o evento acionado quando uma propriedade da entidade estiver sendo alterada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySavedEventArgs">
            <summary>
            Armazena os argumentos do evento de saved da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntitySavedEventArgs.#ctor(Colosoft.Business.IEntity,System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity">Instancia da entidade associada.</param>
            <param name="success">Identifica se a operação foi executada com sucesso.</param>
            <param name="message">Messagem da operação.</param>
        </member>
        <member name="P:Colosoft.Business.EntitySavedEventArgs.Entity">
            <summary>
            Instancia da entidade associada
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySavedEventArgs.Success">
            <summary>
            Identifica se a entidade foi salva com sucesso.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySavedEventArgs.Message">
            <summary>
            Mensagem associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySavedEventArgs`1">
            <summary>
            Armazena os argumentos do evento de saved da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntitySavedEventArgs`1.#ctor(Colosoft.Business.EntitySavedEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntitySavedEventArgs`1.Success">
            <summary>
            Identifica se a entidade foi salva com sucesso.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySavedEventArgs`1.Message">
            <summary>
            Mensagem associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySavedEvent">
            <summary>
            Representa o evento acioando quando a entidade for salva.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySavingEventArgs">
            <summary>
            Armazena os argumentos do evento de saving da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntitySavingEventArgs.#ctor(Colosoft.Business.IEntity)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Colosoft.Business.EntitySavingEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySavingEventArgs.Cancel">
            <summary>
            Identifica se a operação foi cancelada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySavingEventArgs.Message">
            <summary>
            Mensagem associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySavingEventArgs`1">
            <summary>
            Armazena os argumentos do evento de saving da entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntitySavingEventArgs`1.#ctor(Colosoft.Business.EntitySavingEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntitySavingEventArgs`1.Cancel">
            <summary>
            Identifica se a operação foi cancelada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntitySavingEventArgs`1.Message">
            <summary>
            Mensagem associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySavingEvent">
            <summary>
            Representa o evento acionado quando a entidade estiver sendo salva.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityValidatedEventArgs">
            <summary>
            Representa os argumentos do evento acionado quando a entidade estiver
            sendo validada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityValidatedEventArgs.#ctor(Colosoft.Business.IEntity,Colosoft.Validation.ValidationResult)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity">Instancia da entidade do evento.</param>
            <param name="validationResult">Resultado da validação.</param>
        </member>
        <member name="P:Colosoft.Business.EntityValidatedEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityValidatedEventArgs.ValidationResult">
            <summary>
            Instancia do resultado da validação.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityValidatedEventArgs`1">
            <summary>
            Representa os argumentos do evento acionado quando a entidade estiver
            sendo validada.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityValidatedEventArgs`1.#ctor(Colosoft.Business.EntityValidatedEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntityValidatedEventArgs`1.ValidationResult">
            <summary>
            Instancia do resultado da validação.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityValidatedEvent">
            <summary>
            Evento aciaondo quando uma entidade for validada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityValidatingEventArgs">
            <summary>
            Representa os argumentos do evento acionado quando a entidade estiver
            sendo validada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityValidatingEventArgs.#ctor(Colosoft.Business.IEntity,Colosoft.Validation.ValidationResult)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entity"></param>
            <param name="validationResult">Instancia do resultado da validação.</param>
        </member>
        <member name="P:Colosoft.Business.EntityValidatingEventArgs.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityValidatingEventArgs.ValidationResult">
            <summary>
            Instancia do resultado da validação.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityValidatingEventArgs.Cancel">
            <summary>
            Identifica se é para cancelar a operação.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityValidatingEventArgs`1">
            <summary>
            Representa os argumentos do evento acionado quando a entidade estiver
            sendo validada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityValidatingEventArgs`1.#ctor(Colosoft.Business.EntityValidatingEventArgs)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Colosoft.Business.EntityValidatingEventArgs`1.ValidationResult">
            <summary>
            Instancia do resultado da validação.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityValidatingEventArgs`1.Cancel">
            <summary>
            Identitica se é para cancelar a operação.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityValidatingEvent">
            <summary>
            Evento acionado quando uma entidade estiver sendo validada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityDeletedEventSubscription">
            <summary>
            Assinatura do evento acionado quando a entidade for apagada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletedEventSubscription`1">
            <summary>
            Classe abstrada para tratar o evento Deleted da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityDeletedEventSubscription`1.Execute(Colosoft.Business.EntityDeletedEventArgs{`0})">
            <summary>
            Método acionado quando ocorrer o evento Deleted da entidade.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityDeletingEventSubscription">
            <summary>
            Assinatura do evento acionado quando a entidade estiver sendo apagada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityDeletingEventSubscription`1">
            <summary>
            Classe abstrada para tratar o evento Deleting da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityDeletingEventSubscription`1.Execute(Colosoft.Business.EntityDeletingEventArgs{`0})">
            <summary>
            Método acionado quando ocorrer o evento Deleting na entidade.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityDeletingWithPersistenceSessionEventSubscription">
            <summary>
            Assinatura do evento acionad quando a entidade estive sendo apada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.RegisterEntityEventInfoErrorArgs">
            <summary>
            Armazena os argumentos do erro ocorrido ao registrar 
            as informações do evento de uma entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.RegisterEntityEventInfoErrorArgs.#ctor(Colosoft.Reflection.TypeName,Colosoft.Business.EntityEventInfo,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeName"></param>
            <param name="eventInfo"></param>
            <param name="error"></param>
        </member>
        <member name="P:Colosoft.Business.RegisterEntityEventInfoErrorArgs.TypeName">
            <summary>
            Nome do tipo da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.RegisterEntityEventInfoErrorArgs.EventInfo">
            <summary>
            Informações do evento que deveria ser registrad.
            </summary>
        </member>
        <member name="P:Colosoft.Business.RegisterEntityEventInfoErrorArgs.Error">
            <summary>
            Erro associado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.RegisterEntityEventInfoErrorHandler">
            <summary>
            Representa o método do evento acionado quando ocorre um erro
            ao registrar as informações do evento de uma entidade.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityInitializedEventSubscription">
            <summary>
            Assinatura do evento acionado quando a entidade for inicializas.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityInitializedEventSubscription`1">
            <summary>
            Classe abstrada para tratar o evento Initialized da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityInitializedEventSubscription`1.Execute(Colosoft.Business.EntityInicializedEventArgs{`0})">
            <summary>
            Método usado para tratar a execução do evento.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityPersistingEventSubscription">
            <summary>
            Assinatura do evento acionado quando estiver ocorrendo a persistencia da entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPersistingEventSubscription`1">
            <summary>
            Classe abstrada para tratar o evento de persistencia da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityPersistingEventSubscription`1.Execute(Colosoft.Business.EntityPersistingEventArgs{`0})">
            <summary>
            Método usado para tratar a execução do evento.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityPropertyChangedEventSubscription">
            <summary>
            Assinatura do evento acionado quando uma propriedade da entidade for alterada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPropertyChangedEventSubscription`1">
            <summary>
            Classe abstrada para tratar o evento PropertyChanged da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityPropertyChangedEventSubscription`1.Execute(Colosoft.Business.EntityPropertyChangedEventArgs{`0})">
            <summary>
            Método acionado quando ocorrer o evento PropertyChanged na entidade.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityPropertyChangingEventSubscription">
            <summary>
            Assinatura do evento acionado quando uma propriedade da entidade for alterada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityPropertyChangingEventSubscription`1">
            <summary>
            Classe abstrada para tratar o evento PropertyChanging da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityPropertyChangingEventSubscription`1.Execute(Colosoft.Business.EntityPropertyChangingEventArgs{`0})">
            <summary>
            Método acionado quando ocorrer o evento PropertyChanging na entidade.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntitySavedEventSubscription">
            <summary>
            Assinatura do evento acionado quando a entidade for salva.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySavedEventSubcription`1">
            <summary>
            Classe abstrada para tratar o evento Saved da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntitySavedEventSubcription`1.Execute(Colosoft.Business.EntitySavedEventArgs{`0})">
            <summary>
            Método acionado quando ocorrer o evento de Saved da entidade.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntitySavingEventSubscription">
            <summary>
            Assinatura do evento acionado quando uma entidade estiver sendo salva. 
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntitySavingEventSubscription`1">
            <summary>
            Classe abstrada para tratar o evento Saving da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntitySavingEventSubscription`1.Execute(Colosoft.Business.EntitySavingEventArgs{`0})">
            <summary>
            Método acionado quando o evento for executado.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityValidatedEventSubscription">
            <summary>
            Assinatura do evento acionado quando a entidade for validada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityValidatedEventSubscription`1">
            <summary>
            Classe abstrada para tratar o evento Validated da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityValidatedEventSubscription`1.Execute(Colosoft.Business.EntityValidatedEventArgs{`0})">
            <summary>
            Método acionado quando ocorre o evento Validated na entidade.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityValidatingEventSubscription">
            <summary>
            Assinatura do evento acionado quando a entidade estiver sendo validada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityValidatingEventSubcription`1">
            <summary>
            Classe abstrada para tratar o evento Validating da Entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityValidatingEventSubcription`1.Execute(Colosoft.Business.EntityValidatingEventArgs{`0})">
            <summary>
            Método executado quando ocorrer o evento Validating na entidade.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Colosoft.Business.NotifyCollectionChangingEventHandler`1">
            <summary>
            Evento para alterção em listas.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Business.NotifyCollectionChangingAction">
            <summary>
            Ações de alteações em listas.
            </summary>
        </member>
        <member name="F:Colosoft.Business.NotifyCollectionChangingAction.Add">
            <summary>
            One or more items were added to the collection.
            </summary>
        </member>
        <member name="F:Colosoft.Business.NotifyCollectionChangingAction.Remove">
            <summary>
            One or more items were removed from the collection.
            </summary>
        </member>
        <member name="F:Colosoft.Business.NotifyCollectionChangingAction.Replace">
            <summary>
            One or more items were replaced in the collection.
            </summary>
        </member>
        <member name="F:Colosoft.Business.NotifyCollectionChangingAction.Move">
            <summary>
            One or more items were moved within the collection.
            </summary>
        </member>
        <member name="F:Colosoft.Business.NotifyCollectionChangingAction.Reset">
            <summary>
            The content of the collection changed dramatically.
            </summary>
        </member>
        <member name="T:Colosoft.Business.NotifyCollectionChangingEventArgs`1">
            <summary>
            Parametros para o evento de alteração em lista.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:Colosoft.Business.NotifyCollectionChangingEventArgs`1.Action">
            <summary>
            Ação.
            </summary>
        </member>
        <member name="P:Colosoft.Business.NotifyCollectionChangingEventArgs`1.NewItems">
            <summary>
            Itens inseridos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.NotifyCollectionChangingEventArgs`1.OldItems">
            <summary>
            Itens removidos.
            </summary>
        </member>
        <member name="P:Colosoft.Business.NotifyCollectionChangingEventArgs`1.StartNewItems">
            <summary>
            Indice de inserção de novos items.
            </summary>
        </member>
        <member name="P:Colosoft.Business.NotifyCollectionChangingEventArgs`1.StartOldItems">
            <summary>
            Indice de inserção de items antigos.
            </summary>
        </member>
        <member name="T:Colosoft.Business.RegisterEntityEventException">
            <summary>
            Representa os erros acionado quando for registrado algum evento para a entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.RegisterEntityEventException.#ctor(Colosoft.IMessageFormattable,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Colosoft.Business.ExtensionDouble">
            <summary>
            Extensão para <c>double</c>.
            </summary>
        </member>
        <member name="M:Colosoft.Business.ExtensionDouble.#cctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.ExtensionDouble.IsClose(System.Double,System.Double)">
            <summary>
            Verifica se os valores estão próximos.
            </summary>
            <param name="d1">Valor 1.</param>
            <param name="d2">Valor 2.</param>
            <returns>Verdadeiro se os valores estão próximos.</returns>
        </member>
        <member name="M:Colosoft.Business.ExtensionDouble.IsNotClose(System.Double,System.Double)">
            <summary>
            Verifica se os valores não estão próximos.
            </summary>
            <param name="d1">Valor 1.</param>
            <param name="d2">Valor 2.</param>
            <returns>Verdadeiro se os valores não estão próximos.</returns>
        </member>
        <member name="T:Colosoft.Business.FilterOption">
            <summary>
            Tipos de filtros para os items
            </summary>
        </member>
        <member name="F:Colosoft.Business.FilterOption.All">
            <summary>
            Todos
            </summary>
        </member>
        <member name="F:Colosoft.Business.FilterOption.Activated">
            <summary>
            Somente ativos
            </summary>
        </member>
        <member name="F:Colosoft.Business.FilterOption.Expired">
            <summary>
            Expirados
            </summary>
        </member>
        <member name="T:Colosoft.Business.FilterOptionHelper">
            <summary>
            Filter option helper
            </summary>
        </member>
        <member name="M:Colosoft.Business.FilterOptionHelper.GetFilterOptions">
            <summary>
            Recupera os filtros
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.GetEntityDescriptorsEnumerable`1">
            <summary>
            Implementação do enumerable dos descritores de entidades.
            </summary>
        </member>
        <member name="M:Colosoft.Business.GetEntityDescriptorsEnumerable`1.#ctor(Colosoft.Business.IEntityLoader,Colosoft.Query.Queryable,Colosoft.Query.ISourceContext,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoader">Loader.</param>
            <param name="queryable">Consulta que será realizado.</param>
            <param name="sourceContext">Contexto de origem dos dados.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
        </member>
        <member name="M:Colosoft.Business.GetEntityDescriptorsEnumerable`1.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.GetEntityDescriptorsEnumerable`1.Register(Colosoft.Collections.INotifyCollectionChangedObserverContainer)">
            <summary>
            Registra os observers no container.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Colosoft.Business.GetEntityDescriptorsEnumerable`1.GetEnumerator">
            <summary>
            Recupera o enumerador de resultados.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.GetEntityDescriptorsEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador associado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.GetEntityDescriptorsEnumerable`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.GetEntityDescriptorsEnumerable`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.GetEntityDescriptorsEnumerable`1.IsDisposed">
            <summary>
            Identifica se a instancia foi liberada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.BeforeEntityActionResult">
            <summary>
            Representa o resultado do método acionado
            antes de salvar a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.BeforeEntityActionResult.Cancel">
            <summary>
            Cancela a operação.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityActionActivity">
            <summary>
            Assinatura das classes que tratam ações das entidades.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityActionActivity.BeforeAction(Colosoft.Business.IEntity)">
            <summary>
            Método acionado antes de salva a entidade.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Colosoft.Business.IEntityActionActivity.AfterAction(Colosoft.Business.IEntity)">
            <summary>
            Método acionado depois de salvar a entidade.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityActionActivity`1">
            <summary>
            Assinatura das classes que tratam ações das entidades.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityActionActivity`1.BeforeAction(`0)">
            <summary>
            Método acionado antes de salva a entidade.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Colosoft.Business.IEntityActionActivity`1.AfterAction(`0)">
            <summary>
            Método acionado depois de salvar a entidade.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityDescriptorCreator">
            <summary>
            Assinatura das classes responsáveis por criar <see cref="T:Colosoft.IEntityDescriptor"/>.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityDescriptorCreator.CreateEntityDescriptor">
            <summary>
            Cria o descritor da entidade.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityDescriptorCreator">
            <summary>
            Implementação básico do criador de <see cref="T:Colosoft.IEntityDescriptor"/>
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorCreator.#ctor(Colosoft.Business.IEntityLoader)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="loader">Instancia do loader da entidade associada.</param>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorCreator.CreateEntityDescriptor">
            <summary>
            Cria uma nova instancia para o descriptor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDescriptorCreator.Create">
            <summary>
            Cria uma nova instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.IEntityDynamicChildTypesProvider">
            <summary>
            Assinatura do provedor de tipos de filhos dinamicos.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityDynamicChildTypesProvider.GetAllTypes">
            <summary>
            Recupera a relação de todos os filhos dinâmicos.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityDynamicChildTypesProvider.GetType(Colosoft.Reflection.TypeName)">
            <summary>
            Recupera o tipo da entidade do filho dinamico.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.IEntityDynamicChildTypesModel">
            <summary>
            Assinatura de um modelo de dados que armazena os tipos de um filho dinâmico.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IEntityDynamicChildTypesModel.BusinessEntityTypeId">
            <summary>
            Identificador do tipo da entidade de negócio.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityDynamicChildTypesLoader">
            <summary>
            Assinatura da classe provedora dos 
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityDynamicChildTypesLoader.Load(System.Type)">
            <summary>
            Carrega os tipos dos filhos dinâmicos com base no tipo do modelo de dados informado.
            </summary>
            <param name="dataModelType">Tipo do modelo de dados que contém as informações dos tipos de filhos dinâmicos.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityDynamicChildTypesProvider`1">
            <summary>
            Implementação base para o provedor dos tipos dos filhos dinâmicos.
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildTypesProvider`1.GetAllTypes">
            <summary>
            Recupera a relação de todos os filhos dinâmicos.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityDynamicChildTypesProvider`1.GetType(Colosoft.Reflection.TypeName)">
            <summary>
            Recupera o tipo da entidade do filho dinamico.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.IEntityFlow">
            <summary>
            Contrato para fluxo de entidades
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityFlow.LoadEntityStartInstanceStage(Colosoft.Business.IEntity)">
            <summary>
            Carrega as informações de manutenção de status da entidade
            </summary>
            <param name="entity">Entidade base</param>
            <returns>Entidade com o estado carregado</returns>
        </member>
        <member name="T:Colosoft.Business.EntityFromModelCreatorHandler">
            <summary>
            Assinatura do método usado para cria um entidade com base no modelo de dados.
            </summary>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="entityTypeManager">Gerenciador do tipo da entidade.</param>
            <param name="dataModel">Modelo de dados que será usado com base.</param>
            <param name="sourceContext">Contexto da origem dos dados.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.LazyDataState">
            <summary>
            Estado dos dados de carga tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.LazyDataState.Entity">
            <summary>
            Instancia da entidade associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderExecuteQueryEventArgs">
            <summary>
            Armazena os argumentos do evento acionado quando a consulta de um filho for executada.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderExecuteQueryEventArgs.#ctor(System.Type,System.Type,Colosoft.Query.ReferenceParameterValueCollection,System.Collections.Generic.IEnumerable{Colosoft.Business.IEntity})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="dataModelType">Tipo do modelo de dados.</param>
            <param name="entityType">Tipo da entidade do resultado.</param>
            <param name="referenceParameterValues">Valores dos parametros de referencia.</param>
            <param name="result"></param>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderExecuteQueryEventArgs.EntityType">
            <summary>
            Tipo da entidade associada com o resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderExecuteQueryEventArgs.DataModelType">
            <summary>
            Tipo do modelo de dados associado com o resultado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderExecuteQueryEventArgs.ReferenceParameterValues">
            <summary>
            Valores dos parametros de referencia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderExecuteQueryEventArgs.Result">
            <summary>
            Resultado
            </summary>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderExecuteQueryHandler">
            <summary>
            Representa o método acionado quando a consulta do filho for executada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Colosoft.Business.IEntityLoaderLinksContainer">
            <summary>
            Assinatura de um container de links
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityLoaderLinksContainer.AddLink(System.String,Colosoft.Business.IEntity)">
            <param name="linkName">Nome do link.</param>
            <param name="entity">Instancia da entidade do link.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoaderLinksContainer.GetSingle``1(System.String)">
            <summary>
            Recupera a instancia do link pelo nome informado.
            </summary>
            <typeparam name="TEntity">Tipo da entidade.</typeparam>
            <param name="name">Nome do link.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.IEntityLoaderLinksContainer.Get``1(System.String)">
            <summary>
            Recupera a instancia do filho pelo nome informado.
            </summary>
            <typeparam name="TEntity">Tipo da entidade.</typeparam>
            <param name="name">Nome do link.</param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.IEntityLoaderLinksContainer.Item(System.String)">
            <summary>
            Recupera a instancia do link pelo nome informado.
            </summary>
            <param name="name">Nome do link.</param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.EntityLoaderLinksContainer">
            <summary>
            Implementação do container dos links.
            </summary>
        </member>
        <member name="F:Colosoft.Business.EntityLoaderLinksContainer._itemsLoaded">
            <summary>
            Armazena a relação dos items que foram carregados
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinksContainer.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{System.String,Colosoft.Business.IEntity}})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="links">Links que serão usados na carga.</param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinksContainer.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinksContainer.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinksContainer.AddLink(System.String,Colosoft.Business.IEntity)">
            <param name="linkName">Nome do link.</param>
            <param name="entity">Instancia da entidade do link.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinksContainer.Get``1(System.String)">
            <summary>
            Recupera a instancia do link pelo nome informado.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinksContainer.GetSingle``1(System.String)">
            <summary>
            Recupera uma entidade simples do link pelo nome informado,
            </summary>
            <typeparam name="TEntity">Tipo da entidade do link.</typeparam>
            <param name="name">Nome do link.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinksContainer.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.EntityLoaderLinksContainer.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.EntityLoaderLinksContainer.Item(System.String)">
            <summary>
            Recupera a instancia do link pelo nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.DataModelRecordKey`1">
            <summary>
            Representa o associação entre um modelo de dados e a chave do registro.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="M:Colosoft.Business.DataModelRecordKey`1.#ctor(`0,Colosoft.Query.RecordKey)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="dataModel">Instancia do modelo de dados.</param>
            <param name="key">Chave do registro.</param>
        </member>
        <member name="P:Colosoft.Business.DataModelRecordKey`1.DataModel">
            <summary>
            Instancia do modelo de dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.DataModelRecordKey`1.Key">
            <summary>
            Chave que representa o registro.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IEntityObserver">
            <summary>
            Contratro a ser implementado para classes visuais que desejam observar alterações de propriedades de Entidades
            </summary>
        </member>
        <member name="M:Colosoft.Business.IEntityObserver.OnPropertyChanged(Colosoft.Business.IEntity,System.String)">
            <summary>
            Chamado a cada vez que a propriedade do objeto é alterada
            </summary>
            <param name="instance">Instância do objeto</param>
            <param name="propertyName">Nome da propriedade</param>
        </member>
        <member name="T:Colosoft.Business.DispatchNotificationLevel">
            <summary>
            Possível níveis para realizar o despacho das notificações.
            </summary>
        </member>
        <member name="F:Colosoft.Business.DispatchNotificationLevel.OneLevel">
            <summary>
            Despachar mensagens apenas do primeiro nível.
            </summary>
        </member>
        <member name="F:Colosoft.Business.DispatchNotificationLevel.All">
            <summary>
            Despachar mensagens de todos os nível;
            </summary>
        </member>
        <member name="T:Colosoft.Business.INotificationContainer">
            <summary>
            Assinatura das classe que contém notificações.
            </summary>
        </member>
        <member name="M:Colosoft.Business.INotificationContainer.DispatchNotifications(Colosoft.Notifications.INotificationDispatcher,Colosoft.Business.DispatchNotificationLevel)">
            <summary>
            Despacha as notificações associadas com a instancia.
            </summary>
            <param name="dispatcher">Instancia responsável por despachar as notificações.</param>
            <param name="level">Nível no qual as mensagens serão despachadas.</param>
        </member>
        <member name="T:Colosoft.Business.NotifyPropertyChangedHandler">
            <summary>
            Método para notificação de alteração de evento
            </summary>
            <param name="properties">propriedades alteradas</param>
        </member>
        <member name="T:Colosoft.Business.InstanceState">
            <summary>
            Contrato para tipos que manterão o estado de instâncias
            </summary>
        </member>
        <member name="F:Colosoft.Business.InstanceState._entitySettings">
            <summary>
            Configurações da entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InstanceState.#ctor(Colosoft.Business.IEntity,Colosoft.Business.IEntityTypeManager,Colosoft.Validation.IValidationManager,System.ComponentModel.PropertyChangedEventHandler,System.Globalization.CultureInfo)">
            <summary>
            Construtor padrão da classe
            </summary>
            <param name="entity">Entidade associada.</param>
            <param name="entityTypeManager">Gerenciador dos tipos de entidades.</param>
            <param name="validationManager">Instancia do gerenciador de validações.</param>
            <param name="propertyChangeNotify">Método que receberá notificação de evento</param>
            <param name="culture"></param>
        </member>
        <member name="M:Colosoft.Business.InstanceState.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InstanceState.EntityPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acionado quando qualquer propriedade da entidade for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.InstanceState.GetProperty(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Recupera os dados da propriedade.
            </summary>
            <param name="startString"></param>
            <param name="propertyName"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceState.GetSpecializationString(System.String,Colosoft.Reflection.TypeName)">
            <summary>
            Recupera a string da especialização do tipo informado.
            </summary>
            <param name="specialization"></param>
            <param name="pTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceState.StateItemChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acionado quando um item de estado for alterado.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.InstanceState.GetEnumerator">
            <summary>
            Recupera o enumerador dos itens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceState.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceState.OnChanged(Colosoft.Validation.IStatebleItem,System.String)">
            <summary>
            Notifica que o estado foi alterado.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InstanceState.NotifyStatePropertyChanged(System.String)">
            <summary>
            Notifica que uma propriedade do estado foi alterada.
            </summary>
            <param name="propertyName">Nome da propriedade.</param>
        </member>
        <member name="M:Colosoft.Business.InstanceState.ReloadTypeSettings">
            <summary>
            Recarrega as definições de validação de propriedades para a instância.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InstanceState.LoadTypeSettings(System.Globalization.CultureInfo)">
            <summary>
             Carrega as configurações do tipo.
            </summary>
            <param name="culture"></param>
        </member>
        <member name="M:Colosoft.Business.InstanceState.CreatePropertyState(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Cria o estado da propriedade.
            </summary>
            <param name="propertyName"></param>
            <param name="identifier"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceState.CreatePropertyState(System.String,Colosoft.Validation.IPropertySettingsInfo,System.String,System.Globalization.CultureInfo)">
            <summary>
            Cria o estado da propriedade.
            </summary>
            <param name="propertyName"></param>
            <param name="propertyInfo"></param>
            <param name="identifier"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceState.GetIdentifierSpecialize(Colosoft.Reflection.TypeName,System.String,System.String,System.String,System.Collections.Generic.List{Colosoft.Reflection.TypeName})">
            <summary>
            Recupera os identificadores da especialização.
            </summary>
            <param name="entityTypeName">Tipo da entidade.</param>
            <param name="startString"></param>
            <param name="clearPath">Caminho usado para limpeza na comparação</param>
            <param name="startPropertyName">Nome da propriedade de inicio para recuperar</param>
            <param name="nestedTypes">Relação dos tipos aninhadas encontrados.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceState.PutsPropertiesIdentifier(Colosoft.Reflection.TypeName,System.Collections.Generic.List{Colosoft.Reflection.TypeName},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String,System.String)">
            <summary>
            Adiciona os identificadores das propriedades.
            </summary>
            <param name="entityTypeName">Tipo da entidade.</param>
            <param name="nestedTypes">Rleção dos tipos aninhados.</param>
            <param name="listToAppend">Lista onde será adicionada a relação do caminho com a especiação para o caminho da propriedade</param>
            <param name="startString">Texto com o inicio do caminho para alcançar a propriedade.</param>
            <param name="clearPath"></param>
            <param name="propertyPath">Caminho para alcançar a propriedade.</param>
            <param name="currentSpecilizeString">Texto que representa a especialização.</param>
        </member>
        <member name="M:Colosoft.Business.InstanceState.CreatePropertyStateByIdentifier(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Cria o estado da propriedade pelo identificador.
            </summary>
            <param name="propertyName">Nome da propriedade.</param>
            <param name="identifier"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceState.ClearStateCache">
            <summary>
            Reinicia o cache em caso afirmativo.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InstanceState.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.InstanceState.Dispose">
            <summary>
            Remove as referências.
            </summary>
        </member>
        <member name="E:Colosoft.Business.InstanceState.StateChanged">
            <summary>
            Evento acionado quando o estado for alterado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.Parameters">
            <summary>
            Parametros do controle de estado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.IsReadOnly">
            <summary>
            Identifica se a entidade está em estado de somente leitura.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.EntityTypeStartString">
            <summary>
            Recupera a string de inicio para o tipo da entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.Type">
            <summary>
            Tipo base do item.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.PropertyAttributes">
            <summary>
            Dicionário com a relação dos attributos das propriedades do tipo associado com o estado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.Item(System.String)">
            <summary>
            Retorna a propriedade desejada
            </summary>
            <param name="propertyName">Nome da propriedade</param>
            <returns>Estado da propriedade</returns>
        </member>
        <member name="P:Colosoft.Business.InstanceState.IsDisposed">
            <summary>
            Identifica se a instancia já foi liberada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.InstanceState.PropertySettingsInfo">
            <summary>
            Armazena as informações da configuração da propriedade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InstanceState.PropertySettingsInfo.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="identifier"></param>
        </member>
        <member name="P:Colosoft.Business.InstanceState.PropertySettingsInfo.CopyValue">
            <summary>
            Indica se a propriedade será ou não copiada ao copiar o objeto.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.PropertySettingsInfo.Identifier">
            <summary>
            Identificador da propriedade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.PropertySettingsInfo.InputRulesGroupId">
            <summary>
            Identificador do grupo de regras de entrada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.PropertySettingsInfo.ReloadSettings">
            <summary>
            Identifica se recarrega as configurações.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InstanceState.PropertySettingsInfo.ValidationId">
            <summary>
            Identificador da validação associada.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IInstanceStateObserver">
            <summary>
            Assinatura da classe reponsável por monitorar os eventos
            ocorridos nos InstanceState do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IInstanceStateObserver.OnEntitySpecializationError(Colosoft.Reflection.TypeName,Colosoft.Validation.IEntitySpecialization,System.Exception)">
            <summary>
            Notifica que ocorreu um erro ao carregar as expecialização para a entidade.
            </summary>
            <param name="entityTypeName">Nome da entidade na qual a especialização foi carregada.</param>
            <param name="specialization">Instancia da especialização caso ela tenha sido carregada.</param>
            <param name="error">Error ocorrido.</param>
        </member>
        <member name="T:Colosoft.Business.AggregateInstanceStateObserver">
            <summary>
            Agreagador dos observers <see cref="T:Colosoft.Business.IInstanceStateObserver"/>.
            </summary>
        </member>
        <member name="M:Colosoft.Business.AggregateInstanceStateObserver.OnEntitySpecializationError(Colosoft.Reflection.TypeName,Colosoft.Validation.IEntitySpecialization,System.Exception)">
            <summary>
            Notifica que ocorreu um erro ao carregar as expecialização para a entidade.
            </summary>
            <param name="entityTypeName">Nome da entidade na qual a especialização foi carregada.</param>
            <param name="specialization">Instancia da especialização caso ela tenha sido carregada.</param>
            <param name="error">Error ocorrido.</param>
        </member>
        <member name="T:Colosoft.Business.InstanceStateManager">
            <summary>
            Classe que gerencia os estados de instancia do sistema.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InstanceStateManager.#cctor">
            <summary>
            Construtor estático.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InstanceStateManager.GetInfo(Colosoft.Reflection.TypeName)">
            <summary>
            Recupera a instancia das informações da entidade.
            </summary>
            <param name="entityTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceStateManager.ContainsSpecializationError(Colosoft.Reflection.TypeName)">
            <summary>
            Verifica se o tipo da entidade possui erro na carga da especialização.
            </summary>
            <param name="entityTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InstanceStateManager.RegisterSpecializationError(Colosoft.Reflection.TypeName,Colosoft.Validation.IEntitySpecialization,System.Exception)">
            <summary>
            Registra um erro na carga da expecialização entidade.
            </summary>
            <param name="entityTypeName"></param>
            <param name="entitySpecialization"></param>
            <param name="error"></param>
        </member>
        <member name="P:Colosoft.Business.InstanceStateManager.Observer">
            <summary>
            Instancia do observer associado.
            </summary>
        </member>
        <member name="F:Colosoft.Business.InstanceStateManager.Info.ContainsSpecializationError">
            <summary>
            Identifica que está com erro na especialização.
            </summary>
        </member>
        <member name="T:Colosoft.Business.InvalidStateble">
            <summary>
            Representa um Stateble inválido;
            </summary>
        </member>
        <member name="F:Colosoft.Business.InvalidStateble.Instance">
            <summary>
            Instancia única da classe.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InvalidStateble.#ctor">
            <summary>
            Construtor privado.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InvalidStateble.ClearStateCache">
            <summary>
            Limpa o estado do cache.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InvalidStateble.NotifyStatePropertyChanged(System.String)">
            <summary>
            Notifica a alteração de uma propriedade.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Colosoft.Business.InvalidStateble.ReloadTypeSettings">
            <summary>
            Recarrega as configurações.
            </summary>
        </member>
        <member name="M:Colosoft.Business.InvalidStateble.GetEnumerator">
            <summary>
            Recuppera o enumerador dos itens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InvalidStateble.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador dos itens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.InvalidStateble.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="E:Colosoft.Business.InvalidStateble.StateChanged">
            <summary>
            Evento acionado quando o estado for alterado.
            </summary>
        </member>
        <member name="E:Colosoft.Business.InvalidStateble.PropertyChanged">
            <summary>
            Método acionado quando uma propriedade for alterada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InvalidStateble.Type">
            <summary>
            Tipo do item.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InvalidStateble.IsReadOnly">
            <summary>
            Identifica se a instancia é somente leitura.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InvalidStateble.Parameters">
            <summary>
            Parametros.
            </summary>
        </member>
        <member name="P:Colosoft.Business.InvalidStateble.Item(System.String)">
            <summary>
            Recupera o item associado com a nome da propriedade.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.InvalidStateble.InvalidStatebleItem">
            <summary>
            Implementação para um item inválido.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IPrint">
            <summary>
            Contrato a ser implementado por objetos que podem ser impressos.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IPrint.Print">
            <summary>
            Imprime o objeto.
            </summary>
        </member>
        <member name="T:Colosoft.Business.IPrintChild">
            <summary>
            Classes filhas que enviarão informações de impressão para a venda.
            </summary>
        </member>
        <member name="M:Colosoft.Business.IPrintChild.GetPrintInformation(Colosoft.Business.IPrint)">
            <summary>
            Obtem informações de impressão.
            </summary>
            <param name="ownerObject"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.IProxyListItem`2">
            <summary>
            Interface para item de lista proxy.
            </summary>
            <typeparam name="TBusiness"></typeparam>
            <typeparam name="TPointer"></typeparam>
        </member>
        <member name="P:Colosoft.Business.IProxyListItem`2.Data">
            <summary>
            Conteúdo encapsulado pelo item.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IProxyListItem`2.IsSelected">
            <summary>
            Indicador do estado de seleção do item.
            </summary>
        </member>
        <member name="P:Colosoft.Business.IProxyListItem`2.IsReadOnly">
            <summary>
            Indica se o estado dos itens da coleção pode ser alterado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ISimpleTraceableEntity">
            <summary>
            Assinatura da entidade de negócio rastreável.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ISimpleTraceableEntity.CreatedDate">
            <summary>
            Data de criação do registro.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ISimpleTraceableEntity.CreatedProfileId">
            <summary>
            Identificador do perfil usado na criação dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ISimpleTraceableEntity.CreatedProfile">
            <summary>
            Informações do perfil que criou a entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ISimpleTraceableEntity`1">
            <summary>
            Assinatura da entidade de negócio rastreável.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ITraceableEntity">
            <summary>
            Assinatura da entidade de negócio rastreável.
            </summary>
        </member>
        <member name="M:Colosoft.Business.ITraceableEntity.Deactivate">
            <summary>
            Desativa a entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.ITraceableEntity.Activate">
            <summary>
            Ativa a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ITraceableEntity.ActivatedDate">
            <summary>
            Data de ativação dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ITraceableEntity.ExpiredDate">
            <summary>
            Data de expiração.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ITraceableEntity`1">
            <summary>
            Assinatura da entidade de negócio rastreável.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ITraceableEntityProfileInfoProvider">
            <summary>
            Assinatura do provedor das informações do perfil associado com a entidade rastreável.
            </summary>
        </member>
        <member name="M:Colosoft.Business.ITraceableEntityProfileInfoProvider.GetProfileInfo(Colosoft.Business.ISimpleTraceableEntity)">
            <summary>
            Recupera as informações do perfil associado com a entidade.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.ITraceableEntityProfileInfo">
            <summary>
            Assinatura das informações do perfil associado com a entidade rastreável.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ITraceableEntityProfileInfo.ProfileId">
            <summary>
            Identificador do perfil.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ITraceableEntityProfileInfo.UserId">
            <summary>
            Identificador do usuário associado com o perfil.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ITraceableEntityProfileInfo.FullName">
            <summary>
            Nome do perfil.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ITraceableEntityProfileInfo.UserName">
            <summary>
            Nome do usuário associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ITraceableEntityProfileInfo.UserFullName">
            <summary>
            Nome completo do usuário associado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.LinkCreatorArgs">
            <summary>
            Argumentos para o método que cria uma entidade de link.
            </summary>
        </member>
        <member name="M:Colosoft.Business.LinkCreatorArgs.#ctor(Colosoft.Query.ISourceContext,Colosoft.Data.IModel,System.Boolean,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="sourceContext"></param>
            <param name="childDataModel"></param>
            <param name="isLazy"></param>
            <param name="uiContext"></param>
        </member>
        <member name="P:Colosoft.Business.LinkCreatorArgs.SourceContext">
            <summary>
            Contexto de origem usado na consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Business.LinkCreatorArgs.ChildDataModel">
            <summary>
            Instancia do modelo de dados do filho.
            </summary>
        </member>
        <member name="P:Colosoft.Business.LinkCreatorArgs.IsLazy">
            <summary>
            Identifica se é para ser feita a carga tardia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.LinkCreatorArgs.UIContext">
            <summary>
            Contexto da interface com o usuário
            </summary>
        </member>
        <member name="T:Colosoft.Business.LinkCreatorHandler">
            <summary>
            Assinatura do método usado para criar um link com base 
            no modelo de dados do filho.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.LoaderNotFoundException">
            <summary>
            Representa o erro ocorrido quando o loader não for encontrado
            </summary>
        </member>
        <member name="M:Colosoft.Business.LoaderNotFoundException.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Colosoft.Business.LoaderNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Colosoft.Business.LoadOptions">
            <summary>
            Possíveis opções de carga.
            </summary>
        </member>
        <member name="F:Colosoft.Business.LoadOptions.None">
            <summary>
            Nenhuma
            </summary>
        </member>
        <member name="F:Colosoft.Business.LoadOptions.ChildrenContentLazy">
            <summary>
            Identifica se é para carregar os filhos e o conteúdo em modo lazy.
            </summary>
        </member>
        <member name="F:Colosoft.Business.LoadOptions.LinksContentLazy">
            <summary>
            Identifica se é para carregar os links e o conteúdo em modo lazy.
            </summary>
        </member>
        <member name="F:Colosoft.Business.LoadOptions.Lazy">
            <summary>
            Identifica se é para carregar tudo em modo Lazy.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ObserverControl">
            <summary>
            Representa um controle de observadores de eventos
            </summary>
        </member>
        <member name="F:Colosoft.Business.ObserverControl._changedProperties">
            <summary>
            Lista das propriedades que foram alteradas
            </summary>
        </member>
        <member name="F:Colosoft.Business.ObserverControl._observers">
            <summary>
            Lista de observadores das alterações de propriedades
            </summary>
        </member>
        <member name="M:Colosoft.Business.ObserverControl.StartFlush(Colosoft.Business.IEntity)">
            <summary>
            Notifica os clientes de uma alteração de propriedade antes do evento acionado pelo .Net
            </summary>
            <param name="entity">IEntity entidade que foi alterada</param>
        </member>
        <member name="M:Colosoft.Business.ObserverControl.EndFlush(Colosoft.Business.IEntity)">
            <summary>
            Ocorre após notificar os observadores e os eventos do .Net
            </summary>
            <param name="entity">IEntity entidade que foi alterada</param>
        </member>
        <member name="M:Colosoft.Business.ObserverControl.RegisterNotify(System.String)">
            <summary>
            Registra uma alteração em uma propriedade
            </summary>
            <param name="propertyName">Nome da propriedade</param>
        </member>
        <member name="M:Colosoft.Business.ObserverControl.Raise(Colosoft.Business.Entity,System.String)">
            <summary>
            Dispara o evento aos observadores
            </summary>
            <param name="entity">Entidade que gerou o evento</param>
            <param name="propertyName">Nome da propriedade que ocasionou o evento</param>
        </member>
        <member name="M:Colosoft.Business.ObserverControl.op_Addition(Colosoft.Business.ObserverControl,Colosoft.Business.IEntityObserver)">
            <summary>
            Adiciona um observador ao controle
            </summary>
            <param name="control">Controle base</param>
            <param name="newObserver">Novo observador</param>
            <returns>Controle base com observador anexado</returns>
        </member>
        <member name="M:Colosoft.Business.ObserverControl.op_Subtraction(Colosoft.Business.ObserverControl,Colosoft.Business.IEntityObserver)">
            <summary>
            Remove um observador do controle
            </summary>
            <param name="control">Controle base</param>
            <param name="removeObserver">Observador a ser removido</param>
            <returns>Controle base sem o observador</returns>
        </member>
        <member name="P:Colosoft.Business.ObserverControl.HasObserver">
            <summary>
            Indica se há ou não observadores de evento registrado
            </summary>
        </member>
        <member name="P:Colosoft.Business.ObserverControl.ChangedProperties">
            <summary>
            Lista das propriedades que foram alteradas
            </summary>
        </member>
        <member name="T:Colosoft.Business.OperationResult">
            <summary>
            Armazena o resultado de qualquer operação que necessite de retorno.
            </summary>
        </member>
        <member name="M:Colosoft.Business.OperationResult.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.OperationResult.#ctor(System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="success">Identifica se a operação foi realizada com sucesso.</param>
            <param name="message">Mensagem do resultado.</param>
        </member>
        <member name="M:Colosoft.Business.OperationResult.op_Implicit(Colosoft.Business.OperationResult)~System.Boolean">
            <summary>
            Converte implicitamente para um Boolean.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Business.OperationResult.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema XML do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.OperationResult.GetSchema">
            <summary>
            Recupera o esquema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.OperationResult.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê o xml.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Business.OperationResult.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escreve o xml.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Business.OperationResult.Success">
            <summary>
            Identifica se a operação foi executada com sucesso.
            </summary>
        </member>
        <member name="P:Colosoft.Business.OperationResult.Message">
            <summary>
            Mensagem do resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.OperationResult`1">
            <summary>
            Representa o resultado 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.OperationResult`1.#ctor(System.Boolean,Colosoft.IMessageFormattable,`0)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="success"></param>
            <param name="message"></param>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Business.OperationResult`1.#ctor(System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="success"></param>
            <param name="message"></param>
        </member>
        <member name="M:Colosoft.Business.OperationResult`1.#ctor(`0)">
            <summary>
            Cria a instancia com o resultado da operação.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Colosoft.Business.OperationResult`1.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="P:Colosoft.Business.OperationResult`1.Result">
            <summary>
            Resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.OperationResult`2">
            <summary>
            Representa o resultado de uma operação que possui um método de execução.
            </summary>
            <typeparam name="TArg"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Colosoft.Business.OperationResult`2.#ctor(System.Boolean,Colosoft.IMessageFormattable,System.Func{`0,`1})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="success">Identifica se a operação foi executa com sucesso.</param>
            <param name="message">Mensagem da operação.</param>
            <param name="execute">Comando que será usado para execução.</param>
        </member>
        <member name="M:Colosoft.Business.OperationResult`2.Execute(`0)">
            <summary>
            Executa a operação encapsulada.
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.PrepareNestedQueriesResult">
            <summary>
            Armazena os dados da preparação da consultas aninhadas
            de uma determinada entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.PrepareNestedQueriesResult.#ctor(Colosoft.Query.Queryable,Colosoft.Business.IEntityLoader,System.String,Colosoft.Business.IEntityTypeManager,System.Collections.Generic.IList{Colosoft.Business.EntityLoaderCreatorArgs},System.Collections.Generic.Queue{System.Exception})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryable">Consulta associada.</param>
            <param name="entityLoader"></param>
            <param name="uiContext"></param>
            <param name="entityTypeManager"></param>
            <param name="parentResult"></param>
            <param name="exceptions"></param>
        </member>
        <member name="P:Colosoft.Business.PrepareNestedQueriesResult.EntityTypeManager">
            <summary>
            Gerenciador dos tipos de entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PrepareNestedQueriesResult.UiContext">
            <summary>
            Contexto visual.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PrepareNestedQueriesResult.EntityLoader">
            <summary>
            Loader da entidade associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PrepareNestedQueriesResult.Queryable">
            <summary>
            Consulta associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PrepareNestedQueriesResult.ParentResult">
            <summary>
            Resultados carregados para o pai da consulta.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PrepareNestedQueriesResult.Exceptions">
            <summary>
            Erros ocorridos.
            </summary>
        </member>
        <member name="T:Colosoft.Business.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.BaseEntityList_EntityInstanceExists">
            <summary>
              Looks up a localized string similar to O registro da entidade &apos;{0}&apos; com a chave &apos;{1}&apos; já existem na lista pertencente a entidade &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.BaseEntityList_WithoutOwner">
            <summary>
              Looks up a localized string similar to Sem pai.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Entity_PropertyNotFound">
            <summary>
              Looks up a localized string similar to Propriedade &apos;{0}&apos; não foi encontrada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityEventManager_GetEntityEventInfosError">
            <summary>
              Looks up a localized string similar to Ocorreu um erro ao recuperar as informações de eventos da entidade &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityEventManager_GetEventTypeImplementationError">
            <summary>
              Looks up a localized string similar to Ocorreu um erro a recuperar a implementação para o tipo de evento &apos;{0}&apos; para a entidade &apos;{1}&apos; com o export id &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLinkList_ExpectedEntityOfModel">
            <summary>
              Looks up a localized string similar to Expected IEntityOfModel..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLinksList_CouldNotCreateTheEntityLink">
            <summary>
              Looks up a localized string similar to Não foi possível criar a entidade do link &apos;{0}&apos; com a entidade &apos;{1}&apos; &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderChildContainer_DuplicateChildEntryWithName">
            <summary>
              Looks up a localized string similar to Existe uma entrada de filho duplicada para o nome &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderLinkInfo_ChildUidPropertyUndefined">
            <summary>
              Looks up a localized string similar to (EntityType {0}) A propriedade uid do filho &apos;{1}&apos; associada com o link &apos;{2}&apos; não foi definida..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderLinkInfo_ForeignKeyPropertyUndefined">
            <summary>
              Looks up a localized string similar to (EntityType {0}) A propriedade de chave estrangeira do filho &apos;{1}&apos; associada com o link &apos;{2}&apos; não foi definida..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderOfModel_ChildOfLinkNotFound">
            <summary>
              Looks up a localized string similar to O filho &apos;{0}&apos; da entidade &apos;{1}&apos; associado com o link &apos;{2}&apos; não foi encontrado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderOfModel_CreatorUndefined">
            <summary>
              Looks up a localized string similar to Creator undefined on load of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderOfModel_FaillOnLoadChildrenFromEntity">
            <summary>
              Looks up a localized string similar to Não foi possível carregar os dados dos filhos de &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderOfModel_LoadChildFromEntityError">
            <summary>
              Looks up a localized string similar to Não foi possível carregar os dados do filho &apos;{0}&apos; da entidade &apos;{1}&apos;, pelo motivo: {2}.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderOfModel_LoadLinkFromEntityError">
            <summary>
              Looks up a localized string similar to Não foi possível carregar os dados da ligação &apos;{0}&apos; da entidade &apos;{1}&apos;, pelo motivo: {2}.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderOfModel_LoadReferenceFromEntityError">
            <summary>
              Looks up a localized string similar to Não foi possível carregar os dados da referência &apos;{0}&apos; da entidade &apos;{1}&apos;, pelo motivo: {2}.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderReference_ParentPropertyNotFound">
            <summary>
              Looks up a localized string similar to Não foi possível carregar a referência, a propriedade &apos;{0}&apos; não foi encontrada no tipo &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.EntityLoaderReferenceContainer_DuplicateReferebceEntryWithName">
            <summary>
              Looks up a localized string similar to Existe uma entrada de referência duplicada para o nome &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_InvalidCustomizationValue">
            <summary>
              Looks up a localized string similar to Customização não identificada indica que o valor de &apos;{0}&apos; é inválido..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_InvalidList">
            <summary>
              Looks up a localized string similar to A lista da instância não é a {0}..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_ItemMustBuUniqueInList">
            <summary>
              Looks up a localized string similar to O Item deve ser único na lista..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_KeyNotFound">
            <summary>
              Looks up a localized string similar to Chave {0} não encontrada..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_ValueDidNotCheckDigits">
            <summary>
              Looks up a localized string similar to O campo &apos;{0}&apos; não é válido..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_ValueHasInvalidChar">
            <summary>
              Looks up a localized string similar to O valor do campo &apos;{0}&apos; possui um caractere inválido..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_ValueInvalidByCustomization">
            <summary>
              Looks up a localized string similar to O valor do campo &apos;{0}&apos; é inválido..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_ValueInvalidLength">
            <summary>
              Looks up a localized string similar to O valor campo &apos;{0}&apos; não tem um comprimento válido..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_ValueIsRquiredOrNecessaryToProperty">
            <summary>
              Looks up a localized string similar to O campo &apos;{0}&apos; é requerido ou necessário..
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_ValueNotInRange">
            <summary>
              Looks up a localized string similar to O valor do campo &apos;{0}&apos; não está no intervalo permitido.
            </summary>
        </member>
        <member name="P:Colosoft.Business.Properties.Resources.Exception_ValueNotProperlyFormatted">
            <summary>
              Looks up a localized string similar to O valor do campo&apos;{0}&apos; não está no formato correto ou está parcialmente preenchido..
            </summary>
        </member>
        <member name="T:Colosoft.Business.PropertyUIConfiguration">
            <summary>
            Armazena as configuração da propriedade no contexto da UI.
            </summary>
        </member>
        <member name="M:Colosoft.Business.PropertyUIConfiguration.#ctor(System.String,System.String,System.String,Colosoft.Business.PropertyUIConfigurationParameter[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="uiContext"></param>
            <param name="controlType"></param>
            <param name="style"></param>
            <param name="values"></param>
        </member>
        <member name="P:Colosoft.Business.PropertyUIConfiguration.UIContext">
            <summary>
            Nome do contexto.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PropertyUIConfiguration.ControlType">
            <summary>
            Tipo do controle.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PropertyUIConfiguration.Style">
            <summary>
            Nome do estilo associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PropertyUIConfiguration.Values">
            <summary>
            Valores da configuração.
            </summary>
        </member>
        <member name="T:Colosoft.Business.PropertyUIConfigurationParameter">
            <summary>
            Armazena os dados de um parametro.
            </summary>
        </member>
        <member name="M:Colosoft.Business.PropertyUIConfigurationParameter.#ctor(System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="text"></param>
            <param name="value"></param>
        </member>
        <member name="P:Colosoft.Business.PropertyUIConfigurationParameter.Text">
            <summary>
            Texto do parametro.
            </summary>
        </member>
        <member name="P:Colosoft.Business.PropertyUIConfigurationParameter.Value">
            <summary>
            Valor do parametro.
            </summary>
        </member>
        <member name="T:Colosoft.Business.ProxyListItemBase`2">
            <summary>
            Implementação base de item de lista de seleção.
            </summary>
            <typeparam name="TBusiness"></typeparam>
            <typeparam name="TPointer"></typeparam>
        </member>
        <member name="M:Colosoft.Business.ProxyListItemBase`2.SelectedChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Método para detecção de alterações na lista de selecionados, evita que alterações efetuadas
            fora do Wrapper não sejam observadas
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.ProxyListItemBase`2.Dispose(System.Boolean)">
            <summary>
            Método para liberar recursos alocados pelo item.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Colosoft.Business.ProxyListItemBase`2.#ctor(Colosoft.Business.IEntity,`0,Colosoft.Collections.IObservableCollection{`1},System.Func{`0,`1},System.Func{`0,`1,System.Boolean})">
            <summary>
            Construtor parametrizado.
            </summary>
            <param name="controller">Controlador da coleção</param>
            <param name="data">Item filho.</param>
            <param name="selected">Lista de itens filhos associados ao pai.</param>
            <param name="createCall">Método de criação de entidades de relaciomento entre pai e um filho.</param>
            <param name="compareCall">Método de comparação que indica se um relacionamento se refere ao filho passado como parâmetro.</param>
        </member>
        <member name="M:Colosoft.Business.ProxyListItemBase`2.Dispose">
            <summary>
            Liberação de recursos alocados pela instância.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ProxyListItemBase`2.Controller">
            <summary>
            Entidade que determina o estado do item
            </summary>
        </member>
        <member name="P:Colosoft.Business.ProxyListItemBase`2.CreateCall">
            <summary>
            Chamada de criação de ponteiro.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ProxyListItemBase`2.CompareCall">
            <summary>
            Chamada de comparação de item com ponteiro.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ProxyListItemBase`2.Selected">
            <summary>
            Lista dos itens selecionados (ponteiros).
            </summary>
        </member>
        <member name="P:Colosoft.Business.ProxyListItemBase`2.Data">
            <summary>
            Objeto encapsulado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ProxyListItemBase`2.IsSelected">
            <summary>
            Indicador do estado de seleção do item.
            </summary>
        </member>
        <member name="P:Colosoft.Business.ProxyListItemBase`2.IsReadOnly">
            <summary>
            Indica se o estado dos itens da coleção pode ser alterado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.QueryableEntityVirtualListLoader`1">
            <summary>
            Implementação do loader para 
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.QueryableEntityVirtualListLoader`1.#ctor(Colosoft.Business.IEntityTypeManager,Colosoft.Business.IEntityLoader,Colosoft.Query.Queryable,System.String,System.Boolean,System.Func{System.Object,`0},System.String)">
            <summary>
            Cria a instancia com o suporte para estratégia de vinculação.
            </summary>
            <param name="entityTypeManager">Gerenciador dos tipos de entidades.</param>
            <param name="entityLoader">Loader da entidade.</param>
            <param name="queryable"></param>
            <param name="countExpression"></param>
            <param name="isLazy">Identifica se é para fazer uma carga tardia.</param>
            <param name="castHandler">Instancia do manipulador que vai realizar o cast do item do resultado.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
        </member>
        <member name="M:Colosoft.Business.QueryableEntityVirtualListLoader`1.ExecuteCount(Colosoft.Query.Queryable)">
            <summary>
            Executa a primeira consulta para recuperar o quantidade de registro
            da lista.
            </summary>
            <param name="query">Consulta de deve ser executada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.QueryableEntityVirtualListLoader`1.Load(Colosoft.Collections.IObservableCollection,System.Int32,System.Int32,System.Boolean,System.Object)">
            <summary>
            Método usado para recupera os dados para o preenchimento da lista virtual.
            </summary>
            <param name="virtualList"></param>
            <param name="startRow"></param>
            <param name="pageSize"></param>
            <param name="needItemsCount"></param>
            <param name="referenceObject"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.QueryableEntityVirtualListLoader`1.CastHandler">
            <summary>
            Método usado para fazer o cast do tipo do resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.QueryableVirtualList`1">
            <summary>
            Implementação de uma lista virtual que possui um queryable associado.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.#ctor(Colosoft.Query.Queryable,System.Int32,Colosoft.Collections.VirtualListLoader{`0},Colosoft.Query.QueryableExecuterHandler{`0},System.Object,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryable">Consulta associada.</param>
            <param name="pageSize"></param>
            <param name="loader"></param>
            <param name="executeSelect">Referencia do método que será usado para executar a seleção dos dados.</param>
            <param name="referenceObject"></param>
            <param name="bindStrategy"></param>
            <param name="objectCreator"></param>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Aplica a ordenação.
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.ApplySort(System.String)">
            <summary>
            Aplica a ordenação.
            </summary>
            <param name="sortExpression"></param>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.RemoveSort">
            <summary>
            Remove a ordenação.
            </summary>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.ExecuteSelect(Colosoft.Query.Queryable)">
            <summary>
            Método acionado quando a consulta for executada.
            </summary>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.Colosoft#Collections#ISearchParameterDescriptionContainer#SearchParameterDescriptions">
            <summary>
            Descrições dos parametros de pesquisa.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.Colosoft#Query#IQueryableContainer#Queryable">
            <summary>
            Consulta associada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.System#Linq#IQueryable#ElementType">
            <summary>
            Tipo de elemento associado.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.System#Linq#IQueryable#Expression">
            <summary>
            Expressão associada com a instancia;
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.System#Linq#IQueryable#Provider">
            <summary>
            Provedor de consulta.
            </summary>
        </member>
        <member name="T:Colosoft.Business.QueryableVirtualList`1.DataPage">
            <summary>
            Representa uma página de dados.
            </summary>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.DataPage.NotifyError(System.Exception)">
            <summary>
            Notifica um erro.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.DataPage.Populate(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Popula a página.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.DataPage.GetEnumerator">
            <summary>
            Recupera o enumerador dos itens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.DataPage.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador dos itens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualList`1.DataPage.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.DataPage.Count">
            <summary>
            Quantidade de itens.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.DataPage.HasError">
            <summary>
            Identifica se possui erros.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.DataPage.IsPopulated">
            <summary>
            Identifica se está populada.
            </summary>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualList`1.DataPage.Item(System.Int32)">
            <summary>
            Recupera e define o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.QueryableVirtualListLoader`1">
            <summary>
            Implementação do loader para resultado de consulta que serão usados em listas virtuais.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualListLoader`1.#ctor(Colosoft.Query.Queryable,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="queryable"></param>
            <param name="countExpression"></param>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualListLoader`1.#ctor(Colosoft.Query.Queryable,System.String,Colosoft.Query.IQueryResultBindStrategy,Colosoft.Query.IQueryResultObjectCreator,System.Func{System.Object,`0})">
            <summary>
            Cria a instancia com o suporte para estratégia de vinculação.
            </summary>
            <param name="queryable"></param>
            <param name="countExpression"></param>
            <param name="bindStrategy"></param>
            <param name="objectCreator"></param>
            <param name="castHandler">Instancia do manipulador que vai realizar o cast do item do resultado.</param>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualListLoader`1.ExecuteCount(Colosoft.Query.Queryable)">
            <summary>
            Executa a primeira consulta para recuperar o quantidade de registro
            da lista.
            </summary>
            <param name="query">Consulta de deve ser executada.</param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.QueryableVirtualListLoader`1.Load(Colosoft.Collections.IObservableCollection,System.Int32,System.Int32,System.Boolean,System.Object)">
            <summary>
            Método usado para recupera os dados para o preenchimento da lista virtual.
            </summary>
            <param name="virtualList"></param>
            <param name="startRow"></param>
            <param name="pageSize"></param>
            <param name="needItemsCount"></param>
            <param name="referenceObject"></param>
            <returns></returns>
        </member>
        <member name="P:Colosoft.Business.QueryableVirtualListLoader`1.CastHandler">
            <summary>
            Método usado para fazer o cast do tipo do resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.SaveOperationHandler">
            <summary>
            Assinatura do método usado para salvar os dados de uma operação.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.SaveOperationResult">
            <summary>
            Implementação do resultado da uma operação de save.
            </summary>
        </member>
        <member name="M:Colosoft.Business.SaveOperationResult.#ctor(System.Boolean,Colosoft.IMessageFormattable,Colosoft.Business.SaveOperationHandler)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="success">Identifica se a operação foi executa com sucesso.</param>
            <param name="message">Mensagem da operação.</param>
            <param name="save">Comando que será usado para execução.</param>
        </member>
        <member name="M:Colosoft.Business.SaveOperationResult.Save(Colosoft.Data.IPersistenceSession)">
            <summary>
            Salva os dados do resultad.
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.SaveResult">
            <summary>
            Armazena o resultado da operação salvar.
            </summary>
        </member>
        <member name="M:Colosoft.Business.SaveResult.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:Colosoft.Business.SaveResult.#ctor(System.Boolean,Colosoft.IMessageFormattable)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="success">Identifica se a operação foi realizada com sucesso.</param>
            <param name="message">Mensagem do resultado.</param>
        </member>
        <member name="M:Colosoft.Business.SaveResult.op_Implicit(Colosoft.Business.SaveResult)~System.Boolean">
            <summary>
            Converte implicitamente para um Boolean.
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Colosoft.Business.SaveResult.GetMySchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Recupera o esquema XML do tipo.
            </summary>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.SaveResult.GetSchema">
            <summary>
            Recupera o esquema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Colosoft.Business.SaveResult.ReadXml(System.Xml.XmlReader)">
            <summary>
            Lê o xml.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Colosoft.Business.SaveResult.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escreve o xml.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Colosoft.Business.SaveResult.Success">
            <summary>
            Identifica se a operação foi executada com sucesso.
            </summary>
        </member>
        <member name="P:Colosoft.Business.SaveResult.Message">
            <summary>
            Mensagem do resultado.
            </summary>
        </member>
        <member name="T:Colosoft.Business.SimpleTraceableEntity`1">
            <summary>
            Implementação padrão da interface ITraceableEntity.
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Business.SimpleTraceableEntity`1.#ctor(Colosoft.Business.EntityLoaderCreatorArgs{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Colosoft.Business.SimpleTraceableEntity`1.#ctor(`0,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria a instancia com os dados do modelo de dados.
            </summary>
            <param name="dataModel"></param>
            <param name="uiContext"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.SimpleTraceableEntity`1.#ctor(`0,System.String,System.Boolean,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor interno
            </summary>
            <param name="dataModel"></param>
            <param name="uiContext"></param>
            <param name="initialize">Identifica se é para inicializar.</param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.SimpleTraceableEntity`1.InitializeInternal(`0)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="dataModel"></param>
        </member>
        <member name="M:Colosoft.Business.SimpleTraceableEntity`1.OwnerPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acioando quando uma propriedade da instancia pai for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.SimpleTraceableEntity`1.CopyBasicData(Colosoft.Business.IEntity{`0})">
            <summary>
            Copia os dados básicos.
            </summary>
            <param name="to"></param>
        </member>
        <member name="P:Colosoft.Business.SimpleTraceableEntity`1.CreatedDate">
            <summary>
            Data de criação do registro.
            </summary>
        </member>
        <member name="P:Colosoft.Business.SimpleTraceableEntity`1.CreatedProfileId">
            <summary>
            Identificador do perfil usado na criação dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.SimpleTraceableEntity`1.CreatedProfile">
            <summary>
            Informações do perfil que criou a entidade.
            </summary>
        </member>
        <member name="T:Colosoft.Business.SingleEntityQueryResultChangedObserver`1">
            <summary>
            Observer usado para resultados de consulta com apenas uma entidade.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Colosoft.Business.SingleEntityQueryResultChangedObserver`1.#ctor(Colosoft.Business.IEntityLoader,Colosoft.Business.IEntityTypeManager,Colosoft.Query.ISourceContext,System.String,Colosoft.Reflection.TypeName,System.Collections.IList)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="entityLoader">Instancia do loader da entidade associada.</param>
            <param name="entityTypeManager">Instancia do gerenciador dos tipos de entidades.</param>
            <param name="sourceContext">Contexto de origem.</param>
            <param name="uiContext">Contexto de interface com o usuário.</param>
            <param name="typeName">Nome do associado com o observer.</param>
            <param name="collection">Coleção que sera observada.</param>
        </member>
        <member name="M:Colosoft.Business.SingleEntityQueryResultChangedObserver`1.Evaluate(Colosoft.Query.IRecord)">
            <summary>
            Avalia se o registro pertence a coleção observada.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="T:Colosoft.Business.TraceableEntityHelper">
            <summary>
            Classe com método para auxiliar as entidades com rastreamento.
            </summary>
        </member>
        <member name="M:Colosoft.Business.TraceableEntityHelper.InitializeTraceableDataModel(Colosoft.Data.ITraceableModel)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="dataModel"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntityHelper.InitializeTraceableEntity(Colosoft.Business.ITraceableEntity)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntityHelper.InitializeTraceableDataModel(Colosoft.Data.ISimpleTraceableModel)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="dataModel"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntityHelper.InitializeTraceableEntity(Colosoft.Business.ISimpleTraceableEntity)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:Colosoft.Business.TraceableEntity`1">
            <summary>
            Implementação padrão da interface ITraceableEntity.
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:Colosoft.Business.TraceableEntity`1.#ctor(Colosoft.Business.EntityLoaderCreatorArgs{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntity`1.#ctor(`0,System.String,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Cria a instancia com os dados do modelo de dados.
            </summary>
            <param name="dataModel"></param>
            <param name="uiContext"></param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntity`1.#ctor(`0,System.String,System.Boolean,Colosoft.Business.IEntityTypeManager)">
            <summary>
            Construtor interno
            </summary>
            <param name="dataModel"></param>
            <param name="uiContext"></param>
            <param name="initialize">Identifica se é para inicializar.</param>
            <param name="entityTypeManager"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntity`1.InitializeInternal(`0)">
            <summary>
            Inicializa a instancia.
            </summary>
            <param name="dataModel"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntity`1.OwnerPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Método acioando quando uma propriedade da instancia pai for alterada.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntity`1.CopyBasicData(Colosoft.Business.IEntity{`0})">
            <summary>
            Copia os dados básicos.
            </summary>
            <param name="to"></param>
        </member>
        <member name="M:Colosoft.Business.TraceableEntity`1.Deactivate">
            <summary>
            Desativa a entidade.
            </summary>
        </member>
        <member name="M:Colosoft.Business.TraceableEntity`1.Activate">
            <summary>
            Ativa a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.TraceableEntity`1.CreatedDate">
            <summary>
            Data de criação do registro.
            </summary>
        </member>
        <member name="P:Colosoft.Business.TraceableEntity`1.CreatedProfileId">
            <summary>
            Identificador do perfil usado na criação dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.TraceableEntity`1.ActivatedDate">
            <summary>
            Data de ativação dos dados.
            </summary>
        </member>
        <member name="P:Colosoft.Business.TraceableEntity`1.ExpiredDate">
            <summary>
            Data que os dados expiraram.
            </summary>
        </member>
        <member name="P:Colosoft.Business.TraceableEntity`1.IsExpired">
            <summary>
            Indica se a instância está expirada
            </summary>
        </member>
        <member name="P:Colosoft.Business.TraceableEntity`1.IsActive">
            <summary>
            Indica se a instância está expirada
            </summary>
        </member>
        <member name="P:Colosoft.Business.TraceableEntity`1.CreatedProfile">
            <summary>
            Informações do perfil que criou a entidade.
            </summary>
        </member>
        <member name="P:Colosoft.Business.TraceableEntity`1.CanEdit">
            <summary>
            Determina se a instancia da entidade pode ser editada.
            </summary>
        </member>
    </members>
</doc>
